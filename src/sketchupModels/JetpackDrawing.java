//Compiled from Jetpack by SketchupModelJAXB

package sketchupModels;
import javax.media.opengl.GL2;
import javax.media.opengl.glu.GLU;
import game.Building;
import java.nio.DoubleBuffer;
import java.nio.FloatBuffer;
import java.nio.IntBuffer;
import com.jogamp.opengl.util.GLBuffers;
import java.util.HashMap;
import java.util.Map;
public class JetpackDrawing
{
private int displayList = -1;
private Map<String, com.jogamp.opengl.util.texture.Texture> imageMap = new HashMap<String, com.jogamp.opengl.util.texture.Texture>(); // map of ID's to textures
public JetpackDrawing(GL2 gl, GLU glu) {
    generate(gl, glu);
}
public void draw(GL2 gl, GLU glu) {
  gl.glCallList(displayList);
}
private com.jogamp.opengl.util.texture.Texture ID143;
private void generate(GL2 gl, GLU glu){
ID143 = Building.setupTexture(gl, "material_1.jpg");

displayList = gl.glGenLists(1);
gl.glNewList(displayList, GL2.GL_COMPILE);
  gl.glPushAttrib(GL2.GL_POLYGON_BIT);
    gl.glFrontFace(GL2.GL_CCW);
    gl.glCullFace(GL2.GL_BACK);
    gl.glEnable(GL2.GL_CULL_FACE);
gl.glPushMatrix();
gl.glScaled(0.08333333333333333, 0.08333333333333333, 0.08333333333333333);
gl.glRotatef(-90,1,0,0);
ID2(gl);
ID10(gl);
ID16(gl);
ID24(gl);
ID30(gl);
ID38(gl);
ID44(gl);
ID50(gl);
ID56(gl);
ID62(gl);
ID68(gl);
ID74(gl);
ID80(gl);
ID86(gl);
ID92(gl);
ID98(gl);
ID104(gl);
ID110(gl);
ID116(gl);
ID122(gl);
ID128(gl);
ID134(gl);
ID140(gl);
ID153(gl);
ID159(gl);
ID165(gl);
ID171(gl);
ID179(gl);
ID185(gl);
ID193(gl);
ID201(gl);
ID207(gl);
ID213(gl);
ID219(gl);
       gl.glPopMatrix();
   gl.glPopAttrib();
gl.glEndList();
}
//Trailer


private void ID2(GL2 gl){
float[] positionsArray = {
26.510538f,32.096664f,59.09674f,27.141706f,32.17976f,51.974983f,26.510538f,32.096664f,50.84674f,27.675222f,32.25f,59.09674f,27.675222f,32.25f,50.84674f,28.839909f,32.096664f,42.59674f,27.675222f,32.25f,42.59674f,28.839909f,32.096664f,59.09674f,27.141706f,32.17976f,51.974983f,27.675222f,32.25f,50.84674f,26.510538f,32.096664f,50.84674f,27.675222f,56.0f,42.59674f,27.141706f,32.17976f,51.974983f,27.675222f,32.25f,50.84674f,26.510538f,56.0f,42.59674f,26.510538f,32.096664f,50.84674f,27.141706f,32.17976f,51.974983f,25.425222f,31.647114f,59.09674f,26.510538f,32.096664f,42.59674f,25.425222f,31.647114f,42.59674f,23.328556f,26.585314f,59.09674f,23.328556f,28.914686f,59.09674f,23.175222f,27.75f,59.09674f,23.778109f,25.5f,59.09674f,23.778109f,30.0f,59.09674f,24.493242f,24.56802f,59.09674f,24.493242f,30.93198f,59.09674f,24.610882f,27.75f,59.09674f,24.715296f,26.95689f,59.09674f,25.425222f,23.852886f,59.09674f,25.021425f,26.217829f,59.09674f,25.508406f,25.583183f,59.09674f,26.510538f,23.403334f,59.09674f,26.143053f,25.096203f,59.09674f,26.882113f,24.790073f,59.09674f,27.675222f,23.25f,59.09674f,27.675222f,24.68566f,59.09674f,28.839909f,23.403334f,59.09674f,28.468332f,24.790073f,59.09674f,29.207394f,25.096203f,59.09674f,29.925222f,23.852886f,59.09674f,29.84204f,25.583183f,59.09674f,30.329021f,26.217829f,59.09674f,30.857204f,24.56802f,59.09674f,30.635149f,26.95689f,59.09674f,30.739565f,27.75f,59.09674f,24.715296f,28.54311f,59.09674f,25.021425f,29.282171f,59.09674f,25.508406f,29.916817f,59.09674f,26.143053f,30.403797f,59.09674f,26.882113f,30.709927f,59.09674f,27.675222f,30.81434f,59.09674f,28.468332f,30.709927f,59.09674f,29.207394f,30.403797f,59.09674f,29.925222f,31.647114f,59.09674f,29.84204f,29.916817f,59.09674f,30.329021f,29.282171f,59.09674f,30.857204f,30.93198f,59.09674f,30.635149f,28.54311f,59.09674f,31.572338f,25.5f,59.09674f,31.572338f,30.0f,59.09674f,32.02189f,26.585314f,59.09674f,32.02189f,28.914686f,59.09674f,32.175224f,27.75f,59.09674f,29.925222f,31.647114f,42.59674f,23.328556f,28.914686f,42.59674f,23.328556f,26.585314f,42.59674f,23.175222f,27.75f,42.59674f,23.778109f,30.0f,42.59674f,23.778109f,25.5f,42.59674f,24.493242f,30.93198f,42.59674f,24.493242f,24.56802f,42.59674f,25.425222f,31.647114f,42.59674f,24.913836f,27.75f,42.59674f,25.007929f,28.464699f,42.59674f,25.283792f,29.130693f,42.59674f,25.722628f,29.702595f,42.59674f,26.510538f,32.096664f,42.59674f,26.294529f,30.141432f,42.59674f,26.960524f,30.417295f,42.59674f,27.675222f,32.25f,42.59674f,27.675222f,30.511387f,42.59674f,28.839909f,32.096664f,42.59674f,28.389923f,30.417295f,42.59674f,30.857204f,30.93198f,42.59674f,30.066654f,29.130693f,42.59674f,29.62782f,29.702595f,42.59674f,30.342518f,28.464699f,42.59674f,30.43661f,27.75f,42.59674f,25.425222f,23.852886f,42.59674f,25.007929f,27.035301f,42.59674f,25.283792f,26.369307f,42.59674f,25.722628f,25.797405f,42.59674f,26.510538f,23.403334f,42.59674f,26.294529f,25.358568f,42.59674f,26.960524f,25.082705f,42.59674f,27.675222f,23.25f,42.59674f,27.675222f,24.988613f,42.59674f,28.389923f,25.082705f,42.59674f,28.839909f,23.403334f,42.59674f,29.055916f,25.358568f,42.59674f,29.925222f,23.852886f,42.59674f,29.62782f,25.797405f,42.59674f,30.066654f,26.369307f,42.59674f,30.857204f,24.56802f,42.59674f,30.342518f,27.035301f,42.59674f,31.572338f,30.0f,42.59674f,31.572338f,25.5f,42.59674f,32.02189f,26.585314f,42.59674f,32.02189f,28.914686f,42.59674f,32.175224f,27.75f,42.59674f,27.675222f,32.25f,42.59674f,28.389923f,30.417295f,40.34674f,27.675222f,30.511387f,40.34674f,28.839909f,32.096664f,42.59674f,26.510538f,32.096664f,50.84674f,27.675222f,32.25f,42.59674f,26.510538f,32.096664f,42.59674f,27.675222f,32.25f,50.84674f,27.675222f,56.0f,42.59674f,27.675222f,32.25f,42.59674f,27.09288f,58.75f,42.59674f,27.141706f,32.17976f,51.974983f,27.675222f,56.0f,42.59674f,27.09288f,56.0f,42.59674f,27.141706f,32.17976f,51.974983f,26.510538f,56.0f,42.59674f,27.675222f,56.0f,42.59674f,26.510538f,56.0f,42.59674f,26.510538f,56.0f,42.59674f,26.510538f,32.096664f,42.59674f,25.425222f,31.647114f,42.59674f,26.960524f,30.417295f,40.34674f,26.294529f,30.141432f,40.34674f,26.510538f,32.096664f,42.59674f,24.493242f,30.93198f,42.59674f,23.778109f,30.0f,42.59674f,23.328556f,28.914686f,42.59674f,23.175222f,27.75f,42.59674f,23.328556f,26.585314f,42.59674f,23.778109f,25.5f,42.59674f,24.493242f,24.56802f,42.59674f,25.425222f,23.852886f,42.59674f,26.510538f,23.403334f,42.59674f,27.675222f,23.25f,42.59674f,28.839909f,23.403334f,59.09674f,27.675222f,23.25f,42.59674f,28.839909f,23.403334f,42.59674f,27.675222f,23.25f,59.09674f,27.675222f,19.75f,59.09674f,23.524923f,23.25f,59.09674f,23.524923f,19.75f,59.09674f,27.675222f,23.25f,59.09674f,28.839909f,19.596666f,59.09674f,28.839909f,23.403334f,59.09674f,28.839909f,23.403334f,42.59674f,29.925222f,23.852886f,42.59674f,30.857204f,24.56802f,42.59674f,31.572338f,25.5f,42.59674f,32.02189f,26.585314f,42.59674f,32.175224f,27.75f,42.59674f,32.02189f,28.914686f,42.59674f,31.572338f,30.0f,42.59674f,30.857204f,30.93198f,42.59674f,28.839909f,32.096664f,42.59674f,29.055916f,30.141432f,42.59674f,28.389923f,30.417295f,42.59674f,29.925222f,31.647114f,42.59674f,29.62782f,29.702595f,43.84674f,30.066654f,29.130693f,42.59674f,30.066654f,29.130693f,43.84674f,29.62782f,29.702595f,42.59674f,29.62782f,29.702595f,42.59674f,30.066654f,29.130693f,40.34674f,30.066654f,29.130693f,42.59674f,29.62782f,29.702595f,40.34674f,29.62782f,29.702595f,42.59674f,30.857204f,30.93198f,42.59674f,29.62782f,29.702595f,42.59674f,29.62782f,29.702595f,40.34674f,30.857204f,30.93198f,42.59674f,30.066654f,29.130693f,40.34674f,32.02189f,28.914686f,42.59674f,30.342518f,28.464699f,40.34674f,31.572338f,30.0f,42.59674f,30.342518f,27.035301f,40.34674f,32.175224f,27.75f,42.59674f,32.02189f,26.585314f,42.59674f,30.43661f,27.75f,40.34674f,29.62782f,25.797405f,40.34674f,31.572338f,25.5f,42.59674f,30.857204f,24.56802f,42.59674f,30.066654f,26.369307f,40.34674f,29.925222f,23.852886f,42.59674f,28.389923f,25.082705f,40.34674f,29.055916f,25.358568f,40.34674f,28.839909f,23.403334f,42.59674f,27.675222f,23.25f,42.59674f,23.024923f,19.75f,42.59674f,23.024923f,23.25f,42.59674f,27.675222f,19.75f,42.59674f,28.839909f,23.403334f,42.59674f,28.839909f,19.596666f,42.59674f,23.024923f,27.75f,42.59674f,21.675222f,14.085315f,42.59674f,21.675222f,27.75f,42.59674f,23.024923f,14.085315f,42.59674f,27.675222f,23.25f,42.59674f,26.960524f,25.082705f,40.34674f,27.675222f,24.988613f,40.34674f,26.510538f,23.403334f,42.59674f,25.425222f,23.852886f,42.59674f,25.722628f,25.797405f,40.34674f,26.294529f,25.358568f,40.34674f,24.493242f,24.56802f,42.59674f,23.328556f,26.585314f,42.59674f,25.283792f,26.369307f,40.34674f,23.778109f,25.5f,42.59674f,25.007929f,27.035301f,40.34674f,23.328556f,28.914686f,42.59674f,24.913836f,27.75f,40.34674f,23.175222f,27.75f,42.59674f,25.007929f,28.464699f,40.34674f,23.778109f,30.0f,42.59674f,25.722628f,29.702595f,40.34674f,25.283792f,29.130693f,40.34674f,24.493242f,30.93198f,42.59674f,27.09288f,56.0f,42.59674f,28.839909f,32.096664f,42.59674f,28.389923f,30.417295f,40.34674f,28.389923f,30.417295f,42.59674f,28.389923f,30.417295f,43.84674f,27.675222f,30.511387f,42.59674f,28.389923f,30.417295f,42.59674f,27.675222f,30.511387f,43.84674f,28.389923f,30.417295f,42.59674f,27.675222f,30.511387f,40.34674f,28.389923f,30.417295f,40.34674f,27.675222f,30.511387f,42.59674f,26.960524f,30.417295f,42.59674f,26.960524f,30.417295f,43.84674f,26.960524f,30.417295f,40.34674f,26.294529f,30.141432f,42.59674f,26.294529f,30.141432f,43.84674f,26.294529f,30.141432f,40.34674f,25.722628f,29.702595f,42.59674f,25.722628f,29.702595f,43.84674f,25.722628f,29.702595f,40.34674f,25.283792f,29.130693f,43.84674f,25.283792f,29.130693f,42.59674f,25.283792f,29.130693f,40.34674f,25.007929f,28.464699f,43.84674f,25.007929f,28.464699f,42.59674f,25.007929f,28.464699f,40.34674f,24.913836f,27.75f,43.84674f,24.913836f,27.75f,42.59674f,24.913836f,27.75f,42.59674f,24.913836f,27.75f,40.34674f,25.007929f,27.035301f,43.84674f,25.007929f,27.035301f,42.59674f,25.007929f,27.035301f,40.34674f,25.283792f,26.369307f,43.84674f,25.283792f,26.369307f,42.59674f,25.283792f,26.369307f,42.59674f,25.283792f,26.369307f,40.34674f,25.722628f,25.797405f,43.84674f,25.722628f,25.797405f,42.59674f,25.722628f,25.797405f,42.59674f,25.722628f,25.797405f,40.34674f,26.294529f,25.358568f,42.59674f,26.294529f,25.358568f,43.84674f,26.294529f,25.358568f,40.34674f,26.294529f,25.358568f,42.59674f,26.960524f,25.082705f,42.59674f,26.960524f,25.082705f,43.84674f,26.960524f,25.082705f,40.34674f,27.675222f,24.988613f,42.59674f,27.675222f,24.988613f,43.84674f,27.675222f,24.988613f,40.34674f,28.389923f,25.082705f,42.59674f,28.389923f,25.082705f,43.84674f,28.389923f,25.082705f,40.34674f,29.055916f,25.358568f,42.59674f,29.055916f,25.358568f,43.84674f,29.055916f,25.358568f,40.34674f,29.055916f,25.358568f,42.59674f,29.62782f,25.797405f,42.59674f,29.62782f,25.797405f,43.84674f,29.62782f,25.797405f,40.34674f,30.066654f,26.369307f,43.84674f,30.066654f,26.369307f,42.59674f,30.066654f,26.369307f,42.59674f,30.066654f,26.369307f,40.34674f,30.342518f,27.035301f,43.84674f,30.342518f,27.035301f,42.59674f,30.342518f,27.035301f,40.34674f,30.43661f,27.75f,43.84674f,30.43661f,27.75f,42.59674f,30.43661f,27.75f,40.34674f,30.342518f,28.464699f,43.84674f,30.342518f,28.464699f,42.59674f,30.342518f,28.464699f,42.59674f,30.342518f,28.464699f,40.34674f,26.510538f,56.0f,42.59674f,23.024923f,23.25f,59.09674f,23.024923f,19.75f,59.09674f,23.024923f,14.085315f,59.09674f,21.675222f,18.511833f,59.09674f,21.675222f,14.085315f,59.09674f,21.675222f,19.305037f,59.09674f,21.675222f,23.511833f,59.09674f,21.675222f,24.305037f,59.09674f,21.675222f,27.75f,59.09674f,23.024923f,27.75f,59.09674f,27.675222f,19.75f,59.09674f,28.839909f,19.596666f,42.59674f,27.675222f,19.75f,42.59674f,28.839909f,19.596666f,59.09674f,23.328556f,14.085315f,59.09674f,23.328556f,16.414686f,59.09674f,23.175222f,15.25f,59.09674f,23.778109f,13.0f,59.09674f,23.778109f,17.5f,59.09674f,24.493242f,12.06802f,59.09674f,24.493242f,18.43198f,59.09674f,24.610882f,15.25f,59.09674f,24.715296f,14.45689f,59.09674f,25.425222f,11.352885f,59.09674f,25.021425f,13.71783f,59.09674f,25.508406f,13.083183f,59.09674f,26.510538f,10.903334f,59.09674f,26.143053f,12.596203f,59.09674f,26.882113f,12.290073f,59.09674f,27.675222f,10.75f,59.09674f,27.675222f,12.185658f,59.09674f,28.839909f,10.903334f,59.09674f,28.468332f,12.290073f,59.09674f,29.207394f,12.596203f,59.09674f,29.925222f,11.352885f,59.09674f,29.84204f,13.083183f,59.09674f,30.329021f,13.71783f,59.09674f,30.857204f,12.06802f,59.09674f,30.635149f,14.45689f,59.09674f,30.739565f,15.25f,59.09674f,24.715296f,16.04311f,59.09674f,25.425222f,19.147114f,59.09674f,25.021425f,16.782171f,59.09674f,25.508406f,17.416817f,59.09674f,26.510538f,19.596666f,59.09674f,26.143053f,17.903797f,59.09674f,26.882113f,18.209927f,59.09674f,27.675222f,19.75f,59.09674f,27.675222f,18.31434f,59.09674f,28.839909f,19.596666f,59.09674f,28.468332f,18.209927f,59.09674f,29.207394f,17.903797f,59.09674f,29.925222f,19.147114f,59.09674f,29.84204f,17.416817f,59.09674f,30.329021f,16.782171f,59.09674f,30.857204f,18.43198f,59.09674f,30.635149f,16.04311f,59.09674f,31.572338f,13.0f,59.09674f,31.572338f,17.5f,59.09674f,32.02189f,14.085315f,59.09674f,32.02189f,16.414686f,59.09674f,32.175224f,15.25f,59.09674f,29.925222f,31.647114f,42.59674f,29.62782f,29.702595f,40.34674f,29.055916f,30.141432f,40.34674f,30.857204f,30.93198f,42.59674f,29.925222f,31.647114f,42.59674f,29.055916f,30.141432f,42.59674f,29.055916f,30.141432f,40.34674f,29.055916f,30.141432f,43.84674f,29.055916f,30.141432f,42.59674f,29.055916f,30.141432f,42.59674f,28.389923f,30.417295f,40.34674f,29.055916f,30.141432f,40.34674f,28.389923f,30.417295f,42.59674f,26.386683f,27.75f,43.84674f,26.430588f,28.0835f,43.84674f,26.559313f,28.39427f,43.84674f,26.764088f,28.661137f,43.84674f,27.030952f,28.86591f,43.84674f,27.341724f,28.994635f,43.84674f,27.675222f,29.038542f,43.84674f,28.008722f,28.994635f,43.84674f,28.319494f,28.86591f,43.84674f,28.586359f,28.661137f,43.84674f,28.791134f,28.39427f,43.84674f,28.919859f,28.0835f,43.84674f,28.963764f,27.75f,43.84674f,26.430588f,27.4165f,43.84674f,26.559313f,27.10573f,43.84674f,26.764088f,26.838863f,43.84674f,27.030952f,26.63409f,43.84674f,27.341724f,26.505365f,43.84674f,27.675222f,26.461458f,43.84674f,28.008722f,26.505365f,43.84674f,28.319494f,26.63409f,43.84674f,28.586359f,26.838863f,43.84674f,28.791134f,27.10573f,43.84674f,28.919859f,27.4165f,43.84674f,29.62782f,29.702595f,42.59674f,29.055916f,30.141432f,40.34674f,29.62782f,29.702595f,40.34674f,29.055916f,30.141432f,42.59674f,23.328556f,16.414686f,42.59674f,23.328556f,14.085315f,42.59674f,23.175222f,15.25f,42.59674f,23.778109f,17.5f,42.59674f,23.778109f,13.0f,42.59674f,24.493242f,18.43198f,42.59674f,24.493242f,12.06802f,42.59674f,25.425222f,19.147114f,42.59674f,24.913836f,15.25f,42.59674f,25.007929f,15.9647f,42.59674f,25.283792f,16.630693f,42.59674f,25.722628f,17.202595f,42.59674f,26.510538f,19.596666f,42.59674f,26.294529f,17.641432f,42.59674f,26.960524f,17.917295f,42.59674f,27.675222f,19.75f,42.59674f,27.675222f,18.011387f,42.59674f,28.839909f,19.596666f,42.59674f,28.389923f,17.917295f,42.59674f,30.857204f,18.43198f,42.59674f,30.066654f,16.630693f,42.59674f,29.62782f,17.202595f,42.59674f,30.342518f,15.9647f,42.59674f,30.43661f,15.25f,42.59674f,25.425222f,11.352885f,42.59674f,25.007929f,14.5353f,42.59674f,25.283792f,13.869307f,42.59674f,25.722628f,13.297404f,42.59674f,26.510538f,10.903334f,42.59674f,26.294529f,12.858569f,42.59674f,26.960524f,12.5827055f,42.59674f,27.675222f,10.75f,42.59674f,27.675222f,12.488613f,42.59674f,28.389923f,12.5827055f,42.59674f,28.839909f,10.903334f,42.59674f,29.055916f,12.858569f,42.59674f,29.925222f,11.352885f,42.59674f,29.62782f,13.297404f,42.59674f,30.066654f,13.869307f,42.59674f,30.857204f,12.06802f,42.59674f,30.342518f,14.5353f,42.59674f,31.572338f,17.5f,42.59674f,31.572338f,13.0f,42.59674f,32.02189f,14.085315f,42.59674f,32.02189f,16.414686f,42.59674f,32.175224f,15.25f,42.59674f,27.675222f,19.75f,42.59674f,28.389923f,17.917295f,40.34674f,27.675222f,18.011387f,40.34674f,28.839909f,19.596666f,42.59674f,21.675222f,19.305037f,58.59674f,21.675222f,24.305037f,58.59674f,21.675222f,25.0f,53.682846f,21.675222f,27.75f,53.682846f,21.675222f,18.511833f,58.59674f,21.675222f,25.0f,52.682846f,21.675222f,23.511833f,58.59674f,21.675222f,27.75f,52.682846f,13.425223f,27.75f,53.682846f,13.425223f,27.75f,52.682846f,29.925222f,19.147114f,42.59674f,28.839909f,19.596666f,42.59674f,27.675222f,19.75f,42.59674f,26.510538f,19.596666f,42.59674f,25.425222f,19.147114f,42.59674f,24.493242f,18.43198f,42.59674f,23.778109f,17.5f,42.59674f,23.328556f,16.414686f,42.59674f,23.175222f,15.25f,42.59674f,23.328556f,14.085315f,42.59674f,23.778109f,13.0f,42.59674f,24.493242f,12.06802f,42.59674f,25.425222f,11.352885f,42.59674f,26.510538f,10.903334f,42.59674f,27.675222f,10.75f,50.84674f,27.675222f,10.75f,42.59674f,28.319448f,10.834814f,51.697876f,28.839909f,10.903334f,50.84674f,28.839909f,10.903334f,42.59674f,29.925222f,11.352885f,42.59674f,30.857204f,12.06802f,42.59674f,31.572338f,13.0f,42.59674f,32.02189f,14.085315f,42.59674f,32.175224f,15.25f,42.59674f,32.02189f,16.414686f,42.59674f,31.572338f,17.5f,42.59674f,30.857204f,18.43198f,42.59674f,29.62782f,17.202595f,43.84674f,30.066654f,16.630693f,42.59674f,30.066654f,16.630693f,43.84674f,29.62782f,17.202595f,42.59674f,29.62782f,17.202595f,42.59674f,30.066654f,16.630693f,40.34674f,29.62782f,17.202595f,40.34674f,29.925222f,19.147114f,42.59674f,29.62782f,17.202595f,42.59674f,29.055916f,17.641432f,42.59674f,30.857204f,18.43198f,42.59674f,29.62782f,17.202595f,42.59674f,29.62782f,17.202595f,40.34674f,30.857204f,18.43198f,42.59674f,30.066654f,16.630693f,40.34674f,32.02189f,16.414686f,42.59674f,30.342518f,15.9647f,40.34674f,31.572338f,17.5f,42.59674f,30.342518f,14.5353f,40.34674f,32.175224f,15.25f,42.59674f,32.02189f,14.085315f,42.59674f,30.43661f,15.25f,40.34674f,29.62782f,13.297404f,40.34674f,31.572338f,13.0f,42.59674f,30.857204f,12.06802f,42.59674f,30.066654f,13.869307f,40.34674f,29.925222f,11.352885f,42.59674f,28.389923f,12.5827055f,40.34674f,29.055916f,12.858569f,40.34674f,28.839909f,10.903334f,42.59674f,28.839909f,10.903334f,42.59674f,27.675222f,-11.25f,42.59674f,27.675222f,10.75f,42.59674f,28.257566f,-11.25f,42.59674f,28.839909f,-11.25f,42.59674f,28.839909f,10.903334f,50.84674f,27.675222f,10.75f,42.59674f,28.839909f,10.903334f,42.59674f,27.675222f,10.75f,50.84674f,27.675222f,10.75f,42.59674f,26.960524f,12.5827055f,40.34674f,27.675222f,12.488613f,40.34674f,26.510538f,10.903334f,42.59674f,25.425222f,11.352885f,42.59674f,25.722628f,13.297404f,40.34674f,26.294529f,12.858569f,40.34674f,24.493242f,12.06802f,42.59674f,23.328556f,14.085315f,42.59674f,25.283792f,13.869307f,40.34674f,23.778109f,13.0f,42.59674f,25.007929f,14.5353f,40.34674f,23.328556f,16.414686f,42.59674f,24.913836f,15.25f,40.34674f,23.175222f,15.25f,42.59674f,25.007929f,15.9647f,40.34674f,23.778109f,17.5f,42.59674f,25.722628f,17.202595f,40.34674f,25.283792f,16.630693f,40.34674f,24.493242f,18.43198f,42.59674f,25.425222f,19.147114f,42.59674f,26.960524f,17.917295f,40.34674f,26.294529f,17.641432f,40.34674f,26.510538f,19.596666f,42.59674f,28.839909f,19.596666f,42.59674f,28.389923f,17.917295f,42.59674f,28.839909f,19.596666f,42.59674f,28.389923f,17.917295f,40.34674f,28.389923f,17.917295f,42.59674f,28.389923f,17.917295f,43.84674f,27.675222f,18.011387f,42.59674f,28.389923f,17.917295f,42.59674f,27.675222f,18.011387f,43.84674f,28.389923f,17.917295f,42.59674f,27.675222f,18.011387f,40.34674f,28.389923f,17.917295f,40.34674f,27.675222f,18.011387f,42.59674f,26.960524f,17.917295f,42.59674f,26.960524f,17.917295f,43.84674f,26.960524f,17.917295f,40.34674f,26.294529f,17.641432f,42.59674f,26.294529f,17.641432f,43.84674f,26.294529f,17.641432f,40.34674f,26.294529f,17.641432f,42.59674f,25.722628f,17.202595f,42.59674f,25.722628f,17.202595f,43.84674f,25.722628f,17.202595f,40.34674f,25.283792f,16.630693f,43.84674f,25.283792f,16.630693f,42.59674f,25.283792f,16.630693f,40.34674f,25.007929f,15.9647f,43.84674f,25.007929f,15.9647f,42.59674f,25.007929f,15.9647f,40.34674f,24.913836f,15.25f,43.84674f,24.913836f,15.25f,42.59674f,24.913836f,15.25f,42.59674f,24.913836f,15.25f,40.34674f,25.007929f,14.5353f,43.84674f,25.007929f,14.5353f,42.59674f,25.007929f,14.5353f,40.34674f,25.283792f,13.869307f,43.84674f,25.283792f,13.869307f,42.59674f,25.283792f,13.869307f,40.34674f,25.722628f,13.297404f,43.84674f,25.722628f,13.297404f,42.59674f,25.722628f,13.297404f,40.34674f,26.294529f,12.858569f,42.59674f,26.294529f,12.858569f,43.84674f,26.294529f,12.858569f,40.34674f,26.960524f,12.5827055f,42.59674f,26.960524f,12.5827055f,43.84674f,26.960524f,12.5827055f,40.34674f,27.675222f,12.488613f,42.59674f,27.675222f,12.488613f,43.84674f,27.675222f,12.488613f,40.34674f,28.389923f,12.5827055f,42.59674f,28.389923f,12.5827055f,43.84674f,28.389923f,12.5827055f,40.34674f,29.055916f,12.858569f,42.59674f,29.055916f,12.858569f,43.84674f,29.055916f,12.858569f,40.34674f,29.62782f,13.297404f,42.59674f,29.62782f,13.297404f,43.84674f,29.62782f,13.297404f,40.34674f,29.62782f,13.297404f,42.59674f,30.066654f,13.869307f,43.84674f,30.066654f,13.869307f,42.59674f,30.066654f,13.869307f,40.34674f,30.342518f,14.5353f,43.84674f,30.342518f,14.5353f,42.59674f,30.342518f,14.5353f,40.34674f,30.43661f,15.25f,43.84674f,30.43661f,15.25f,42.59674f,30.43661f,15.25f,42.59674f,30.43661f,15.25f,40.34674f,30.342518f,15.9647f,43.84674f,30.342518f,15.9647f,42.59674f,30.342518f,15.9647f,40.34674f,15.415157f,14.75f,53.682846f,13.425223f,14.75f,53.682846f,14.123524f,25.724182f,53.682846f,14.14056f,25.594772f,53.682846f,14.190511f,25.474182f,53.682846f,14.26997f,25.370628f,53.682846f,14.373524f,25.291168f,53.682846f,14.494114f,25.241219f,53.682846f,14.623524f,25.224182f,53.682846f,14.752933f,25.241219f,53.682846f,14.873524f,25.291168f,53.682846f,14.977077f,25.370628f,53.682846f,15.056537f,25.474182f,53.682846f,15.106486f,25.594772f,53.682846f,15.123524f,25.724182f,53.682846f,14.494114f,26.207144f,53.682846f,14.373524f,26.157194f,53.682846f,14.26997f,26.077734f,53.682846f,14.190511f,25.974182f,53.682846f,14.14056f,25.853592f,53.682846f,14.623524f,26.224182f,53.682846f,14.752933f,26.207144f,53.682846f,14.873524f,26.157194f,53.682846f,14.977077f,26.077734f,53.682846f,15.056537f,25.974182f,53.682846f,15.106486f,25.853592f,53.682846f,15.415157f,25.0f,53.682846f,15.415157f,15.5f,53.682846f,15.415157f,25.0f,52.682846f,13.425223f,14.75f,52.682846f,15.415157f,14.75f,52.682846f,15.415157f,15.5f,52.682846f,27.675222f,10.75f,50.84674f,28.319448f,10.834814f,51.697876f,27.675222f,10.75f,50.84674f,28.839909f,10.903334f,50.84674f,28.319448f,10.834814f,51.697876f,28.839909f,10.903334f,50.84674f,28.257566f,-12.25f,42.59674f,29.925222f,19.147114f,42.59674f,29.62782f,17.202595f,40.34674f,29.055916f,17.641432f,40.34674f,30.857204f,18.43198f,42.59674f,26.386683f,15.25f,43.84674f,26.430588f,15.583499f,43.84674f,26.559313f,15.894271f,43.84674f,26.764088f,16.161137f,43.84674f,27.030952f,16.36591f,43.84674f,27.341724f,16.494635f,43.84674f,27.675222f,16.538542f,43.84674f,28.008722f,16.494635f,43.84674f,28.319494f,16.36591f,43.84674f,28.586359f,16.161137f,43.84674f,29.055916f,17.641432f,43.84674f,28.791134f,15.894271f,43.84674f,28.919859f,15.583499f,43.84674f,28.963764f,15.25f,43.84674f,26.430588f,14.916501f,43.84674f,26.559313f,14.605729f,43.84674f,26.764088f,14.338863f,43.84674f,27.030952f,14.13409f,43.84674f,27.341724f,14.005364f,43.84674f,27.675222f,13.961458f,43.84674f,28.008722f,14.005364f,43.84674f,28.319494f,14.13409f,43.84674f,28.586359f,14.338863f,43.84674f,28.791134f,14.605729f,43.84674f,28.919859f,14.916501f,43.84674f,29.055916f,17.641432f,42.59674f,29.62782f,17.202595f,42.59674f,29.055916f,17.641432f,40.34674f,29.62782f,17.202595f,40.34674f,29.055916f,17.641432f,42.59674f,29.925222f,19.147114f,42.59674f,29.055916f,17.641432f,42.59674f,29.055916f,17.641432f,40.34674f,29.055916f,17.641432f,42.59674f,28.389923f,17.917295f,40.34674f,29.055916f,17.641432f,40.34674f,28.389923f,17.917295f,42.59674f,};
FloatBuffer fbv = GLBuffers.newDirectFloatBuffer(positionsArray, 0);
gl.glVertexPointer(3, GL2.GL_FLOAT, 0, fbv);
gl.glEnableClientState(GL2.GL_VERTEX_ARRAY);
FloatBuffer fbn = null;
float[] normalsArray = {
-0.190039f,0.7092353f,0.6788744f,-0.1305262f,0.9914449f,-0.0f,-0.3486831f,0.9372407f,-0.0f,-0.0f,0.7342544f,0.6788744f,0.0984994f,0.9951371f,-0.0f,0.258819f,0.9659258f,0.0f,0.1305262f,0.9914449f,-0.0f,0.190039f,0.7092353f,0.6788744f,-0.1305262f,0.9914449f,0.0f,-0.1305262f,0.9914449f,0.0f,-0.1305262f,0.9914449f,0.0f,-0.2350293f,-0.0042858f,0.9719788f,0.8902377f,0.1494642f,0.4302758f,0.958515f,0.0935323f,0.2692597f,0.235546f,-0.0050522f,0.9718501f,-0.9520548f,0.0998103f,0.2891878f,-0.8661042f,0.1630828f,0.4725118f,-0.3671272f,0.635883f,0.6788744f,-0.3826834f,0.9238795f,-0.0f,-0.5f,0.8660254f,0.0f,-0.7092353f,-0.190039f,0.6788744f,-0.7092353f,0.190039f,0.6788744f,-0.7342544f,0.0f,0.6788744f,-0.635883f,-0.3671272f,0.6788744f,-0.635883f,0.3671272f,0.6788744f,-0.5191963f,-0.5191963f,0.6788744f,-0.5191963f,0.5191963f,0.6788744f,0.6751284f,0.0f,0.7377002f,0.652124f,0.1747361f,0.7377002f,-0.3671272f,-0.635883f,0.6788744f,0.5846784f,0.3375642f,0.7377002f,0.4773879f,0.4773879f,0.7377002f,-0.190039f,-0.7092353f,0.6788744f,0.3375642f,0.5846784f,0.7377002f,0.1747361f,0.652124f,0.7377002f,-0.0625027f,-0.4747555f,0.8778956f,-0.0f,0.6751284f,0.7377002f,0.1832488f,-0.4424017f,0.8778956f,-0.1747361f,0.652124f,0.7377002f,-0.3375642f,0.5846784f,0.7377002f,0.3671272f,-0.635883f,0.6788744f,-0.4773879f,0.4773879f,0.7377002f,-0.5846784f,0.3375642f,0.7377002f,0.5191963f,-0.5191963f,0.6788744f,-0.652124f,0.1747361f,0.7377002f,-0.6751284f,0.0f,0.7377002f,0.652124f,-0.1747361f,0.7377002f,0.5846784f,-0.3375642f,0.7377002f,0.4773879f,-0.4773879f,0.7377002f,0.3375642f,-0.5846784f,0.7377002f,0.1747361f,-0.652124f,0.7377002f,-0.0f,-0.6751284f,0.7377002f,-0.1747361f,-0.652124f,0.7377002f,-0.3375642f,-0.5846784f,0.7377002f,0.3671272f,0.635883f,0.6788744f,-0.4773879f,-0.4773879f,0.7377002f,-0.5846784f,-0.3375642f,0.7377002f,0.5191963f,0.5191963f,0.6788744f,-0.652124f,-0.1747361f,0.7377002f,0.635883f,-0.3671272f,0.6788744f,0.635883f,0.3671272f,0.6788744f,0.7092353f,-0.190039f,0.6788744f,0.7092353f,0.190039f,0.6788744f,0.7342544f,0.0f,0.6788744f,0.5f,0.8660254f,0.0f,0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,-0.0f,0.791289f,-0.6114424f,0.1036144f,0.7870299f,-0.6081513f,-0.0f,0.791289f,-0.6114424f,0.1036144f,0.7870299f,-0.6081513f,-0.1305262f,0.9914449f,-0.0f,-0.1305262f,0.9914449f,-0.0f,-0.1305262f,0.9914449f,-0.0f,-0.1305262f,0.9914449f,-0.0f,0.2350293f,0.0042858f,-0.9719788f,0.6782801f,0.0f,-0.7348034f,-5.825E-4f,0.9934913f,-0.1139065f,6.61E-5f,0.3328363f,0.9429846f,0.9783051f,0.2071669f,-9.559E-4f,0.0f,-0.3663389f,-0.9304815f,0.0f,-0.3663389f,-0.9304815f,0.0f,-0.3663389f,-0.9304815f,0.0f,-0.3663389f,-0.9304815f,-0.9782868f,0.207163f,0.0061902f,-0.235546f,0.0050522f,-0.9718501f,-0.7371541f,0.0f,-0.6757246f,-0.3956445f,0.6852763f,-0.6114424f,-0.2048007f,0.7643264f,-0.6114424f,-0.3956445f,0.6852763f,-0.6114424f,-0.2048007f,0.7643264f,-0.6114424f,-0.7071068f,0.7071068f,0.0f,-0.8660254f,0.5f,0.0f,-0.9659258f,0.258819f,0.0f,-1.0f,0.0f,0.0f,-0.9659258f,-0.258819f,0.0f,-0.8660254f,-0.5f,0.0f,-0.7071068f,-0.7071068f,0.0f,-0.5f,-0.8660254f,0.0f,-0.258819f,-0.9659258f,0.0f,-0.1305262f,-0.9914449f,0.0f,0.1305262f,-0.9914449f,0.0f,0.1305262f,-0.9914449f,0.0f,0.1305262f,-0.9914449f,0.0f,0.1305262f,-0.9914449f,0.0f,0.0f,-0.4327311f,0.9015231f,0.0f,0.7071068f,0.7071068f,0.0f,-0.7071068f,0.7071068f,0.0f,0.4327311f,0.9015231f,0.7371541f,0.0f,0.6757246f,0.7371541f,0.0f,0.6757246f,0.3826834f,-0.9238795f,0.0f,0.5f,-0.8660254f,0.0f,0.7071068f,-0.7071068f,0.0f,0.8660254f,-0.5f,0.0f,0.9659258f,-0.258819f,0.0f,1.0f,0.0f,0.0f,0.9659258f,0.258819f,0.0f,0.8660254f,0.5f,0.0f,0.7071068f,0.7071068f,0.0f,0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,-0.5191963f,-0.5191963f,-0.6788744f,-0.8660254f,-0.5f,0.0f,-0.635883f,-0.3671272f,-0.6788744f,-0.7071068f,-0.7071068f,0.0f,-0.7933533f,-0.6087614f,0.0f,-0.8660254f,-0.5f,0.0f,-0.8660254f,-0.5f,0.0f,-0.7933533f,-0.6087614f,0.0f,0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,0.7071068f,-0.7071068f,-0.0f,0.7071068f,-0.7071068f,-0.0f,0.7071068f,-0.7071068f,-0.0f,0.6852763f,0.3956445f,-0.6114424f,0.7643264f,0.2048007f,-0.6114424f,0.7643264f,0.2048007f,-0.6114424f,0.6852763f,0.3956445f,-0.6114424f,0.7643264f,-0.2048007f,-0.6114424f,0.791289f,0.0f,-0.6114424f,0.7643264f,-0.2048007f,-0.6114424f,0.791289f,0.0f,-0.6114424f,0.5595258f,-0.5595258f,-0.6114424f,0.6852763f,-0.3956445f,-0.6114424f,0.5595258f,-0.5595258f,-0.6114424f,0.6852763f,-0.3956445f,-0.6114424f,0.3956445f,-0.6852763f,-0.6114424f,0.2048007f,-0.7643264f,-0.6114424f,0.3956445f,-0.6852763f,-0.6114424f,0.2048007f,-0.7643264f,-0.6114424f,0.0f,0.4327311f,-0.9015231f,0.3015113f,-0.3015113f,-0.904534f,0.3015113f,0.3015113f,-0.904534f,0.0f,-0.4327311f,-0.9015231f,0.7371541f,0.0f,-0.6757246f,0.7371541f,0.0f,-0.6757246f,0.5773503f,0.5773503f,-0.5773503f,-0.5773503f,-0.5773503f,-0.5773503f,-0.5773503f,0.5773503f,-0.5773503f,0.5773503f,-0.5773503f,-0.5773503f,-0.0f,-0.791289f,-0.6114424f,-0.2048007f,-0.7643264f,-0.6114424f,-0.0f,-0.791289f,-0.6114424f,-0.2048007f,-0.7643264f,-0.6114424f,-0.3956445f,-0.6852763f,-0.6114424f,-0.5595258f,-0.5595258f,-0.6114424f,-0.3956445f,-0.6852763f,-0.6114424f,-0.5595258f,-0.5595258f,-0.6114424f,-0.7643264f,-0.2048007f,-0.6114424f,-0.6852763f,-0.3956445f,-0.6114424f,-0.6852763f,-0.3956445f,-0.6114424f,-0.7643264f,-0.2048007f,-0.6114424f,-0.7643264f,0.2048007f,-0.6114424f,-0.791289f,-0.0f,-0.6114424f,-0.791289f,-0.0f,-0.6114424f,-0.7643264f,0.2048007f,-0.6114424f,-0.6852763f,0.3956445f,-0.6114424f,-0.5595258f,0.5595258f,-0.6114424f,-0.6852763f,0.3956445f,-0.6114424f,-0.5595258f,0.5595258f,-0.6114424f,0.0f,0.0f,-1.0f,-0.9659258f,0.258819f,0.0f,-0.9659258f,0.258819f,0.0f,-0.9659258f,0.258819f,0.0f,-0.190039f,-0.7092353f,-0.6788744f,0.0f,-1.0f,0.0f,-0.258819f,-0.9659258f,0.0f,0.0f,-0.7342544f,-0.6788744f,-0.1305262f,-0.9914449f,0.0f,0.0f,-1.0f,0.0f,-0.1305262f,-0.9914449f,0.0f,0.0f,-1.0f,0.0f,0.258819f,-0.9659258f,0.0f,0.190039f,-0.7092353f,-0.6788744f,0.258819f,-0.9659258f,0.0f,0.5f,-0.8660254f,0.0f,0.3671272f,-0.635883f,-0.6788744f,0.5f,-0.8660254f,0.0f,0.7071068f,-0.7071068f,0.0f,0.5191963f,-0.5191963f,-0.6788744f,0.7071068f,-0.7071068f,0.0f,0.635883f,-0.3671272f,-0.6788744f,0.8660254f,-0.5f,0.0f,0.8660254f,-0.5f,0.0f,0.7092353f,-0.190039f,-0.6788744f,0.9659258f,-0.258819f,0.0f,0.9659258f,-0.258819f,0.0f,0.7342544f,0.0f,-0.6788744f,1.0f,0.0f,0.0f,1.0f,0.0f,0.0f,1.0f,0.0f,0.0f,0.7092353f,0.190039f,-0.6788744f,0.9659258f,0.258819f,0.0f,0.9659258f,0.258819f,0.0f,0.635883f,0.3671272f,-0.6788744f,0.8660254f,0.5f,0.0f,0.8660254f,0.5f,0.0f,0.8660254f,0.5f,0.0f,0.5191963f,0.5191963f,-0.6788744f,0.7071068f,0.7071068f,0.0f,0.7071068f,0.7071068f,0.0f,0.7071068f,0.7071068f,0.0f,0.5f,0.8660254f,0.0f,0.3671272f,0.635883f,-0.6788744f,0.5f,0.8660254f,0.0f,0.5f,0.8660254f,0.0f,0.258819f,0.9659258f,0.0f,0.190039f,0.7092353f,-0.6788744f,0.258819f,0.9659258f,0.0f,0.0f,1.0f,0.0f,0.0f,0.7342544f,-0.6788744f,0.0f,1.0f,0.0f,-0.258819f,0.9659258f,0.0f,-0.190039f,0.7092353f,-0.6788744f,-0.258819f,0.9659258f,0.0f,-0.5f,0.8660254f,0.0f,-0.3671272f,0.635883f,-0.6788744f,-0.5f,0.8660254f,0.0f,-0.5f,0.8660254f,0.0f,-0.7071068f,0.7071068f,0.0f,-0.5191963f,0.5191963f,-0.6788744f,-0.7071068f,0.7071068f,0.0f,-0.635883f,0.3671272f,-0.6788744f,-0.8660254f,0.5f,0.0f,-0.8660254f,0.5f,0.0f,-0.8660254f,0.5f,0.0f,-0.7092353f,0.190039f,-0.6788744f,-0.9659258f,0.258819f,0.0f,-0.9659258f,0.258819f,0.0f,-0.7342544f,-0.0f,-0.6788744f,-1.0f,-0.0f,0.0f,-1.0f,-0.0f,0.0f,-0.7092353f,-0.190039f,-0.6788744f,-0.9659258f,-0.258819f,0.0f,-0.9659258f,-0.258819f,0.0f,-0.9659258f,-0.258819f,0.0f,0.9782868f,-0.207163f,-0.0061902f,0.3015113f,0.3015113f,0.904534f,0.3015113f,-0.3015113f,0.904534f,0.5773503f,-0.5773503f,0.5773503f,-0.4472136f,0.0f,0.8944272f,-0.5773503f,-0.5773503f,0.5773503f,-0.4472136f,0.0f,0.8944272f,-0.4472136f,0.0f,0.8944272f,-0.4472136f,0.0f,0.8944272f,-0.5773503f,0.5773503f,0.5773503f,0.5773503f,0.5773503f,0.5773503f,0.1305262f,0.9914449f,-0.0f,0.1305262f,0.9914449f,-0.0f,0.1305262f,0.9914449f,-0.0f,0.1305262f,0.9914449f,-0.0f,-0.7092353f,-0.190039f,0.6788744f,-0.7092353f,0.190039f,0.6788744f,-0.7342544f,0.0f,0.6788744f,-0.635883f,-0.3671272f,0.6788744f,-0.635883f,0.3671272f,0.6788744f,-0.5191963f,-0.5191963f,0.6788744f,-0.5191963f,0.5191963f,0.6788744f,0.6751284f,0.0f,0.7377002f,0.652124f,0.1747361f,0.7377002f,-0.3671272f,-0.635883f,0.6788744f,0.5846784f,0.3375642f,0.7377002f,0.4773879f,0.4773879f,0.7377002f,-0.190039f,-0.7092353f,0.6788744f,0.3375642f,0.5846784f,0.7377002f,0.1747361f,0.652124f,0.7377002f,-0.0f,-0.7342544f,0.6788744f,-0.0f,0.6751284f,0.7377002f,0.190039f,-0.7092353f,0.6788744f,-0.1747361f,0.652124f,0.7377002f,-0.3375642f,0.5846784f,0.7377002f,0.3671272f,-0.635883f,0.6788744f,-0.4773879f,0.4773879f,0.7377002f,-0.5846784f,0.3375642f,0.7377002f,0.5191963f,-0.5191963f,0.6788744f,-0.652124f,0.1747361f,0.7377002f,-0.6751284f,0.0f,0.7377002f,0.652124f,-0.1747361f,0.7377002f,-0.3671272f,0.635883f,0.6788744f,0.5846784f,-0.3375642f,0.7377002f,0.4773879f,-0.4773879f,0.7377002f,-0.190039f,0.7092353f,0.6788744f,0.3375642f,-0.5846784f,0.7377002f,0.1747361f,-0.652124f,0.7377002f,-0.0625027f,0.4747555f,0.8778956f,-0.0f,-0.6751284f,0.7377002f,0.1832488f,0.4424017f,0.8778956f,-0.1747361f,-0.652124f,0.7377002f,-0.3375642f,-0.5846784f,0.7377002f,0.3671272f,0.635883f,0.6788744f,-0.4773879f,-0.4773879f,0.7377002f,-0.5846784f,-0.3375642f,0.7377002f,0.5191963f,0.5191963f,0.6788744f,-0.652124f,-0.1747361f,0.7377002f,0.635883f,-0.3671272f,0.6788744f,0.635883f,0.3671272f,0.6788744f,0.7092353f,-0.190039f,0.6788744f,0.7092353f,0.190039f,0.6788744f,0.7342544f,0.0f,0.6788744f,0.4832477f,0.6297806f,-0.6081513f,0.4832477f,0.6297806f,-0.6081513f,0.4832477f,0.6297806f,-0.6081513f,0.4832477f,0.6297806f,-0.6081513f,0.8660254f,-0.5f,0.0f,0.8660254f,-0.5f,0.0f,0.8660254f,-0.5f,0.0f,-0.3671272f,-0.635883f,-0.6788744f,-0.5f,-0.8660254f,0.0f,-0.3826834f,-0.9238795f,0.0f,-0.3826834f,-0.9238795f,0.0f,-0.3826834f,-0.9238795f,0.0f,-0.3826834f,-0.9238795f,0.0f,-0.6751284f,0.0f,-0.7377002f,-0.652124f,0.1747361f,-0.7377002f,-0.5846784f,0.3375642f,-0.7377002f,-0.4773879f,0.4773879f,-0.7377002f,-0.3375642f,0.5846784f,-0.7377002f,-0.1747361f,0.652124f,-0.7377002f,0.0f,0.6751284f,-0.7377002f,0.1747361f,0.652124f,-0.7377002f,0.3375642f,0.5846784f,-0.7377002f,0.4773879f,0.4773879f,-0.7377002f,0.5846784f,0.3375642f,-0.7377002f,0.652124f,0.1747361f,-0.7377002f,0.6751284f,0.0f,-0.7377002f,-0.652124f,-0.1747361f,-0.7377002f,-0.5846784f,-0.3375642f,-0.7377002f,-0.4773879f,-0.4773879f,-0.7377002f,-0.3375642f,-0.5846784f,-0.7377002f,-0.1747361f,-0.652124f,-0.7377002f,-0.0f,-0.6751284f,-0.7377002f,0.1747361f,-0.652124f,-0.7377002f,0.3375642f,-0.5846784f,-0.7377002f,0.4773879f,-0.4773879f,-0.7377002f,0.5846784f,-0.3375642f,-0.7377002f,0.652124f,-0.1747361f,-0.7377002f,-0.6087614f,-0.7933533f,0.0f,-0.6087614f,-0.7933533f,0.0f,-0.6087614f,-0.7933533f,0.0f,-0.6087614f,-0.7933533f,0.0f,0.0f,-0.0f,-1.0f,0.0f,-0.0f,-1.0f,0.0f,-0.0f,-1.0f,0.0f,-0.0f,-1.0f,0.0f,-0.0f,-1.0f,0.0f,-0.0f,-1.0f,0.0f,-0.0f,-1.0f,0.0f,-0.0f,-1.0f,0.0f,-0.0f,-1.0f,0.0f,-0.0f,-1.0f,0.0f,-0.0f,-1.0f,0.0f,-0.0f,-1.0f,0.0f,-0.0f,-1.0f,0.0f,-0.0f,-1.0f,0.0f,-0.0f,-1.0f,0.0f,-0.0f,-1.0f,0.0f,-0.0f,-1.0f,0.0f,-0.0f,-1.0f,0.0f,-0.0f,-1.0f,0.0f,-0.0f,-1.0f,0.0f,-0.0f,-1.0f,0.0f,-0.0f,-1.0f,0.0f,-0.0f,-1.0f,0.0f,-0.0f,-1.0f,0.0f,-0.0f,-1.0f,0.0f,-0.0f,-1.0f,0.0f,-0.0f,-1.0f,0.0f,-0.0f,-1.0f,0.0f,-0.0f,-1.0f,0.0f,-0.0f,-1.0f,0.0f,-0.0f,-1.0f,0.0f,-0.0f,-1.0f,0.0f,-0.0f,-1.0f,0.0f,-0.0f,-1.0f,0.0f,-0.0f,-1.0f,0.0f,-0.0f,-1.0f,0.0f,-0.0f,-1.0f,0.0f,-0.0f,-1.0f,0.0f,-0.0f,-1.0f,0.0f,-0.0f,-1.0f,0.0f,-0.0f,-1.0f,0.0f,-0.0f,-1.0f,0.0f,-0.0f,-1.0f,0.0f,-0.0f,-1.0f,0.0f,-0.0f,-1.0f,0.0f,-0.0f,-1.0f,-0.0f,0.791289f,-0.6114424f,0.1036144f,0.7870299f,-0.6081513f,-0.0f,0.791289f,-0.6114424f,0.1036144f,0.7870299f,-0.6081513f,-1.0f,0.0f,0.0f,-1.0f,0.0f,0.0f,-0.904534f,-0.3015113f,0.3015113f,-0.3015113f,0.904534f,0.3015113f,-1.0f,0.0f,0.0f,-0.904534f,-0.3015113f,-0.3015113f,-1.0f,0.0f,0.0f,-0.3015113f,0.904534f,-0.3015113f,-0.5773503f,0.5773503f,0.5773503f,-0.5773503f,0.5773503f,-0.5773503f,0.5f,0.8660254f,0.0f,0.3826834f,0.9238795f,-0.0f,-0.1305262f,0.9914449f,-0.0f,-0.258819f,0.9659258f,0.0f,-0.5f,0.8660254f,0.0f,-0.7071068f,0.7071068f,0.0f,-0.8660254f,0.5f,0.0f,-0.9659258f,0.258819f,0.0f,-1.0f,0.0f,0.0f,-0.9659258f,-0.258819f,0.0f,-0.8660254f,-0.5f,0.0f,-0.7071068f,-0.7071068f,0.0f,-0.5f,-0.8660254f,0.0f,-0.258819f,-0.9659258f,0.0f,-0.0860754f,-0.9962886f,0.0f,-0.1305262f,-0.9914449f,0.0f,0.1305262f,-0.9914449f,0.0f,0.346466f,-0.9380625f,0.0f,0.3826834f,-0.9238795f,0.0f,0.5f,-0.8660254f,0.0f,0.7071068f,-0.7071068f,0.0f,0.8660254f,-0.5f,0.0f,0.9659258f,-0.258819f,0.0f,1.0f,0.0f,0.0f,0.9659258f,0.258819f,0.0f,0.8660254f,0.5f,0.0f,0.7071068f,0.7071068f,0.0f,-0.5191963f,-0.5191963f,-0.6788744f,-0.8660254f,-0.5f,0.0f,-0.635883f,-0.3671272f,-0.6788744f,-0.7071068f,-0.7071068f,0.0f,-0.7933533f,-0.6087614f,0.0f,-0.8660254f,-0.5f,0.0f,-0.7933533f,-0.6087614f,0.0f,0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,0.7071068f,-0.7071068f,-0.0f,0.7071068f,-0.7071068f,-0.0f,0.7071068f,-0.7071068f,-0.0f,0.6852763f,0.3956445f,-0.6114424f,0.7643264f,0.2048007f,-0.6114424f,0.7643264f,0.2048007f,-0.6114424f,0.6852763f,0.3956445f,-0.6114424f,0.7643264f,-0.2048007f,-0.6114424f,0.791289f,0.0f,-0.6114424f,0.7643264f,-0.2048007f,-0.6114424f,0.791289f,0.0f,-0.6114424f,0.5595258f,-0.5595258f,-0.6114424f,0.6852763f,-0.3956445f,-0.6114424f,0.5595258f,-0.5595258f,-0.6114424f,0.6852763f,-0.3956445f,-0.6114424f,0.3956445f,-0.6852763f,-0.6114424f,0.2048007f,-0.7643264f,-0.6114424f,0.3956445f,-0.6852763f,-0.6114424f,0.2048007f,-0.7643264f,-0.6114424f,0.7371541f,0.0f,-0.6757246f,-0.861746f,-0.3915961f,-0.322562f,-0.6782801f,0.0f,-0.7348034f,0.0f,0.0f,-1.0f,0.8646386f,-0.394671f,-0.3108616f,0.1305262f,-0.9914449f,0.0f,0.1305262f,-0.9914449f,0.0f,0.1305262f,-0.9914449f,0.0f,0.1305262f,-0.9914449f,0.0f,-0.0f,-0.791289f,-0.6114424f,-0.2048007f,-0.7643264f,-0.6114424f,-0.0f,-0.791289f,-0.6114424f,-0.2048007f,-0.7643264f,-0.6114424f,-0.3956445f,-0.6852763f,-0.6114424f,-0.5595258f,-0.5595258f,-0.6114424f,-0.3956445f,-0.6852763f,-0.6114424f,-0.5595258f,-0.5595258f,-0.6114424f,-0.7643264f,-0.2048007f,-0.6114424f,-0.6852763f,-0.3956445f,-0.6114424f,-0.6852763f,-0.3956445f,-0.6114424f,-0.7643264f,-0.2048007f,-0.6114424f,-0.7643264f,0.2048007f,-0.6114424f,-0.791289f,-0.0f,-0.6114424f,-0.791289f,-0.0f,-0.6114424f,-0.7643264f,0.2048007f,-0.6114424f,-0.6852763f,0.3956445f,-0.6114424f,-0.5595258f,0.5595258f,-0.6114424f,-0.6852763f,0.3956445f,-0.6114424f,-0.5595258f,0.5595258f,-0.6114424f,-0.3956445f,0.6852763f,-0.6114424f,-0.2048007f,0.7643264f,-0.6114424f,-0.3956445f,0.6852763f,-0.6114424f,-0.2048007f,0.7643264f,-0.6114424f,0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,-0.9659258f,0.258819f,0.0f,-0.9659258f,0.258819f,0.0f,-0.9659258f,0.258819f,0.0f,-0.190039f,-0.7092353f,-0.6788744f,0.0f,-1.0f,0.0f,-0.258819f,-0.9659258f,0.0f,0.0f,-0.7342544f,-0.6788744f,-0.1305262f,-0.9914449f,0.0f,0.0f,-1.0f,0.0f,-0.1305262f,-0.9914449f,0.0f,0.0f,-1.0f,0.0f,0.258819f,-0.9659258f,0.0f,0.190039f,-0.7092353f,-0.6788744f,0.258819f,-0.9659258f,0.0f,0.5f,-0.8660254f,0.0f,0.3671272f,-0.635883f,-0.6788744f,0.5f,-0.8660254f,0.0f,0.5f,-0.8660254f,0.0f,0.7071068f,-0.7071068f,0.0f,0.5191963f,-0.5191963f,-0.6788744f,0.7071068f,-0.7071068f,0.0f,0.635883f,-0.3671272f,-0.6788744f,0.8660254f,-0.5f,0.0f,0.8660254f,-0.5f,0.0f,0.7092353f,-0.190039f,-0.6788744f,0.9659258f,-0.258819f,0.0f,0.9659258f,-0.258819f,0.0f,0.7342544f,0.0f,-0.6788744f,1.0f,0.0f,0.0f,1.0f,0.0f,0.0f,1.0f,0.0f,0.0f,0.7092353f,0.190039f,-0.6788744f,0.9659258f,0.258819f,0.0f,0.9659258f,0.258819f,0.0f,0.635883f,0.3671272f,-0.6788744f,0.8660254f,0.5f,0.0f,0.8660254f,0.5f,0.0f,0.5191963f,0.5191963f,-0.6788744f,0.7071068f,0.7071068f,0.0f,0.7071068f,0.7071068f,0.0f,0.5f,0.8660254f,0.0f,0.3671272f,0.635883f,-0.6788744f,0.5f,0.8660254f,0.0f,0.258819f,0.9659258f,0.0f,0.190039f,0.7092353f,-0.6788744f,0.258819f,0.9659258f,0.0f,0.0f,1.0f,0.0f,0.0f,0.7342544f,-0.6788744f,0.0f,1.0f,0.0f,-0.258819f,0.9659258f,0.0f,-0.190039f,0.7092353f,-0.6788744f,-0.258819f,0.9659258f,0.0f,-0.5f,0.8660254f,0.0f,-0.3671272f,0.635883f,-0.6788744f,-0.5f,0.8660254f,0.0f,-0.7071068f,0.7071068f,0.0f,-0.5191963f,0.5191963f,-0.6788744f,-0.7071068f,0.7071068f,0.0f,-0.7071068f,0.7071068f,0.0f,-0.635883f,0.3671272f,-0.6788744f,-0.8660254f,0.5f,0.0f,-0.8660254f,0.5f,0.0f,-0.7092353f,0.190039f,-0.6788744f,-0.9659258f,0.258819f,0.0f,-0.9659258f,0.258819f,0.0f,-0.7342544f,-0.0f,-0.6788744f,-1.0f,-0.0f,0.0f,-1.0f,-0.0f,0.0f,-1.0f,-0.0f,0.0f,-0.7092353f,-0.190039f,-0.6788744f,-0.9659258f,-0.258819f,0.0f,-0.9659258f,-0.258819f,0.0f,0.5773503f,-0.5773503f,0.5773503f,-0.5773503f,-0.5773503f,0.5773503f,-0.6751284f,0.0f,0.7377002f,-0.652124f,-0.1747361f,0.7377002f,-0.5846784f,-0.3375642f,0.7377002f,-0.4773879f,-0.4773879f,0.7377002f,-0.3375642f,-0.5846784f,0.7377002f,-0.1747361f,-0.652124f,0.7377002f,-0.0f,-0.6751284f,0.7377002f,0.1747361f,-0.652124f,0.7377002f,0.3375642f,-0.5846784f,0.7377002f,0.4773879f,-0.4773879f,0.7377002f,0.5846784f,-0.3375642f,0.7377002f,0.652124f,-0.1747361f,0.7377002f,0.6751284f,0.0f,0.7377002f,-0.1747361f,0.652124f,0.7377002f,-0.3375642f,0.5846784f,0.7377002f,-0.4773879f,0.4773879f,0.7377002f,-0.5846784f,0.3375642f,0.7377002f,-0.652124f,0.1747361f,0.7377002f,-0.0f,0.6751284f,0.7377002f,0.1747361f,0.652124f,0.7377002f,0.3375642f,0.5846784f,0.7377002f,0.4773879f,0.4773879f,0.7377002f,0.5846784f,0.3375642f,0.7377002f,0.652124f,0.1747361f,0.7377002f,0.3015113f,-0.3015113f,0.904534f,0.7071068f,0.0f,0.7071068f,0.3015113f,-0.3015113f,-0.904534f,-0.5773503f,-0.5773503f,-0.5773503f,0.5773503f,-0.5773503f,-0.5773503f,0.7071068f,0.0f,-0.7071068f,-0.907942f,-0.1471544f,0.3924116f,0.1305262f,-0.9914449f,-0.0f,0.1305262f,-0.9914449f,-0.0f,0.1305262f,-0.9914449f,-0.0f,0.1361109f,-0.3572402f,0.9240418f,0.941037f,-0.1251361f,0.3143093f,0.0044588f,-0.9918941f,-0.1269891f,0.4832477f,0.6297806f,-0.6081513f,0.4832477f,0.6297806f,-0.6081513f,0.4832477f,0.6297806f,-0.6081513f,0.4832477f,0.6297806f,-0.6081513f,-0.6751284f,0.0f,-0.7377002f,-0.652124f,0.1747361f,-0.7377002f,-0.5846784f,0.3375642f,-0.7377002f,-0.4773879f,0.4773879f,-0.7377002f,-0.3375642f,0.5846784f,-0.7377002f,-0.1747361f,0.652124f,-0.7377002f,0.0f,0.6751284f,-0.7377002f,0.1747361f,0.652124f,-0.7377002f,0.3375642f,0.5846784f,-0.7377002f,0.4773879f,0.4773879f,-0.7377002f,-0.3671272f,-0.635883f,-0.6788744f,0.5846784f,0.3375642f,-0.7377002f,0.652124f,0.1747361f,-0.7377002f,0.6751284f,0.0f,-0.7377002f,-0.652124f,-0.1747361f,-0.7377002f,-0.5846784f,-0.3375642f,-0.7377002f,-0.4773879f,-0.4773879f,-0.7377002f,-0.3375642f,-0.5846784f,-0.7377002f,-0.1747361f,-0.652124f,-0.7377002f,-0.0f,-0.6751284f,-0.7377002f,0.1747361f,-0.652124f,-0.7377002f,0.3375642f,-0.5846784f,-0.7377002f,0.4773879f,-0.4773879f,-0.7377002f,0.5846784f,-0.3375642f,-0.7377002f,0.652124f,-0.1747361f,-0.7377002f,-0.5f,-0.8660254f,0.0f,-0.6087614f,-0.7933533f,0.0f,-0.6087614f,-0.7933533f,0.0f,-0.6087614f,-0.7933533f,0.0f,-0.6087614f,-0.7933533f,0.0f,0.8660254f,-0.5f,0.0f,0.8660254f,-0.5f,0.0f,0.8660254f,-0.5f,0.0f,-0.3826834f,-0.9238795f,0.0f,-0.3826834f,-0.9238795f,0.0f,-0.3826834f,-0.9238795f,0.0f,-0.3826834f,-0.9238795f,0.0f,};
fbn = GLBuffers.newDirectFloatBuffer(normalsArray, 0);
gl.glNormalPointer(GL2.GL_FLOAT, 0, fbn);
gl.glEnableClientState(GL2.GL_NORMAL_ARRAY);
FloatBuffer fbt = null;
float[] texcoordArray = null;
{
gl.glColor4d(1.0, 1.0, 1.0, 1.0);
int[] indices = {
0,1,2,1,3,4,3,1,0,4,5,6,5,4,7,7,4,3,8,9,10,11,12,13,14,15,16,17,18,19,18,17,2,2,17,0,20,21,22,21,20,23,21,23,24,24,23,25,24,25,26,26,25,27,27,25,28,28,25,29,28,29,30,30,29,31,31,29,32,31,32,33,33,32,34,34,32,35,34,35,36,36,35,37,36,37,38,38,37,39,39,37,40,39,40,41,41,40,42,42,40,43,42,43,44,44,43,45,26,46,17,46,26,27,17,46,47,17,47,48,17,48,0,0,48,49,0,49,50,0,50,3,3,50,51,3,51,7,7,51,52,7,52,53,7,53,54,54,53,55,54,55,56,54,56,57,57,56,58,57,58,45,57,45,43,57,43,59,57,59,60,60,59,61,60,61,62,62,61,63,7,64,5,64,7,54,65,66,67,66,65,68,66,68,69,69,68,70,69,70,71,71,70,72,71,72,73,73,72,74,74,72,75,75,72,76,76,72,77,76,77,78,78,77,79,79,77,80,79,80,81,81,80,82,81,82,83,84,85,86,85,84,87,87,84,88,73,89,71,89,73,90,89,90,91,89,91,92,89,92,93,93,92,94,93,94,95,93,95,96,96,95,97,96,97,98,96,98,99,99,98,100,99,100,101,101,100,102,101,102,103,101,103,104,104,103,105,104,105,88,104,88,84,104,84,106,104,106,107,107,106,108,108,106,109,108,109,110,111,112,113,112,111,114,115,116,117,116,115,118,119,13,120,121,122,123,124,125,126,125,124,127,121,128,122,129,130,15,131,132,133,132,131,134,26,19,135,19,26,17,26,136,24,136,26,135,24,137,21,137,24,136,21,138,22,138,21,137,22,139,20,139,22,138,20,140,23,140,20,139,23,141,25,141,23,140,29,141,142,141,29,25,32,142,143,142,32,29,35,143,144,143,35,32,145,146,147,146,145,148,149,150,151,150,149,152,152,149,153,152,153,154,40,155,156,155,40,37,43,156,157,156,43,40,158,43,157,43,158,59,159,59,158,59,159,61,160,61,159,61,160,63,161,63,160,63,161,62,162,62,161,62,162,60,163,60,162,60,163,57,54,163,64,163,54,57,164,165,166,165,164,167,168,169,170,169,168,171,172,173,174,173,172,175,167,176,165,176,167,177,178,179,180,181,182,183,182,181,184,185,186,187,186,185,188,189,190,191,190,189,192,193,194,195,194,193,196,197,198,199,198,197,200,200,197,201,200,201,202,203,204,205,204,203,206,206,203,199,206,199,198,207,208,209,208,207,210,211,212,213,212,211,214,215,216,217,216,215,218,219,220,221,220,219,222,223,224,225,224,223,226,227,130,129,130,227,120,120,227,119,228,229,230,231,232,233,232,231,234,235,236,237,236,235,238,234,239,232,239,234,240,238,241,236,241,238,239,240,242,239,242,240,243,239,244,241,244,239,242,243,245,242,245,243,246,242,247,244,247,242,245,245,248,249,248,245,246,247,249,250,249,247,245,249,251,252,251,249,248,250,252,253,252,250,249,252,254,255,254,252,251,253,256,257,256,253,252,255,258,259,258,255,254,257,259,260,259,257,256,259,261,262,261,259,258,260,263,264,263,260,259,262,265,266,265,262,261,264,267,268,267,264,263,265,269,266,269,265,270,267,271,268,271,267,272,270,273,269,273,270,274,272,275,271,275,272,273,274,276,273,276,274,277,273,278,275,278,273,276,277,279,276,279,277,280,276,281,278,281,276,279,280,282,279,282,280,283,279,284,281,284,279,285,283,286,282,286,283,287,285,288,284,288,285,286,289,286,287,286,289,290,291,288,286,288,291,292,293,290,289,290,293,294,294,292,291,292,294,295,296,294,293,294,296,297,297,295,294,295,297,298,299,297,296,297,299,300,301,298,297,298,301,302,170,300,299,300,170,169,174,302,301,302,174,173,123,227,121,227,303,121,304,197,199,197,304,152,152,304,150,201,153,202,153,201,154,151,304,305,304,151,150,306,307,308,307,306,309,309,306,310,310,306,311,311,306,312,312,306,313,313,306,305,313,305,304,149,198,200,198,149,305,305,149,151,314,315,316,315,314,317,318,319,320,319,318,321,319,321,322,322,321,323,322,323,324,324,323,325,325,323,326,326,323,327,326,327,328,328,327,329,329,327,330,329,330,331,331,330,332,332,330,333,332,333,334,334,333,335,334,335,336,336,335,337,337,335,338,337,338,339,339,338,340,340,338,341,340,341,342,342,341,343,324,344,345,344,324,325,345,344,346,345,346,347,345,347,348,348,347,349,348,349,350,348,350,351,351,350,352,351,352,353,353,352,354,353,354,355,353,355,356,356,355,357,356,357,358,356,358,359,359,358,360,359,360,343,359,343,341,359,341,361,359,361,362,362,361,363,362,363,364,364,363,365,366,367,368,367,366,369,370,371,372,373,233,374,233,373,231,375,376,377,376,375,378,251,258,254,258,251,248,258,248,261,261,248,246,261,246,265,265,246,243,265,243,270,270,243,379,379,243,380,380,243,240,380,240,381,381,240,382,382,240,383,383,240,234,383,234,384,384,234,385,385,234,231,385,231,386,386,231,387,387,231,388,388,231,373,388,373,389,389,373,390,390,373,391,270,392,274,392,270,379,274,392,393,274,393,394,274,394,395,274,395,277,277,395,396,277,396,397,277,397,398,277,398,280,280,398,399,280,399,400,280,400,283,283,400,401,283,401,402,283,402,391,283,391,373,283,373,168,283,168,287,287,168,170,287,170,289,289,170,299,289,299,293,293,299,296,168,374,171,374,168,373,403,404,405,404,403,406,203,304,199,304,203,313,407,408,409,408,407,410,408,410,411,411,410,412,411,412,413,413,412,414,413,414,415,415,414,416,416,414,417,417,414,418,418,414,419,418,419,420,420,419,421,421,419,422,421,422,423,423,422,424,423,424,425,426,427,428,427,426,429,429,426,430,415,431,413,431,415,432,431,432,433,431,433,434,431,434,435,435,434,436,435,436,437,435,437,438,438,437,439,438,439,440,438,440,441,441,440,442,441,442,443,443,442,444,443,444,445,443,445,446,446,445,447,446,447,430,446,430,426,446,426,448,446,448,449,449,448,450,450,448,451,450,451,452,453,454,455,454,453,456,198,306,206,306,198,305,306,204,206,204,306,308,310,457,309,312,458,311,458,312,459,459,312,460,307,204,308,204,307,461,204,461,205,205,461,457,205,457,462,462,457,463,463,457,310,462,463,458,462,458,459,205,462,464,465,464,466,464,203,205,203,464,313,313,464,460,460,464,465,313,460,312,353,467,468,467,353,356,348,469,470,469,348,351,345,470,471,470,345,348,324,471,472,471,324,345,324,473,322,473,324,472,322,474,319,474,322,473,319,475,320,475,319,474,320,476,318,476,320,475,318,477,321,477,318,476,321,478,323,478,321,477,327,478,479,478,327,323,330,479,480,479,330,327,481,480,482,480,481,330,330,481,333,335,483,484,483,333,481,333,483,335,338,485,486,485,338,484,484,338,335,341,486,487,486,341,338,488,341,487,341,488,361,489,361,488,361,489,363,490,363,489,363,490,365,491,365,490,365,491,364,492,364,491,364,492,362,493,362,492,362,493,359,356,493,467,493,356,359,494,495,496,495,494,497,498,499,495,499,498,500,501,502,503,502,501,504,505,506,507,508,509,510,509,508,511,512,513,514,513,512,515,516,517,518,517,516,519,520,521,522,521,520,523,524,525,526,525,524,527,527,524,528,529,530,531,530,529,532,533,534,535,534,533,536,537,538,539,538,537,540,541,542,543,542,541,544,545,546,547,546,545,548,549,550,551,550,549,552,553,554,555,554,553,556,557,503,558,503,557,501,559,560,561,562,563,564,563,562,565,566,567,568,567,566,569,565,570,563,570,565,571,569,572,567,572,569,570,571,573,570,573,571,574,570,575,572,575,570,576,574,577,573,577,574,578,576,579,575,579,576,577,577,580,581,580,577,578,579,581,582,581,579,577,581,583,584,583,581,580,582,584,585,584,582,581,584,586,587,586,584,583,585,588,589,588,585,584,587,590,591,590,587,586,589,591,592,591,589,588,591,593,594,593,591,590,592,594,595,594,592,591,594,596,597,596,594,593,595,597,598,597,595,594,596,599,597,599,596,600,597,601,598,601,597,599,600,602,599,602,600,603,599,604,601,604,599,602,603,605,602,605,603,606,602,607,604,607,602,605,606,608,605,608,606,609,605,610,607,610,605,608,609,611,608,611,609,612,608,613,610,613,608,611,612,614,611,614,612,615,611,616,613,616,611,617,618,614,615,614,618,619,619,616,617,616,619,620,621,619,618,619,621,622,622,620,619,620,622,623,624,622,621,622,624,625,626,623,622,623,626,627,628,625,624,625,628,629,629,627,626,627,629,630,496,629,628,629,496,495,495,630,629,630,495,499,631,465,632,465,631,633,633,631,634,634,631,635,635,631,636,636,631,637,637,631,638,638,631,639,639,631,640,640,631,641,641,631,642,642,631,643,643,631,644,644,631,645,465,646,460,646,465,647,647,465,648,648,465,649,649,465,650,650,465,633,460,646,651,460,651,652,460,652,653,460,653,654,460,654,655,460,655,656,460,656,645,460,645,657,657,645,631,657,631,658,460,657,459,459,659,462,659,459,657,466,659,660,659,466,464,659,464,462,659,661,660,661,659,662,465,660,632,660,465,466,526,525,663,664,665,666,667,663,525,668,667,669,668,528,524,670,671,672,671,670,673,583,590,586,590,583,580,590,580,593,593,580,578,593,578,596,596,578,574,596,574,600,600,574,674,674,574,675,675,574,571,675,571,676,676,571,677,677,571,678,678,571,565,678,565,679,679,565,680,680,565,562,680,562,681,681,562,682,682,562,683,683,562,684,683,684,685,685,684,686,686,684,687,600,688,603,688,600,674,603,688,689,603,689,690,603,690,691,603,691,606,606,691,692,606,692,693,606,693,694,606,694,609,609,694,695,609,695,696,609,696,612,612,696,697,612,697,698,612,698,687,612,687,684,612,684,494,612,494,615,615,494,496,615,496,618,618,496,628,618,628,621,621,628,624,494,699,497,699,494,684,700,701,702,701,700,703,704,705,706,528,669,527,669,525,527,684,564,699,564,684,562,707,708,709,708,707,710,631,660,661,660,631,632,662,631,661,631,662,658,659,658,662,658,659,657,667,525,669,668,669,528,};
IntBuffer fbi = GLBuffers.newDirectIntBuffer(indices, 0);
gl.glDrawElements(GL2.GL_TRIANGLES, 2304, GL2.GL_UNSIGNED_INT, fbi);
gl.glDisable(GL2.GL_TEXTURE_2D);
gl.glDisable(GL2.GL_BLEND);
}
gl.glDisableClientState(GL2.GL_VERTEX_ARRAY);
gl.glDisableClientState(GL2.GL_NORMAL_ARRAY);
gl.glDisableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
}
private void ID10(GL2 gl){
float[] positionsArray = {
26.430588f,28.0835f,41.59674f,26.430588f,27.4165f,41.59674f,26.386683f,27.75f,41.59674f,26.559313f,28.39427f,41.59674f,26.559313f,27.10573f,41.59674f,26.764088f,28.661137f,41.59674f,26.764088f,26.838863f,41.59674f,27.030952f,28.86591f,41.59674f,27.030952f,26.63409f,41.59674f,27.341724f,28.994635f,41.59674f,27.341724f,26.505365f,41.59674f,27.470892f,27.75f,41.59674f,27.477856f,27.802885f,41.59674f,27.675222f,29.038542f,41.59674f,27.498268f,27.852165f,41.59674f,27.530739f,27.894484f,41.59674f,27.573057f,27.926956f,41.59674f,27.62234f,27.947369f,41.59674f,27.675222f,27.95433f,41.59674f,28.008722f,28.994635f,41.59674f,27.728107f,27.947369f,41.59674f,27.77739f,27.926956f,41.59674f,27.819706f,27.894484f,41.59674f,27.852179f,27.852165f,41.59674f,27.872591f,27.802885f,41.59674f,27.879555f,27.75f,41.59674f,27.477856f,27.697115f,41.59674f,27.675222f,26.461458f,41.59674f,27.498268f,27.647835f,41.59674f,27.530739f,27.605516f,41.59674f,27.573057f,27.573044f,41.59674f,27.62234f,27.552631f,41.59674f,27.675222f,27.54567f,41.59674f,28.008722f,26.505365f,41.59674f,27.728107f,27.552631f,41.59674f,27.77739f,27.573044f,41.59674f,27.819706f,27.605516f,41.59674f,27.852179f,27.647835f,41.59674f,27.872591f,27.697115f,41.59674f,28.319494f,28.86591f,41.59674f,28.319494f,26.63409f,41.59674f,28.586359f,28.661137f,41.59674f,28.586359f,26.838863f,41.59674f,28.791134f,28.39427f,41.59674f,28.791134f,27.10573f,41.59674f,28.919859f,28.0835f,41.59674f,28.919859f,27.4165f,41.59674f,28.963764f,27.75f,41.59674f,};
FloatBuffer fbv = GLBuffers.newDirectFloatBuffer(positionsArray, 0);
gl.glVertexPointer(3, GL2.GL_FLOAT, 0, fbv);
gl.glEnableClientState(GL2.GL_VERTEX_ARRAY);
FloatBuffer fbn = null;
float[] normalsArray = {
0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,-0.6751284f,0.0f,-0.7377002f,-0.652124f,0.1747361f,-0.7377002f,0.0f,0.0f,-1.0f,-0.5846784f,0.3375642f,-0.7377002f,-0.4773879f,0.4773879f,-0.7377002f,-0.3375642f,0.5846784f,-0.7377002f,-0.1747361f,0.652124f,-0.7377002f,0.0f,0.6751284f,-0.7377002f,0.0f,0.0f,-1.0f,0.1747361f,0.652124f,-0.7377002f,0.3375642f,0.5846784f,-0.7377002f,0.4773879f,0.4773879f,-0.7377002f,0.5846784f,0.3375642f,-0.7377002f,0.652124f,0.1747361f,-0.7377002f,0.6751284f,0.0f,-0.7377002f,-0.652124f,-0.1747361f,-0.7377002f,0.0f,0.0f,-1.0f,-0.5846784f,-0.3375642f,-0.7377002f,-0.4773879f,-0.4773879f,-0.7377002f,-0.3375642f,-0.5846784f,-0.7377002f,-0.1747361f,-0.652124f,-0.7377002f,-0.0f,-0.6751284f,-0.7377002f,0.0f,0.0f,-1.0f,0.1747361f,-0.652124f,-0.7377002f,0.3375642f,-0.5846784f,-0.7377002f,0.4773879f,-0.4773879f,-0.7377002f,0.5846784f,-0.3375642f,-0.7377002f,0.652124f,-0.1747361f,-0.7377002f,0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,};
fbn = GLBuffers.newDirectFloatBuffer(normalsArray, 0);
gl.glNormalPointer(GL2.GL_FLOAT, 0, fbn);
gl.glEnableClientState(GL2.GL_NORMAL_ARRAY);
FloatBuffer fbt = null;
float[] texcoordArray = null;
{
gl.glColor4d(1.0, 1.0, 1.0, 1.0);
int[] indices = {
0,1,2,1,0,3,1,3,4,4,3,5,4,5,6,6,5,7,6,7,8,8,7,9,8,9,10,10,9,11,11,9,12,12,9,13,12,13,14,14,13,15,15,13,16,16,13,17,17,13,18,18,13,19,18,19,20,20,19,21,21,19,22,22,19,23,23,19,24,24,19,25,10,26,27,26,10,11,27,26,28,27,28,29,27,29,30,27,30,31,27,31,32,27,32,33,33,32,34,33,34,35,33,35,36,33,36,37,33,37,38,33,38,25,33,25,19,33,19,39,33,39,40,40,39,41,40,41,42,42,41,43,42,43,44,44,43,45,44,45,46,46,45,47,};
IntBuffer fbi = GLBuffers.newDirectIntBuffer(indices, 0);
gl.glDrawElements(GL2.GL_TRIANGLES, 144, GL2.GL_UNSIGNED_INT, fbi);
gl.glDisable(GL2.GL_TEXTURE_2D);
gl.glDisable(GL2.GL_BLEND);
}
gl.glDisableClientState(GL2.GL_VERTEX_ARRAY);
gl.glDisableClientState(GL2.GL_NORMAL_ARRAY);
gl.glDisableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
}
private void ID16(GL2 gl){
float[] positionsArray = {
26.430588f,28.0835f,43.84674f,26.386683f,27.75f,41.59674f,26.386683f,27.75f,43.84674f,26.430588f,28.0835f,41.59674f,26.559313f,28.39427f,43.84674f,26.559313f,28.39427f,41.59674f,26.430588f,28.0835f,41.59674f,27.470892f,27.75f,39.84674f,26.386683f,27.75f,41.59674f,27.477856f,27.802885f,39.84674f,26.430588f,27.4165f,41.59674f,26.430588f,27.4165f,43.84674f,26.764088f,28.661137f,43.84674f,26.764088f,28.661137f,41.59674f,27.498268f,27.852165f,39.84674f,26.559313f,28.39427f,41.59674f,27.477856f,27.697115f,39.84674f,26.430588f,27.4165f,41.59674f,26.559313f,27.10573f,41.59674f,26.559313f,27.10573f,43.84674f,27.030952f,28.86591f,41.59674f,27.030952f,28.86591f,43.84674f,27.530739f,27.894484f,39.84674f,26.764088f,28.661137f,41.59674f,27.498268f,27.647835f,39.84674f,26.559313f,27.10573f,41.59674f,26.764088f,26.838863f,41.59674f,26.764088f,26.838863f,43.84674f,27.341724f,28.994635f,41.59674f,27.341724f,28.994635f,43.84674f,27.573057f,27.926956f,39.84674f,27.030952f,28.86591f,41.59674f,27.530739f,27.605516f,39.84674f,26.764088f,26.838863f,41.59674f,27.030952f,26.63409f,43.84674f,27.030952f,26.63409f,41.59674f,27.675222f,29.038542f,41.59674f,27.675222f,29.038542f,43.84674f,27.62234f,27.947369f,39.84674f,27.341724f,28.994635f,41.59674f,27.030952f,26.63409f,41.59674f,27.573057f,27.573044f,39.84674f,27.341724f,26.505365f,43.84674f,27.341724f,26.505365f,41.59674f,28.008722f,28.994635f,41.59674f,28.008722f,28.994635f,43.84674f,27.675222f,27.95433f,39.84674f,27.675222f,29.038542f,41.59674f,27.341724f,26.505365f,41.59674f,27.62234f,27.552631f,39.84674f,27.675222f,26.461458f,43.84674f,27.675222f,26.461458f,41.59674f,28.319494f,28.86591f,41.59674f,28.319494f,28.86591f,43.84674f,27.728107f,27.947369f,39.84674f,28.008722f,28.994635f,41.59674f,27.675222f,26.461458f,41.59674f,27.675222f,27.54567f,39.84674f,28.008722f,26.505365f,43.84674f,28.008722f,26.505365f,41.59674f,28.586359f,28.661137f,41.59674f,28.586359f,28.661137f,43.84674f,27.77739f,27.926956f,39.84674f,28.319494f,28.86591f,41.59674f,28.008722f,26.505365f,41.59674f,27.728107f,27.552631f,39.84674f,28.319494f,26.63409f,43.84674f,28.319494f,26.63409f,41.59674f,28.791134f,28.39427f,43.84674f,28.791134f,28.39427f,41.59674f,27.819706f,27.894484f,39.84674f,28.586359f,28.661137f,41.59674f,28.319494f,26.63409f,41.59674f,27.77739f,27.573044f,39.84674f,28.586359f,26.838863f,43.84674f,28.586359f,26.838863f,41.59674f,28.919859f,28.0835f,43.84674f,28.919859f,28.0835f,41.59674f,28.791134f,28.39427f,41.59674f,27.852179f,27.852165f,39.84674f,28.586359f,26.838863f,41.59674f,27.819706f,27.605516f,39.84674f,28.791134f,27.10573f,41.59674f,28.791134f,27.10573f,43.84674f,28.963764f,27.75f,43.84674f,28.963764f,27.75f,41.59674f,28.919859f,28.0835f,41.59674f,27.872591f,27.802885f,39.84674f,28.791134f,27.10573f,41.59674f,27.852179f,27.647835f,39.84674f,28.919859f,27.4165f,41.59674f,28.919859f,27.4165f,43.84674f,28.963764f,27.75f,41.59674f,27.879555f,27.75f,39.84674f,28.919859f,27.4165f,41.59674f,27.872591f,27.697115f,39.84674f,};
FloatBuffer fbv = GLBuffers.newDirectFloatBuffer(positionsArray, 0);
gl.glVertexPointer(3, GL2.GL_FLOAT, 0, fbv);
gl.glEnableClientState(GL2.GL_VERTEX_ARRAY);
FloatBuffer fbn = null;
float[] normalsArray = {
-0.652124f,0.1747361f,-0.7377002f,-1.0f,0.0f,0.0f,-0.6751284f,0.0f,-0.7377002f,-0.9659258f,0.258819f,0.0f,-0.5846784f,0.3375642f,-0.7377002f,-0.8660254f,0.5f,0.0f,-0.8211087f,0.2200154f,-0.5266627f,-0.8500743f,0.0f,-0.5266627f,-0.8500743f,0.0f,-0.5266627f,-0.8211087f,0.2200154f,-0.5266627f,-0.9659258f,-0.258819f,0.0f,-0.652124f,-0.1747361f,-0.7377002f,-0.4773879f,0.4773879f,-0.7377002f,-0.7071068f,0.7071068f,0.0f,-0.736186f,0.4250372f,-0.5266627f,-0.736186f,0.4250372f,-0.5266627f,-0.8211087f,-0.2200154f,-0.5266627f,-0.8211087f,-0.2200154f,-0.5266627f,-0.8660254f,-0.5f,0.0f,-0.5846784f,-0.3375642f,-0.7377002f,-0.5f,0.8660254f,0.0f,-0.3375642f,0.5846784f,-0.7377002f,-0.6010933f,0.6010933f,-0.5266627f,-0.6010933f,0.6010933f,-0.5266627f,-0.736186f,-0.4250372f,-0.5266627f,-0.736186f,-0.4250372f,-0.5266627f,-0.7071068f,-0.7071068f,0.0f,-0.4773879f,-0.4773879f,-0.7377002f,-0.258819f,0.9659258f,0.0f,-0.1747361f,0.652124f,-0.7377002f,-0.4250372f,0.736186f,-0.5266627f,-0.4250372f,0.736186f,-0.5266627f,-0.6010933f,-0.6010933f,-0.5266627f,-0.6010933f,-0.6010933f,-0.5266627f,-0.3375642f,-0.5846784f,-0.7377002f,-0.5f,-0.8660254f,0.0f,0.0f,1.0f,0.0f,0.0f,0.6751284f,-0.7377002f,-0.2200154f,0.8211087f,-0.5266627f,-0.2200154f,0.8211087f,-0.5266627f,-0.4250372f,-0.736186f,-0.5266627f,-0.4250372f,-0.736186f,-0.5266627f,-0.1747361f,-0.652124f,-0.7377002f,-0.258819f,-0.9659258f,0.0f,0.258819f,0.9659258f,0.0f,0.1747361f,0.652124f,-0.7377002f,0.0f,0.8500743f,-0.5266627f,0.0f,0.8500743f,-0.5266627f,-0.2200154f,-0.8211087f,-0.5266627f,-0.2200154f,-0.8211087f,-0.5266627f,-0.0f,-0.6751284f,-0.7377002f,-0.0f,-1.0f,0.0f,0.5f,0.8660254f,0.0f,0.3375642f,0.5846784f,-0.7377002f,0.2200154f,0.8211087f,-0.5266627f,0.2200154f,0.8211087f,-0.5266627f,-0.0f,-0.8500743f,-0.5266627f,-0.0f,-0.8500743f,-0.5266627f,0.1747361f,-0.652124f,-0.7377002f,0.258819f,-0.9659258f,0.0f,0.7071068f,0.7071068f,0.0f,0.4773879f,0.4773879f,-0.7377002f,0.4250372f,0.736186f,-0.5266627f,0.4250372f,0.736186f,-0.5266627f,0.2200154f,-0.8211087f,-0.5266627f,0.2200154f,-0.8211087f,-0.5266627f,0.3375642f,-0.5846784f,-0.7377002f,0.5f,-0.8660254f,0.0f,0.5846784f,0.3375642f,-0.7377002f,0.8660254f,0.5f,0.0f,0.6010933f,0.6010933f,-0.5266627f,0.6010933f,0.6010933f,-0.5266627f,0.4250372f,-0.736186f,-0.5266627f,0.4250372f,-0.736186f,-0.5266627f,0.4773879f,-0.4773879f,-0.7377002f,0.7071068f,-0.7071068f,0.0f,0.652124f,0.1747361f,-0.7377002f,0.9659258f,0.258819f,0.0f,0.736186f,0.4250372f,-0.5266627f,0.736186f,0.4250372f,-0.5266627f,0.6010933f,-0.6010933f,-0.5266627f,0.6010933f,-0.6010933f,-0.5266627f,0.8660254f,-0.5f,0.0f,0.5846784f,-0.3375642f,-0.7377002f,0.6751284f,0.0f,-0.7377002f,1.0f,0.0f,0.0f,0.8211087f,0.2200154f,-0.5266627f,0.8211087f,0.2200154f,-0.5266627f,0.736186f,-0.4250372f,-0.5266627f,0.736186f,-0.4250372f,-0.5266627f,0.9659258f,-0.258819f,0.0f,0.652124f,-0.1747361f,-0.7377002f,0.8500743f,0.0f,-0.5266627f,0.8500743f,0.0f,-0.5266627f,0.8211087f,-0.2200154f,-0.5266627f,0.8211087f,-0.2200154f,-0.5266627f,};
fbn = GLBuffers.newDirectFloatBuffer(normalsArray, 0);
gl.glNormalPointer(GL2.GL_FLOAT, 0, fbn);
gl.glEnableClientState(GL2.GL_NORMAL_ARRAY);
FloatBuffer fbt = null;
float[] texcoordArray = null;
{
gl.glColor4d(0.1372549, 0.1372549, 0.1372549, 1.0);
int[] indices = {
0,1,2,1,0,3,4,3,0,3,4,5,6,7,8,7,6,9,2,10,11,10,2,1,12,5,4,5,12,13,6,14,9,14,6,15,8,16,17,16,8,7,11,18,19,18,11,10,12,20,13,20,12,21,15,22,14,22,15,23,17,24,25,24,17,16,19,26,27,26,19,18,21,28,20,28,21,29,23,30,22,30,23,31,25,32,33,32,25,24,34,26,35,26,34,27,29,36,28,36,29,37,31,38,30,38,31,39,40,32,41,32,40,33,42,35,43,35,42,34,37,44,36,44,37,45,39,46,38,46,39,47,48,41,49,41,48,40,50,43,51,43,50,42,45,52,44,52,45,53,47,54,46,54,47,55,56,49,57,49,56,48,58,51,59,51,58,50,53,60,52,60,53,61,55,62,54,62,55,63,64,57,65,57,64,56,66,59,67,59,66,58,60,68,69,68,60,61,63,70,62,70,63,71,72,65,73,65,72,64,74,67,75,67,74,66,69,76,77,76,69,68,70,78,79,78,70,71,80,73,81,73,80,72,82,74,75,74,82,83,77,84,85,84,77,76,79,86,87,86,79,78,81,88,80,88,81,89,90,83,82,83,90,91,85,91,90,91,85,84,87,92,93,92,87,86,89,94,88,94,89,95,95,92,94,92,95,93,};
IntBuffer fbi = GLBuffers.newDirectIntBuffer(indices, 0);
gl.glDrawElements(GL2.GL_TRIANGLES, 288, GL2.GL_UNSIGNED_INT, fbi);
gl.glDisable(GL2.GL_TEXTURE_2D);
gl.glDisable(GL2.GL_BLEND);
}
gl.glDisableClientState(GL2.GL_VERTEX_ARRAY);
gl.glDisableClientState(GL2.GL_NORMAL_ARRAY);
gl.glDisableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
}
private void ID24(GL2 gl){
float[] positionsArray = {
27.477856f,27.802885f,39.84674f,27.477856f,27.697115f,39.84674f,27.470892f,27.75f,39.84674f,27.498268f,27.852165f,39.84674f,27.498268f,27.647835f,39.84674f,27.530739f,27.894484f,39.84674f,27.530739f,27.605516f,39.84674f,27.573057f,27.926956f,39.84674f,27.573057f,27.573044f,39.84674f,27.62234f,27.947369f,39.84674f,27.62234f,27.552631f,39.84674f,27.675222f,27.95433f,39.84674f,27.675222f,27.54567f,39.84674f,27.728107f,27.947369f,39.84674f,27.728107f,27.552631f,39.84674f,27.77739f,27.926956f,39.84674f,27.77739f,27.573044f,39.84674f,27.819706f,27.894484f,39.84674f,27.819706f,27.605516f,39.84674f,27.852179f,27.852165f,39.84674f,27.852179f,27.647835f,39.84674f,27.872591f,27.802885f,39.84674f,27.872591f,27.697115f,39.84674f,27.879555f,27.75f,39.84674f,27.498268f,27.852165f,41.59674f,27.477856f,27.802885f,39.84674f,27.477856f,27.802885f,41.59674f,27.498268f,27.852165f,39.84674f,27.530739f,27.894484f,41.59674f,27.530739f,27.894484f,39.84674f,27.573057f,27.926956f,39.84674f,27.573057f,27.926956f,41.59674f,27.62234f,27.947369f,39.84674f,27.62234f,27.947369f,41.59674f,27.675222f,27.95433f,39.84674f,27.675222f,27.95433f,41.59674f,27.728107f,27.947369f,39.84674f,27.728107f,27.947369f,41.59674f,27.77739f,27.926956f,39.84674f,27.77739f,27.926956f,41.59674f,27.819706f,27.894484f,39.84674f,27.819706f,27.894484f,41.59674f,27.852179f,27.852165f,41.59674f,27.852179f,27.852165f,39.84674f,27.872591f,27.802885f,41.59674f,27.872591f,27.802885f,39.84674f,27.879555f,27.75f,41.59674f,27.879555f,27.75f,39.84674f,27.872591f,27.697115f,41.59674f,27.872591f,27.697115f,39.84674f,27.852179f,27.647835f,41.59674f,27.852179f,27.647835f,39.84674f,27.819706f,27.605516f,41.59674f,27.819706f,27.605516f,39.84674f,27.77739f,27.573044f,39.84674f,27.77739f,27.573044f,41.59674f,27.728107f,27.552631f,39.84674f,27.728107f,27.552631f,41.59674f,27.675222f,27.54567f,39.84674f,27.675222f,27.54567f,41.59674f,27.62234f,27.552631f,39.84674f,27.62234f,27.552631f,41.59674f,27.573057f,27.573044f,39.84674f,27.573057f,27.573044f,41.59674f,27.530739f,27.605516f,39.84674f,27.530739f,27.605516f,41.59674f,27.498268f,27.647835f,41.59674f,27.498268f,27.647835f,39.84674f,27.477856f,27.697115f,41.59674f,27.477856f,27.697115f,39.84674f,27.470892f,27.75f,41.59674f,27.470892f,27.75f,39.84674f,};
FloatBuffer fbv = GLBuffers.newDirectFloatBuffer(positionsArray, 0);
gl.glVertexPointer(3, GL2.GL_FLOAT, 0, fbv);
gl.glEnableClientState(GL2.GL_VERTEX_ARRAY);
FloatBuffer fbn = null;
float[] normalsArray = {
0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,-0.5846784f,0.3375642f,-0.7377002f,-0.9659258f,0.258819f,0.0f,-0.652124f,0.1747361f,-0.7377002f,-0.8660254f,0.5f,0.0f,-0.4773879f,0.4773879f,-0.7377002f,-0.7071068f,0.7071068f,0.0f,-0.5f,0.8660254f,0.0f,-0.3375642f,0.5846784f,-0.7377002f,-0.258819f,0.9659258f,0.0f,-0.1747361f,0.652124f,-0.7377002f,0.0f,1.0f,0.0f,0.0f,0.6751284f,-0.7377002f,0.258819f,0.9659258f,0.0f,0.1747361f,0.652124f,-0.7377002f,0.5f,0.8660254f,0.0f,0.3375642f,0.5846784f,-0.7377002f,0.7071068f,0.7071068f,0.0f,0.4773879f,0.4773879f,-0.7377002f,0.5846784f,0.3375642f,-0.7377002f,0.8660254f,0.5f,0.0f,0.652124f,0.1747361f,-0.7377002f,0.9659258f,0.258819f,0.0f,0.6751284f,0.0f,-0.7377002f,1.0f,0.0f,0.0f,0.652124f,-0.1747361f,-0.7377002f,0.9659258f,-0.258819f,0.0f,0.5846784f,-0.3375642f,-0.7377002f,0.8660254f,-0.5f,0.0f,0.4773879f,-0.4773879f,-0.7377002f,0.7071068f,-0.7071068f,0.0f,0.5f,-0.8660254f,0.0f,0.3375642f,-0.5846784f,-0.7377002f,0.258819f,-0.9659258f,0.0f,0.1747361f,-0.652124f,-0.7377002f,-0.0f,-1.0f,0.0f,-0.0f,-0.6751284f,-0.7377002f,-0.258819f,-0.9659258f,0.0f,-0.1747361f,-0.652124f,-0.7377002f,-0.5f,-0.8660254f,0.0f,-0.3375642f,-0.5846784f,-0.7377002f,-0.7071068f,-0.7071068f,0.0f,-0.4773879f,-0.4773879f,-0.7377002f,-0.5846784f,-0.3375642f,-0.7377002f,-0.8660254f,-0.5f,0.0f,-0.652124f,-0.1747361f,-0.7377002f,-0.9659258f,-0.258819f,0.0f,-0.6751284f,0.0f,-0.7377002f,-1.0f,0.0f,0.0f,};
fbn = GLBuffers.newDirectFloatBuffer(normalsArray, 0);
gl.glNormalPointer(GL2.GL_FLOAT, 0, fbn);
gl.glEnableClientState(GL2.GL_NORMAL_ARRAY);
FloatBuffer fbt = null;
float[] texcoordArray = null;
{
gl.glColor4d(1.0, 1.0, 1.0, 1.0);
int[] indices = {
0,1,2,1,0,3,1,3,4,4,3,5,4,5,6,6,5,7,6,7,8,8,7,9,8,9,10,10,9,11,10,11,12,12,11,13,12,13,14,14,13,15,14,15,16,16,15,17,16,17,18,18,17,19,18,19,20,20,19,21,20,21,22,22,21,23,24,25,26,25,24,27,28,27,24,27,28,29,28,30,29,30,28,31,31,32,30,32,31,33,33,34,32,34,33,35,35,36,34,36,35,37,37,38,36,38,37,39,39,40,38,40,39,41,40,42,43,42,40,41,43,44,45,44,43,42,45,46,47,46,45,44,47,48,49,48,47,46,49,50,51,50,49,48,51,52,53,52,51,50,52,54,53,54,52,55,55,56,54,56,55,57,57,58,56,58,57,59,59,60,58,60,59,61,61,62,60,62,61,63,63,64,62,64,63,65,66,64,65,64,66,67,68,67,66,67,68,69,70,69,68,69,70,71,26,71,70,71,26,25,};
IntBuffer fbi = GLBuffers.newDirectIntBuffer(indices, 0);
gl.glDrawElements(GL2.GL_TRIANGLES, 210, GL2.GL_UNSIGNED_INT, fbi);
gl.glDisable(GL2.GL_TEXTURE_2D);
gl.glDisable(GL2.GL_BLEND);
}
gl.glDisableClientState(GL2.GL_VERTEX_ARRAY);
gl.glDisableClientState(GL2.GL_NORMAL_ARRAY);
gl.glDisableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
}
private void ID30(GL2 gl){
float[] positionsArray = {
28.839909f,32.096664f,42.59674f,29.055916f,30.141432f,40.34674f,28.389923f,30.417295f,40.34674f,29.925222f,31.647114f,42.59674f,25.007929f,27.035301f,40.34674f,24.981014f,27.75f,40.34674f,24.913836f,27.75f,40.34674f,25.072817f,27.052687f,40.34674f,25.283792f,26.369307f,40.34674f,25.34197f,26.402895f,40.34674f,25.722628f,25.797405f,40.34674f,25.77013f,25.844906f,40.34674f,26.294529f,25.358568f,40.34674f,26.32812f,25.416746f,40.34674f,26.960524f,25.082705f,40.34674f,26.977911f,25.147594f,40.34674f,27.675222f,24.988613f,40.34674f,27.675222f,25.05579f,40.34674f,28.389923f,25.082705f,40.34674f,28.372536f,25.147594f,40.34674f,29.022327f,25.416746f,40.34674f,29.055916f,25.358568f,40.34674f,29.580317f,25.844906f,40.34674f,29.62782f,25.797405f,40.34674f,30.008476f,26.402895f,40.34674f,30.066654f,26.369307f,40.34674f,30.27763f,27.052687f,40.34674f,30.342518f,27.035301f,40.34674f,30.369432f,27.75f,40.34674f,30.43661f,27.75f,40.34674f,25.007929f,28.464699f,40.34674f,25.072817f,28.447313f,40.34674f,25.283792f,29.130693f,40.34674f,25.34197f,29.097105f,40.34674f,25.722628f,29.702595f,40.34674f,25.77013f,29.655094f,40.34674f,26.294529f,30.141432f,40.34674f,26.32812f,30.083254f,40.34674f,26.960524f,30.417295f,40.34674f,26.977911f,30.352406f,40.34674f,27.675222f,30.511387f,40.34674f,27.675222f,30.44421f,40.34674f,28.389923f,30.417295f,40.34674f,28.372536f,30.352406f,40.34674f,29.022327f,30.083254f,40.34674f,29.055916f,30.141432f,40.34674f,29.580317f,29.655094f,40.34674f,29.62782f,29.702595f,40.34674f,30.008476f,29.097105f,40.34674f,30.066654f,29.130693f,40.34674f,30.27763f,28.447313f,40.34674f,30.342518f,28.464699f,40.34674f,30.43661f,27.75f,40.34674f,30.369432f,27.75f,40.34674f,30.342518f,28.464699f,40.34674f,30.27763f,28.447313f,40.34674f,30.066654f,29.130693f,40.34674f,30.008476f,29.097105f,40.34674f,29.62782f,29.702595f,40.34674f,29.580317f,29.655094f,40.34674f,29.055916f,30.141432f,40.34674f,29.022327f,30.083254f,40.34674f,28.389923f,30.417295f,40.34674f,28.372536f,30.352406f,40.34674f,27.675222f,30.44421f,40.34674f,27.675222f,30.511387f,40.34674f,26.977911f,30.352406f,40.34674f,26.960524f,30.417295f,40.34674f,26.32812f,30.083254f,40.34674f,26.294529f,30.141432f,40.34674f,25.77013f,29.655094f,40.34674f,25.722628f,29.702595f,40.34674f,25.34197f,29.097105f,40.34674f,25.283792f,29.130693f,40.34674f,25.072817f,28.447313f,40.34674f,25.007929f,28.464699f,40.34674f,24.981014f,27.75f,40.34674f,24.913836f,27.75f,40.34674f,30.342518f,27.035301f,40.34674f,30.27763f,27.052687f,40.34674f,30.066654f,26.369307f,40.34674f,30.008476f,26.402895f,40.34674f,29.62782f,25.797405f,40.34674f,29.580317f,25.844906f,40.34674f,29.055916f,25.358568f,40.34674f,29.022327f,25.416746f,40.34674f,28.389923f,25.082705f,40.34674f,28.372536f,25.147594f,40.34674f,27.675222f,25.05579f,40.34674f,27.675222f,24.988613f,40.34674f,26.977911f,25.147594f,40.34674f,26.960524f,25.082705f,40.34674f,26.32812f,25.416746f,40.34674f,26.294529f,25.358568f,40.34674f,25.77013f,25.844906f,40.34674f,25.722628f,25.797405f,40.34674f,25.34197f,26.402895f,40.34674f,25.283792f,26.369307f,40.34674f,25.072817f,27.052687f,40.34674f,25.007929f,27.035301f,40.34674f,26.510538f,32.096664f,42.59674f,27.675222f,30.511387f,40.34674f,26.960524f,30.417295f,40.34674f,27.675222f,32.25f,42.59674f,24.493242f,30.93198f,42.59674f,26.294529f,30.141432f,40.34674f,25.722628f,29.702595f,40.34674f,25.425222f,31.647114f,42.59674f,23.328556f,28.914686f,42.59674f,25.283792f,29.130693f,40.34674f,25.007929f,28.464699f,40.34674f,23.778109f,30.0f,42.59674f,23.175222f,27.75f,42.59674f,25.007929f,27.035301f,40.34674f,23.328556f,26.585314f,42.59674f,24.913836f,27.75f,40.34674f,23.778109f,25.5f,42.59674f,25.722628f,25.797405f,40.34674f,24.493242f,24.56802f,42.59674f,25.283792f,26.369307f,40.34674f,26.510538f,23.403334f,42.59674f,26.294529f,25.358568f,40.34674f,26.960524f,25.082705f,40.34674f,25.425222f,23.852886f,42.59674f,28.839909f,23.403334f,42.59674f,27.675222f,24.988613f,40.34674f,28.389923f,25.082705f,40.34674f,27.675222f,23.25f,42.59674f,30.857204f,24.56802f,42.59674f,29.055916f,25.358568f,40.34674f,29.62782f,25.797405f,40.34674f,29.925222f,23.852886f,42.59674f,30.066654f,26.369307f,40.34674f,32.02189f,26.585314f,42.59674f,31.572338f,25.5f,42.59674f,30.342518f,27.035301f,40.34674f,30.342518f,28.464699f,40.34674f,32.175224f,27.75f,42.59674f,30.43661f,27.75f,40.34674f,32.02189f,28.914686f,42.59674f,29.62782f,29.702595f,40.34674f,31.572338f,30.0f,42.59674f,30.066654f,29.130693f,40.34674f,30.857204f,30.93198f,42.59674f,};
FloatBuffer fbv = GLBuffers.newDirectFloatBuffer(positionsArray, 0);
gl.glVertexPointer(3, GL2.GL_FLOAT, 0, fbv);
gl.glEnableClientState(GL2.GL_VERTEX_ARRAY);
FloatBuffer fbn = null;
float[] normalsArray = {
0.3037822f,0.7333951f,-0.6081513f,0.3037822f,0.7333951f,-0.6081513f,0.3037822f,0.7333951f,-0.6081513f,0.3037822f,0.7333951f,-0.6081513f,0.0f,-0.0f,1.0f,-0.6751284f,0.0f,0.7377002f,0.0f,-0.0f,1.0f,-0.652124f,-0.1747361f,0.7377002f,0.0f,-0.0f,1.0f,-0.5846784f,-0.3375642f,0.7377002f,0.0f,-0.0f,1.0f,-0.4773879f,-0.4773879f,0.7377002f,0.0f,-0.0f,1.0f,-0.3375642f,-0.5846784f,0.7377002f,0.0f,-0.0f,1.0f,-0.1747361f,-0.652124f,0.7377002f,0.0f,-0.0f,1.0f,-0.0f,-0.6751284f,0.7377002f,0.0f,-0.0f,1.0f,0.1747361f,-0.652124f,0.7377002f,0.3375642f,-0.5846784f,0.7377002f,0.0f,-0.0f,1.0f,0.4773879f,-0.4773879f,0.7377002f,0.0f,-0.0f,1.0f,0.5846784f,-0.3375642f,0.7377002f,0.0f,-0.0f,1.0f,0.652124f,-0.1747361f,0.7377002f,0.0f,-0.0f,1.0f,0.6751284f,0.0f,0.7377002f,0.0f,-0.0f,1.0f,0.0f,-0.0f,1.0f,-0.652124f,0.1747361f,0.7377002f,0.0f,-0.0f,1.0f,-0.5846784f,0.3375642f,0.7377002f,0.0f,-0.0f,1.0f,-0.4773879f,0.4773879f,0.7377002f,0.0f,-0.0f,1.0f,-0.3375642f,0.5846784f,0.7377002f,0.0f,-0.0f,1.0f,-0.1747361f,0.652124f,0.7377002f,0.0f,-0.0f,1.0f,0.0f,0.6751284f,0.7377002f,0.0f,-0.0f,1.0f,0.1747361f,0.652124f,0.7377002f,0.3375642f,0.5846784f,0.7377002f,0.0f,-0.0f,1.0f,0.4773879f,0.4773879f,0.7377002f,0.0f,-0.0f,1.0f,0.5846784f,0.3375642f,0.7377002f,0.0f,-0.0f,1.0f,0.652124f,0.1747361f,0.7377002f,0.0f,-0.0f,1.0f,-0.0f,0.0f,-1.0f,-0.6751284f,-0.0f,-0.7377002f,-0.0f,0.0f,-1.0f,-0.652124f,-0.1747361f,-0.7377002f,-0.0f,0.0f,-1.0f,-0.5846784f,-0.3375642f,-0.7377002f,-0.0f,0.0f,-1.0f,-0.4773879f,-0.4773879f,-0.7377002f,-0.0f,0.0f,-1.0f,-0.3375642f,-0.5846784f,-0.7377002f,-0.0f,0.0f,-1.0f,-0.1747361f,-0.652124f,-0.7377002f,-0.0f,-0.6751284f,-0.7377002f,-0.0f,0.0f,-1.0f,0.1747361f,-0.652124f,-0.7377002f,-0.0f,0.0f,-1.0f,0.3375642f,-0.5846784f,-0.7377002f,-0.0f,0.0f,-1.0f,0.4773879f,-0.4773879f,-0.7377002f,-0.0f,0.0f,-1.0f,0.5846784f,-0.3375642f,-0.7377002f,-0.0f,0.0f,-1.0f,0.652124f,-0.1747361f,-0.7377002f,-0.0f,0.0f,-1.0f,0.6751284f,-0.0f,-0.7377002f,-0.0f,0.0f,-1.0f,-0.0f,0.0f,-1.0f,-0.652124f,0.1747361f,-0.7377002f,-0.0f,0.0f,-1.0f,-0.5846784f,0.3375642f,-0.7377002f,-0.0f,0.0f,-1.0f,-0.4773879f,0.4773879f,-0.7377002f,-0.0f,0.0f,-1.0f,-0.3375642f,0.5846784f,-0.7377002f,-0.0f,0.0f,-1.0f,-0.1747361f,0.652124f,-0.7377002f,0.0f,0.6751284f,-0.7377002f,-0.0f,0.0f,-1.0f,0.1747361f,0.652124f,-0.7377002f,-0.0f,0.0f,-1.0f,0.3375642f,0.5846784f,-0.7377002f,-0.0f,0.0f,-1.0f,0.4773879f,0.4773879f,-0.7377002f,-0.0f,0.0f,-1.0f,0.5846784f,0.3375642f,-0.7377002f,-0.0f,0.0f,-1.0f,0.652124f,0.1747361f,-0.7377002f,-0.0f,0.0f,-1.0f,-0.2048007f,0.7643264f,-0.6114424f,-0.0f,0.791289f,-0.6114424f,-0.2048007f,0.7643264f,-0.6114424f,-0.0f,0.791289f,-0.6114424f,-0.5595258f,0.5595258f,-0.6114424f,-0.3956445f,0.6852763f,-0.6114424f,-0.5595258f,0.5595258f,-0.6114424f,-0.3956445f,0.6852763f,-0.6114424f,-0.7643264f,0.2048007f,-0.6114424f,-0.6852763f,0.3956445f,-0.6114424f,-0.7643264f,0.2048007f,-0.6114424f,-0.6852763f,0.3956445f,-0.6114424f,-0.791289f,-0.0f,-0.6114424f,-0.7643264f,-0.2048007f,-0.6114424f,-0.7643264f,-0.2048007f,-0.6114424f,-0.791289f,-0.0f,-0.6114424f,-0.6852763f,-0.3956445f,-0.6114424f,-0.5595258f,-0.5595258f,-0.6114424f,-0.5595258f,-0.5595258f,-0.6114424f,-0.6852763f,-0.3956445f,-0.6114424f,-0.2048007f,-0.7643264f,-0.6114424f,-0.3956445f,-0.6852763f,-0.6114424f,-0.2048007f,-0.7643264f,-0.6114424f,-0.3956445f,-0.6852763f,-0.6114424f,0.2048007f,-0.7643264f,-0.6114424f,-0.0f,-0.791289f,-0.6114424f,0.2048007f,-0.7643264f,-0.6114424f,-0.0f,-0.791289f,-0.6114424f,0.5595258f,-0.5595258f,-0.6114424f,0.3956445f,-0.6852763f,-0.6114424f,0.5595258f,-0.5595258f,-0.6114424f,0.3956445f,-0.6852763f,-0.6114424f,0.6852763f,-0.3956445f,-0.6114424f,0.7643264f,-0.2048007f,-0.6114424f,0.6852763f,-0.3956445f,-0.6114424f,0.7643264f,-0.2048007f,-0.6114424f,0.7643264f,0.2048007f,-0.6114424f,0.791289f,0.0f,-0.6114424f,0.791289f,0.0f,-0.6114424f,0.7643264f,0.2048007f,-0.6114424f,0.6297806f,0.4832477f,-0.6081513f,0.6852763f,0.3956445f,-0.6114424f,0.6852763f,0.3956445f,-0.6114424f,0.6297806f,0.4832477f,-0.6081513f,};
fbn = GLBuffers.newDirectFloatBuffer(normalsArray, 0);
gl.glNormalPointer(GL2.GL_FLOAT, 0, fbn);
gl.glEnableClientState(GL2.GL_NORMAL_ARRAY);
FloatBuffer fbt = null;
float[] texcoordArray = null;
{
gl.glColor4d(0.0, 0.0, 0.0, 1.0);
int[] indices = {
0,1,2,1,0,3,52,53,54,53,55,54,54,55,56,55,57,56,56,57,58,57,59,58,58,59,60,59,61,60,60,61,62,61,63,62,63,64,62,62,64,65,64,66,65,65,66,67,66,68,67,67,68,69,68,70,69,69,70,71,70,72,71,71,72,73,72,74,73,73,74,75,74,76,75,77,75,76,52,78,53,53,78,79,78,80,79,79,80,81,80,82,81,81,82,83,82,84,83,83,84,85,84,86,85,85,86,87,87,86,88,86,89,88,88,89,90,89,91,90,90,91,92,91,93,92,92,93,94,93,95,94,94,95,96,95,97,96,96,97,98,97,99,98,98,99,76,77,76,99,100,101,102,101,100,103,104,105,106,105,104,107,108,109,110,109,108,111,112,113,114,113,112,115,116,117,118,117,116,119,120,121,122,121,120,123,124,125,126,125,124,127,128,129,130,129,128,131,132,133,134,133,132,135,136,137,138,137,136,139,140,141,142,141,140,143,};
IntBuffer fbi = GLBuffers.newDirectIntBuffer(indices, 0);
gl.glDrawElements(GL2.GL_TRIANGLES, 216, GL2.GL_UNSIGNED_INT, fbi);
gl.glDisable(GL2.GL_TEXTURE_2D);
gl.glDisable(GL2.GL_BLEND);
}
{
gl.glColor4d(1.0, 1.0, 1.0, 1.0);
int[] indices = {
4,5,6,5,4,7,7,4,8,7,8,9,9,8,10,9,10,11,11,10,12,11,12,13,13,12,14,13,14,15,15,14,16,15,16,17,17,16,18,17,18,19,19,18,20,20,18,21,20,21,22,22,21,23,22,23,24,24,23,25,24,25,26,26,25,27,26,27,28,28,27,29,5,30,6,30,5,31,30,31,32,32,31,33,32,33,34,34,33,35,34,35,36,36,35,37,36,37,38,38,37,39,38,39,40,40,39,41,40,41,42,42,41,43,42,43,44,42,44,45,45,44,46,45,46,47,47,46,48,47,48,49,49,48,50,49,50,51,51,50,28,51,28,29,};
IntBuffer fbi = GLBuffers.newDirectIntBuffer(indices, 0);
gl.glDrawElements(GL2.GL_TRIANGLES, 144, GL2.GL_UNSIGNED_INT, fbi);
gl.glDisable(GL2.GL_TEXTURE_2D);
gl.glDisable(GL2.GL_BLEND);
}
gl.glDisableClientState(GL2.GL_VERTEX_ARRAY);
gl.glDisableClientState(GL2.GL_NORMAL_ARRAY);
gl.glDisableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
}
private void ID38(GL2 gl){
float[] positionsArray = {
25.072817f,27.052687f,43.59674f,25.072817f,28.447313f,43.59674f,24.981014f,27.75f,43.59674f,25.34197f,26.402895f,43.59674f,25.34197f,29.097105f,43.59674f,25.77013f,25.844906f,43.59674f,25.77013f,29.655094f,43.59674f,26.32812f,25.416746f,43.59674f,26.32812f,30.083254f,43.59674f,26.977911f,25.147594f,43.59674f,26.977911f,30.352406f,43.59674f,27.675222f,25.05579f,43.59674f,27.675222f,30.44421f,43.59674f,28.372536f,25.147594f,43.59674f,28.372536f,30.352406f,43.59674f,29.022327f,25.416746f,43.59674f,29.022327f,30.083254f,43.59674f,29.580317f,25.844906f,43.59674f,29.580317f,29.655094f,43.59674f,30.008476f,26.402895f,43.59674f,30.008476f,29.097105f,43.59674f,30.27763f,27.052687f,43.59674f,30.27763f,28.447313f,43.59674f,30.369432f,27.75f,43.59674f,30.369432f,27.75f,43.59674f,30.27763f,27.052687f,43.59674f,30.27763f,28.447313f,43.59674f,30.008476f,29.097105f,43.59674f,30.008476f,26.402895f,43.59674f,29.580317f,29.655094f,43.59674f,29.580317f,25.844906f,43.59674f,29.022327f,30.083254f,43.59674f,29.022327f,25.416746f,43.59674f,28.372536f,30.352406f,43.59674f,28.372536f,25.147594f,43.59674f,27.675222f,30.44421f,43.59674f,27.675222f,25.05579f,43.59674f,26.977911f,30.352406f,43.59674f,26.977911f,25.147594f,43.59674f,26.32812f,30.083254f,43.59674f,26.32812f,25.416746f,43.59674f,25.77013f,29.655094f,43.59674f,25.77013f,25.844906f,43.59674f,25.34197f,29.097105f,43.59674f,25.34197f,26.402895f,43.59674f,25.072817f,28.447313f,43.59674f,25.072817f,27.052687f,43.59674f,24.981014f,27.75f,43.59674f,};
FloatBuffer fbv = GLBuffers.newDirectFloatBuffer(positionsArray, 0);
gl.glVertexPointer(3, GL2.GL_FLOAT, 0, fbv);
gl.glEnableClientState(GL2.GL_VERTEX_ARRAY);
FloatBuffer fbn = null;
float[] normalsArray = {
-0.7092353f,-0.190039f,0.6788744f,-0.7092353f,0.190039f,0.6788744f,-0.7342544f,0.0f,0.6788744f,-0.635883f,-0.3671272f,0.6788744f,-0.635883f,0.3671272f,0.6788744f,-0.5191963f,-0.5191963f,0.6788744f,-0.5191963f,0.5191963f,0.6788744f,-0.3671272f,-0.635883f,0.6788744f,-0.3671272f,0.635883f,0.6788744f,-0.190039f,-0.7092353f,0.6788744f,-0.190039f,0.7092353f,0.6788744f,-0.0f,-0.7342544f,0.6788744f,0.0f,0.7342544f,0.6788744f,0.190039f,-0.7092353f,0.6788744f,0.190039f,0.7092353f,0.6788744f,0.3671272f,-0.635883f,0.6788744f,0.3671272f,0.635883f,0.6788744f,0.5191963f,-0.5191963f,0.6788744f,0.5191963f,0.5191963f,0.6788744f,0.635883f,-0.3671272f,0.6788744f,0.635883f,0.3671272f,0.6788744f,0.7092353f,-0.190039f,0.6788744f,0.7092353f,0.190039f,0.6788744f,0.7342544f,0.0f,0.6788744f,-0.7342544f,-0.0f,-0.6788744f,-0.7092353f,0.190039f,-0.6788744f,-0.7092353f,-0.190039f,-0.6788744f,-0.635883f,-0.3671272f,-0.6788744f,-0.635883f,0.3671272f,-0.6788744f,-0.5191963f,-0.5191963f,-0.6788744f,-0.5191963f,0.5191963f,-0.6788744f,-0.3671272f,-0.635883f,-0.6788744f,-0.3671272f,0.635883f,-0.6788744f,-0.190039f,-0.7092353f,-0.6788744f,-0.190039f,0.7092353f,-0.6788744f,-0.0f,-0.7342544f,-0.6788744f,0.0f,0.7342544f,-0.6788744f,0.190039f,-0.7092353f,-0.6788744f,0.190039f,0.7092353f,-0.6788744f,0.3671272f,-0.635883f,-0.6788744f,0.3671272f,0.635883f,-0.6788744f,0.5191963f,-0.5191963f,-0.6788744f,0.5191963f,0.5191963f,-0.6788744f,0.635883f,-0.3671272f,-0.6788744f,0.635883f,0.3671272f,-0.6788744f,0.7092353f,-0.190039f,-0.6788744f,0.7092353f,0.190039f,-0.6788744f,0.7342544f,-0.0f,-0.6788744f,};
fbn = GLBuffers.newDirectFloatBuffer(normalsArray, 0);
gl.glNormalPointer(GL2.GL_FLOAT, 0, fbn);
gl.glEnableClientState(GL2.GL_NORMAL_ARRAY);
FloatBuffer fbt = null;
float[] texcoordArray = null;
{
gl.glColor4d(1.0, 1.0, 1.0, 1.0);
int[] indices = {
0,1,2,1,0,3,1,3,4,4,3,5,4,5,6,6,5,7,6,7,8,8,7,9,8,9,10,10,9,11,10,11,12,12,11,13,12,13,14,14,13,15,14,15,16,16,15,17,16,17,18,18,17,19,18,19,20,20,19,21,20,21,22,22,21,23,};
IntBuffer fbi = GLBuffers.newDirectIntBuffer(indices, 0);
gl.glDrawElements(GL2.GL_TRIANGLES, 66, GL2.GL_UNSIGNED_INT, fbi);
gl.glDisable(GL2.GL_TEXTURE_2D);
gl.glDisable(GL2.GL_BLEND);
}
{
gl.glColor4d(0.0, 0.0, 0.0, 1.0);
int[] indices = {
24,25,26,26,25,27,25,28,27,27,28,29,28,30,29,29,30,31,30,32,31,31,32,33,32,34,33,33,34,35,34,36,35,35,36,37,36,38,37,37,38,39,38,40,39,39,40,41,40,42,41,41,42,43,42,44,43,43,44,45,44,46,45,47,45,46,};
IntBuffer fbi = GLBuffers.newDirectIntBuffer(indices, 0);
gl.glDrawElements(GL2.GL_TRIANGLES, 66, GL2.GL_UNSIGNED_INT, fbi);
gl.glDisable(GL2.GL_TEXTURE_2D);
gl.glDisable(GL2.GL_BLEND);
}
gl.glDisableClientState(GL2.GL_VERTEX_ARRAY);
gl.glDisableClientState(GL2.GL_NORMAL_ARRAY);
gl.glDisableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
}
private void ID44(GL2 gl){
float[] positionsArray = {
27.675222f,30.44421f,43.59674f,28.372536f,30.352406f,40.34674f,27.675222f,30.44421f,40.34674f,28.372536f,30.352406f,43.59674f,28.372536f,30.352406f,43.59674f,27.675222f,30.44421f,43.59674f,28.372536f,30.352406f,40.34674f,27.675222f,30.44421f,40.34674f,26.977911f,30.352406f,43.59674f,26.977911f,30.352406f,40.34674f,26.977911f,30.352406f,43.59674f,26.977911f,30.352406f,40.34674f,29.022327f,30.083254f,40.34674f,29.022327f,30.083254f,43.59674f,29.022327f,30.083254f,43.59674f,29.022327f,30.083254f,40.34674f,26.32812f,30.083254f,43.59674f,26.32812f,30.083254f,40.34674f,26.32812f,30.083254f,43.59674f,26.32812f,30.083254f,40.34674f,29.580317f,29.655094f,40.34674f,29.580317f,29.655094f,43.59674f,29.580317f,29.655094f,43.59674f,29.580317f,29.655094f,40.34674f,25.77013f,29.655094f,43.59674f,25.77013f,29.655094f,40.34674f,25.77013f,29.655094f,43.59674f,25.77013f,29.655094f,40.34674f,30.008476f,29.097105f,43.59674f,30.008476f,29.097105f,40.34674f,30.008476f,29.097105f,43.59674f,30.008476f,29.097105f,40.34674f,25.34197f,29.097105f,40.34674f,25.34197f,29.097105f,43.59674f,25.34197f,29.097105f,40.34674f,25.34197f,29.097105f,43.59674f,30.27763f,28.447313f,43.59674f,30.27763f,28.447313f,40.34674f,30.27763f,28.447313f,43.59674f,30.27763f,28.447313f,40.34674f,25.072817f,28.447313f,40.34674f,25.072817f,28.447313f,43.59674f,25.072817f,28.447313f,40.34674f,25.072817f,28.447313f,43.59674f,30.369432f,27.75f,43.59674f,30.369432f,27.75f,40.34674f,30.369432f,27.75f,43.59674f,30.369432f,27.75f,40.34674f,24.981014f,27.75f,40.34674f,24.981014f,27.75f,43.59674f,24.981014f,27.75f,40.34674f,24.981014f,27.75f,43.59674f,30.27763f,27.052687f,43.59674f,30.27763f,27.052687f,40.34674f,30.27763f,27.052687f,43.59674f,30.27763f,27.052687f,40.34674f,25.072817f,27.052687f,40.34674f,25.072817f,27.052687f,43.59674f,25.072817f,27.052687f,40.34674f,25.072817f,27.052687f,43.59674f,30.008476f,26.402895f,43.59674f,30.008476f,26.402895f,40.34674f,30.008476f,26.402895f,43.59674f,30.008476f,26.402895f,40.34674f,25.34197f,26.402895f,40.34674f,25.34197f,26.402895f,43.59674f,25.34197f,26.402895f,40.34674f,25.34197f,26.402895f,43.59674f,29.580317f,25.844906f,43.59674f,29.580317f,25.844906f,40.34674f,29.580317f,25.844906f,43.59674f,29.580317f,25.844906f,40.34674f,25.77013f,25.844906f,40.34674f,25.77013f,25.844906f,43.59674f,25.77013f,25.844906f,40.34674f,25.77013f,25.844906f,43.59674f,29.022327f,25.416746f,40.34674f,29.022327f,25.416746f,43.59674f,29.022327f,25.416746f,43.59674f,29.022327f,25.416746f,40.34674f,26.32812f,25.416746f,43.59674f,26.32812f,25.416746f,40.34674f,26.32812f,25.416746f,43.59674f,26.32812f,25.416746f,40.34674f,28.372536f,25.147594f,40.34674f,28.372536f,25.147594f,43.59674f,28.372536f,25.147594f,43.59674f,28.372536f,25.147594f,40.34674f,26.977911f,25.147594f,43.59674f,26.977911f,25.147594f,40.34674f,26.977911f,25.147594f,43.59674f,26.977911f,25.147594f,40.34674f,27.675222f,25.05579f,40.34674f,27.675222f,25.05579f,43.59674f,27.675222f,25.05579f,43.59674f,27.675222f,25.05579f,40.34674f,};
FloatBuffer fbv = GLBuffers.newDirectFloatBuffer(positionsArray, 0);
gl.glVertexPointer(3, GL2.GL_FLOAT, 0, fbv);
gl.glEnableClientState(GL2.GL_VERTEX_ARRAY);
FloatBuffer fbn = null;
float[] normalsArray = {
0.0f,0.7342544f,0.6788744f,0.1747361f,0.652124f,0.7377002f,0.0f,0.6751284f,0.7377002f,0.190039f,0.7092353f,0.6788744f,-0.190039f,-0.7092353f,-0.6788744f,-0.0f,-0.7342544f,-0.6788744f,-0.1747361f,-0.652124f,-0.7377002f,-0.0f,-0.6751284f,-0.7377002f,-0.190039f,0.7092353f,0.6788744f,-0.1747361f,0.652124f,0.7377002f,0.190039f,-0.7092353f,-0.6788744f,0.1747361f,-0.652124f,-0.7377002f,0.3375642f,0.5846784f,0.7377002f,0.3671272f,0.635883f,0.6788744f,-0.3671272f,-0.635883f,-0.6788744f,-0.3375642f,-0.5846784f,-0.7377002f,-0.3671272f,0.635883f,0.6788744f,-0.3375642f,0.5846784f,0.7377002f,0.3671272f,-0.635883f,-0.6788744f,0.3375642f,-0.5846784f,-0.7377002f,0.4773879f,0.4773879f,0.7377002f,0.5191963f,0.5191963f,0.6788744f,-0.5191963f,-0.5191963f,-0.6788744f,-0.4773879f,-0.4773879f,-0.7377002f,-0.5191963f,0.5191963f,0.6788744f,-0.4773879f,0.4773879f,0.7377002f,0.5191963f,-0.5191963f,-0.6788744f,0.4773879f,-0.4773879f,-0.7377002f,0.635883f,0.3671272f,0.6788744f,0.5846784f,0.3375642f,0.7377002f,-0.635883f,-0.3671272f,-0.6788744f,-0.5846784f,-0.3375642f,-0.7377002f,-0.5846784f,0.3375642f,0.7377002f,-0.635883f,0.3671272f,0.6788744f,0.5846784f,-0.3375642f,-0.7377002f,0.635883f,-0.3671272f,-0.6788744f,0.7092353f,0.190039f,0.6788744f,0.652124f,0.1747361f,0.7377002f,-0.7092353f,-0.190039f,-0.6788744f,-0.652124f,-0.1747361f,-0.7377002f,-0.652124f,0.1747361f,0.7377002f,-0.7092353f,0.190039f,0.6788744f,0.652124f,-0.1747361f,-0.7377002f,0.7092353f,-0.190039f,-0.6788744f,0.7342544f,0.0f,0.6788744f,0.6751284f,0.0f,0.7377002f,-0.7342544f,-0.0f,-0.6788744f,-0.6751284f,-0.0f,-0.7377002f,-0.6751284f,0.0f,0.7377002f,-0.7342544f,0.0f,0.6788744f,0.6751284f,-0.0f,-0.7377002f,0.7342544f,-0.0f,-0.6788744f,0.7092353f,-0.190039f,0.6788744f,0.652124f,-0.1747361f,0.7377002f,-0.7092353f,0.190039f,-0.6788744f,-0.652124f,0.1747361f,-0.7377002f,-0.652124f,-0.1747361f,0.7377002f,-0.7092353f,-0.190039f,0.6788744f,0.652124f,0.1747361f,-0.7377002f,0.7092353f,0.190039f,-0.6788744f,0.635883f,-0.3671272f,0.6788744f,0.5846784f,-0.3375642f,0.7377002f,-0.635883f,0.3671272f,-0.6788744f,-0.5846784f,0.3375642f,-0.7377002f,-0.5846784f,-0.3375642f,0.7377002f,-0.635883f,-0.3671272f,0.6788744f,0.5846784f,0.3375642f,-0.7377002f,0.635883f,0.3671272f,-0.6788744f,0.5191963f,-0.5191963f,0.6788744f,0.4773879f,-0.4773879f,0.7377002f,-0.5191963f,0.5191963f,-0.6788744f,-0.4773879f,0.4773879f,-0.7377002f,-0.4773879f,-0.4773879f,0.7377002f,-0.5191963f,-0.5191963f,0.6788744f,0.4773879f,0.4773879f,-0.7377002f,0.5191963f,0.5191963f,-0.6788744f,0.3375642f,-0.5846784f,0.7377002f,0.3671272f,-0.635883f,0.6788744f,-0.3671272f,0.635883f,-0.6788744f,-0.3375642f,0.5846784f,-0.7377002f,-0.3671272f,-0.635883f,0.6788744f,-0.3375642f,-0.5846784f,0.7377002f,0.3671272f,0.635883f,-0.6788744f,0.3375642f,0.5846784f,-0.7377002f,0.1747361f,-0.652124f,0.7377002f,0.190039f,-0.7092353f,0.6788744f,-0.190039f,0.7092353f,-0.6788744f,-0.1747361f,0.652124f,-0.7377002f,-0.190039f,-0.7092353f,0.6788744f,-0.1747361f,-0.652124f,0.7377002f,0.190039f,0.7092353f,-0.6788744f,0.1747361f,0.652124f,-0.7377002f,-0.0f,-0.6751284f,0.7377002f,-0.0f,-0.7342544f,0.6788744f,0.0f,0.7342544f,-0.6788744f,0.0f,0.6751284f,-0.7377002f,};
fbn = GLBuffers.newDirectFloatBuffer(normalsArray, 0);
gl.glNormalPointer(GL2.GL_FLOAT, 0, fbn);
gl.glEnableClientState(GL2.GL_NORMAL_ARRAY);
FloatBuffer fbt = null;
float[] texcoordArray = null;
{
gl.glColor4d(1.0, 1.0, 1.0, 1.0);
int[] indices = {
0,1,2,1,0,3,8,2,9,2,8,0,3,12,1,12,3,13,16,9,17,9,16,8,13,20,12,20,13,21,24,17,25,17,24,16,20,28,29,28,20,21,24,32,33,32,24,25,29,36,37,36,29,28,33,40,41,40,33,32,37,44,45,44,37,36,41,48,49,48,41,40,45,52,53,52,45,44,49,56,57,56,49,48,53,60,61,60,53,52,57,64,65,64,57,56,61,68,69,68,61,60,65,72,73,72,65,64,68,76,69,76,68,77,80,72,81,72,80,73,77,84,76,84,77,85,88,81,89,81,88,80,85,92,84,92,85,93,93,89,92,89,93,88,};
IntBuffer fbi = GLBuffers.newDirectIntBuffer(indices, 0);
gl.glDrawElements(GL2.GL_TRIANGLES, 144, GL2.GL_UNSIGNED_INT, fbi);
gl.glDisable(GL2.GL_TEXTURE_2D);
gl.glDisable(GL2.GL_BLEND);
}
{
gl.glColor4d(0.1372549, 0.1372549, 0.1372549, 1.0);
int[] indices = {
4,5,6,7,6,5,5,10,7,11,7,10,14,4,15,6,15,4,10,18,11,19,11,18,22,14,23,15,23,14,18,26,19,27,19,26,22,23,30,31,30,23,27,26,34,35,34,26,30,31,38,39,38,31,34,35,42,43,42,35,38,39,46,47,46,39,42,43,50,51,50,43,46,47,54,55,54,47,50,51,58,59,58,51,54,55,62,63,62,55,58,59,66,67,66,59,62,63,70,71,70,63,66,67,74,75,74,67,78,70,79,71,79,70,75,82,74,83,74,82,86,78,87,79,87,78,82,90,83,91,83,90,94,86,95,87,95,86,90,94,91,95,91,94,};
IntBuffer fbi = GLBuffers.newDirectIntBuffer(indices, 0);
gl.glDrawElements(GL2.GL_TRIANGLES, 144, GL2.GL_UNSIGNED_INT, fbi);
gl.glDisable(GL2.GL_TEXTURE_2D);
gl.glDisable(GL2.GL_BLEND);
}
gl.glDisableClientState(GL2.GL_VERTEX_ARRAY);
gl.glDisableClientState(GL2.GL_NORMAL_ARRAY);
gl.glDisableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
}
private void ID50(GL2 gl){
float[] positionsArray = {
24.715296f,26.95689f,58.09674f,24.715296f,28.54311f,58.09674f,24.610882f,27.75f,58.09674f,25.021425f,26.217829f,58.09674f,25.021425f,29.282171f,58.09674f,25.508406f,25.583183f,58.09674f,25.508406f,29.916817f,58.09674f,26.143053f,25.096203f,58.09674f,26.143053f,30.403797f,58.09674f,26.882113f,24.790073f,58.09674f,26.882113f,30.709927f,58.09674f,27.675222f,24.68566f,58.09674f,27.675222f,30.81434f,58.09674f,28.468332f,24.790073f,58.09674f,28.468332f,30.709927f,58.09674f,29.207394f,25.096203f,58.09674f,29.207394f,30.403797f,58.09674f,29.84204f,25.583183f,58.09674f,29.84204f,29.916817f,58.09674f,30.329021f,26.217829f,58.09674f,30.329021f,29.282171f,58.09674f,30.635149f,26.95689f,58.09674f,30.635149f,28.54311f,58.09674f,30.739565f,27.75f,58.09674f,};
FloatBuffer fbv = GLBuffers.newDirectFloatBuffer(positionsArray, 0);
gl.glVertexPointer(3, GL2.GL_FLOAT, 0, fbv);
gl.glEnableClientState(GL2.GL_VERTEX_ARRAY);
FloatBuffer fbn = null;
float[] normalsArray = {
0.7092353f,0.190039f,0.6788744f,0.7092353f,-0.190039f,0.6788744f,0.7342544f,0.0f,0.6788744f,0.635883f,0.3671272f,0.6788744f,0.635883f,-0.3671272f,0.6788744f,0.5191963f,0.5191963f,0.6788744f,0.5191963f,-0.5191963f,0.6788744f,0.3671272f,0.635883f,0.6788744f,0.3671272f,-0.635883f,0.6788744f,0.190039f,0.7092353f,0.6788744f,0.190039f,-0.7092353f,0.6788744f,-0.0f,0.7342544f,0.6788744f,-0.0f,-0.7342544f,0.6788744f,-0.190039f,0.7092353f,0.6788744f,-0.190039f,-0.7092353f,0.6788744f,-0.3671272f,0.635883f,0.6788744f,-0.3671272f,-0.635883f,0.6788744f,-0.5191963f,0.5191963f,0.6788744f,-0.5191963f,-0.5191963f,0.6788744f,-0.635883f,0.3671272f,0.6788744f,-0.635883f,-0.3671272f,0.6788744f,-0.7092353f,0.190039f,0.6788744f,-0.7092353f,-0.190039f,0.6788744f,-0.7342544f,0.0f,0.6788744f,};
fbn = GLBuffers.newDirectFloatBuffer(normalsArray, 0);
gl.glNormalPointer(GL2.GL_FLOAT, 0, fbn);
gl.glEnableClientState(GL2.GL_NORMAL_ARRAY);
FloatBuffer fbt = null;
float[] texcoordArray = null;
{
gl.glColor4d(0.0, 0.0, 0.0, 1.0);
int[] indices = {
0,1,2,1,0,3,1,3,4,4,3,5,4,5,6,6,5,7,6,7,8,8,7,9,8,9,10,10,9,11,10,11,12,12,11,13,12,13,14,14,13,15,14,15,16,16,15,17,16,17,18,18,17,19,18,19,20,20,19,21,20,21,22,22,21,23,};
IntBuffer fbi = GLBuffers.newDirectIntBuffer(indices, 0);
gl.glDrawElements(GL2.GL_TRIANGLES, 66, GL2.GL_UNSIGNED_INT, fbi);
gl.glDisable(GL2.GL_TEXTURE_2D);
gl.glDisable(GL2.GL_BLEND);
}
gl.glDisableClientState(GL2.GL_VERTEX_ARRAY);
gl.glDisableClientState(GL2.GL_NORMAL_ARRAY);
gl.glDisableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
}
private void ID56(GL2 gl){
float[] positionsArray = {
28.468332f,30.709927f,59.09674f,27.675222f,30.81434f,58.09674f,28.468332f,30.709927f,58.09674f,27.675222f,30.81434f,59.09674f,29.207394f,30.403797f,59.09674f,29.207394f,30.403797f,58.09674f,26.882113f,30.709927f,58.09674f,26.882113f,30.709927f,59.09674f,29.84204f,29.916817f,59.09674f,29.84204f,29.916817f,58.09674f,26.143053f,30.403797f,58.09674f,26.143053f,30.403797f,59.09674f,30.329021f,29.282171f,58.09674f,30.329021f,29.282171f,59.09674f,25.508406f,29.916817f,58.09674f,25.508406f,29.916817f,59.09674f,30.635149f,28.54311f,58.09674f,30.635149f,28.54311f,59.09674f,25.021425f,29.282171f,59.09674f,25.021425f,29.282171f,58.09674f,30.739565f,27.75f,58.09674f,30.739565f,27.75f,59.09674f,24.715296f,28.54311f,59.09674f,24.715296f,28.54311f,58.09674f,30.635149f,26.95689f,58.09674f,30.635149f,26.95689f,59.09674f,24.610882f,27.75f,59.09674f,24.610882f,27.75f,58.09674f,30.329021f,26.217829f,58.09674f,30.329021f,26.217829f,59.09674f,24.715296f,26.95689f,59.09674f,24.715296f,26.95689f,58.09674f,29.84204f,25.583183f,58.09674f,29.84204f,25.583183f,59.09674f,25.021425f,26.217829f,59.09674f,25.021425f,26.217829f,58.09674f,29.207394f,25.096203f,59.09674f,29.207394f,25.096203f,58.09674f,25.508406f,25.583183f,59.09674f,25.508406f,25.583183f,58.09674f,28.468332f,24.790073f,59.09674f,28.468332f,24.790073f,58.09674f,26.143053f,25.096203f,58.09674f,26.143053f,25.096203f,59.09674f,27.675222f,24.68566f,59.09674f,27.675222f,24.68566f,58.09674f,26.882113f,24.790073f,58.09674f,26.882113f,24.790073f,59.09674f,};
FloatBuffer fbv = GLBuffers.newDirectFloatBuffer(positionsArray, 0);
gl.glVertexPointer(3, GL2.GL_FLOAT, 0, fbv);
gl.glEnableClientState(GL2.GL_VERTEX_ARRAY);
FloatBuffer fbn = null;
float[] normalsArray = {
-0.1747361f,-0.652124f,0.7377002f,-0.0f,-0.7342544f,0.6788744f,-0.190039f,-0.7092353f,0.6788744f,-0.0f,-0.6751284f,0.7377002f,-0.3375642f,-0.5846784f,0.7377002f,-0.3671272f,-0.635883f,0.6788744f,0.190039f,-0.7092353f,0.6788744f,0.1747361f,-0.652124f,0.7377002f,-0.4773879f,-0.4773879f,0.7377002f,-0.5191963f,-0.5191963f,0.6788744f,0.3671272f,-0.635883f,0.6788744f,0.3375642f,-0.5846784f,0.7377002f,-0.635883f,-0.3671272f,0.6788744f,-0.5846784f,-0.3375642f,0.7377002f,0.5191963f,-0.5191963f,0.6788744f,0.4773879f,-0.4773879f,0.7377002f,-0.7092353f,-0.190039f,0.6788744f,-0.652124f,-0.1747361f,0.7377002f,0.5846784f,-0.3375642f,0.7377002f,0.635883f,-0.3671272f,0.6788744f,-0.7342544f,0.0f,0.6788744f,-0.6751284f,0.0f,0.7377002f,0.652124f,-0.1747361f,0.7377002f,0.7092353f,-0.190039f,0.6788744f,-0.7092353f,0.190039f,0.6788744f,-0.652124f,0.1747361f,0.7377002f,0.6751284f,0.0f,0.7377002f,0.7342544f,0.0f,0.6788744f,-0.635883f,0.3671272f,0.6788744f,-0.5846784f,0.3375642f,0.7377002f,0.652124f,0.1747361f,0.7377002f,0.7092353f,0.190039f,0.6788744f,-0.5191963f,0.5191963f,0.6788744f,-0.4773879f,0.4773879f,0.7377002f,0.5846784f,0.3375642f,0.7377002f,0.635883f,0.3671272f,0.6788744f,-0.3375642f,0.5846784f,0.7377002f,-0.3671272f,0.635883f,0.6788744f,0.4773879f,0.4773879f,0.7377002f,0.5191963f,0.5191963f,0.6788744f,-0.1747361f,0.652124f,0.7377002f,-0.190039f,0.7092353f,0.6788744f,0.3671272f,0.635883f,0.6788744f,0.3375642f,0.5846784f,0.7377002f,-0.0f,0.6751284f,0.7377002f,-0.0f,0.7342544f,0.6788744f,0.190039f,0.7092353f,0.6788744f,0.1747361f,0.652124f,0.7377002f,};
fbn = GLBuffers.newDirectFloatBuffer(normalsArray, 0);
gl.glNormalPointer(GL2.GL_FLOAT, 0, fbn);
gl.glEnableClientState(GL2.GL_NORMAL_ARRAY);
FloatBuffer fbt = null;
float[] texcoordArray = null;
{
gl.glColor4d(1.0, 1.0, 1.0, 1.0);
int[] indices = {
0,1,2,1,0,3,4,2,5,2,4,0,3,6,1,6,3,7,8,5,9,5,8,4,7,10,6,10,7,11,8,12,13,12,8,9,11,14,10,14,11,15,13,16,17,16,13,12,14,18,19,18,14,15,17,20,21,20,17,16,19,22,23,22,19,18,21,24,25,24,21,20,23,26,27,26,23,22,25,28,29,28,25,24,27,30,31,30,27,26,29,32,33,32,29,28,31,34,35,34,31,30,36,32,37,32,36,33,35,38,39,38,35,34,40,37,41,37,40,36,38,42,39,42,38,43,44,41,45,41,44,40,43,46,42,46,43,47,47,45,46,45,47,44,};
IntBuffer fbi = GLBuffers.newDirectIntBuffer(indices, 0);
gl.glDrawElements(GL2.GL_TRIANGLES, 144, GL2.GL_UNSIGNED_INT, fbi);
gl.glDisable(GL2.GL_TEXTURE_2D);
gl.glDisable(GL2.GL_BLEND);
}
gl.glDisableClientState(GL2.GL_VERTEX_ARRAY);
gl.glDisableClientState(GL2.GL_NORMAL_ARRAY);
gl.glDisableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
}
private void ID62(GL2 gl){
float[] positionsArray = {
27.879555f,15.25f,39.84674f,27.872591f,15.197115f,41.59674f,27.872591f,15.197115f,39.84674f,27.879555f,15.25f,41.59674f,27.852179f,15.147835f,41.59674f,27.852179f,15.147835f,39.84674f,27.477856f,15.302885f,39.84674f,27.477856f,15.197115f,39.84674f,27.470892f,15.25f,39.84674f,27.498268f,15.352165f,39.84674f,27.498268f,15.147835f,39.84674f,27.530739f,15.394484f,39.84674f,27.530739f,15.105516f,39.84674f,27.573057f,15.426955f,39.84674f,27.573057f,15.073045f,39.84674f,27.62234f,15.447369f,39.84674f,27.62234f,15.052631f,39.84674f,27.675222f,15.45433f,39.84674f,27.675222f,15.04567f,39.84674f,27.728107f,15.447369f,39.84674f,27.728107f,15.052631f,39.84674f,27.77739f,15.426955f,39.84674f,27.77739f,15.073045f,39.84674f,27.819706f,15.394484f,39.84674f,27.819706f,15.105516f,39.84674f,27.852179f,15.352165f,39.84674f,27.852179f,15.147835f,39.84674f,27.872591f,15.302885f,39.84674f,27.872591f,15.197115f,39.84674f,27.879555f,15.25f,39.84674f,27.872591f,15.302885f,39.84674f,27.872591f,15.302885f,41.59674f,27.819706f,15.105516f,41.59674f,27.819706f,15.105516f,39.84674f,27.498268f,15.352165f,41.59674f,27.477856f,15.302885f,39.84674f,27.477856f,15.302885f,41.59674f,27.498268f,15.352165f,39.84674f,27.530739f,15.394484f,41.59674f,27.530739f,15.394484f,39.84674f,27.573057f,15.426955f,39.84674f,27.573057f,15.426955f,41.59674f,27.62234f,15.447369f,39.84674f,27.62234f,15.447369f,41.59674f,27.675222f,15.45433f,39.84674f,27.675222f,15.45433f,41.59674f,27.728107f,15.447369f,39.84674f,27.728107f,15.447369f,41.59674f,27.77739f,15.426955f,39.84674f,27.77739f,15.426955f,41.59674f,27.819706f,15.394484f,39.84674f,27.819706f,15.394484f,41.59674f,27.852179f,15.352165f,41.59674f,27.852179f,15.352165f,39.84674f,27.77739f,15.073045f,39.84674f,27.77739f,15.073045f,41.59674f,27.728107f,15.052631f,39.84674f,27.728107f,15.052631f,41.59674f,27.675222f,15.04567f,39.84674f,27.675222f,15.04567f,41.59674f,27.62234f,15.052631f,39.84674f,27.62234f,15.052631f,41.59674f,27.573057f,15.073045f,39.84674f,27.573057f,15.073045f,41.59674f,27.530739f,15.105516f,39.84674f,27.530739f,15.105516f,41.59674f,27.498268f,15.147835f,41.59674f,27.498268f,15.147835f,39.84674f,27.477856f,15.197115f,41.59674f,27.477856f,15.197115f,39.84674f,27.470892f,15.25f,41.59674f,27.470892f,15.25f,39.84674f,};
FloatBuffer fbv = GLBuffers.newDirectFloatBuffer(positionsArray, 0);
gl.glVertexPointer(3, GL2.GL_FLOAT, 0, fbv);
gl.glEnableClientState(GL2.GL_VERTEX_ARRAY);
FloatBuffer fbn = null;
float[] normalsArray = {
1.0f,0.0f,0.0f,0.652124f,-0.1747361f,-0.7377002f,0.9659258f,-0.258819f,0.0f,0.6751284f,0.0f,-0.7377002f,0.5846784f,-0.3375642f,-0.7377002f,0.8660254f,-0.5f,0.0f,0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,0.9659258f,0.258819f,0.0f,0.652124f,0.1747361f,-0.7377002f,0.4773879f,-0.4773879f,-0.7377002f,0.7071068f,-0.7071068f,0.0f,-0.5846784f,0.3375642f,-0.7377002f,-0.9659258f,0.258819f,0.0f,-0.652124f,0.1747361f,-0.7377002f,-0.8660254f,0.5f,0.0f,-0.4773879f,0.4773879f,-0.7377002f,-0.7071068f,0.7071068f,0.0f,-0.5f,0.8660254f,0.0f,-0.3375642f,0.5846784f,-0.7377002f,-0.258819f,0.9659258f,0.0f,-0.1747361f,0.652124f,-0.7377002f,0.0f,1.0f,0.0f,0.0f,0.6751284f,-0.7377002f,0.258819f,0.9659258f,0.0f,0.1747361f,0.652124f,-0.7377002f,0.5f,0.8660254f,0.0f,0.3375642f,0.5846784f,-0.7377002f,0.7071068f,0.7071068f,0.0f,0.4773879f,0.4773879f,-0.7377002f,0.5846784f,0.3375642f,-0.7377002f,0.8660254f,0.5f,0.0f,0.5f,-0.8660254f,0.0f,0.3375642f,-0.5846784f,-0.7377002f,0.258819f,-0.9659258f,0.0f,0.1747361f,-0.652124f,-0.7377002f,-0.0f,-1.0f,0.0f,-0.0f,-0.6751284f,-0.7377002f,-0.258819f,-0.9659258f,0.0f,-0.1747361f,-0.652124f,-0.7377002f,-0.5f,-0.8660254f,0.0f,-0.3375642f,-0.5846784f,-0.7377002f,-0.7071068f,-0.7071068f,0.0f,-0.4773879f,-0.4773879f,-0.7377002f,-0.5846784f,-0.3375642f,-0.7377002f,-0.8660254f,-0.5f,0.0f,-0.652124f,-0.1747361f,-0.7377002f,-0.9659258f,-0.258819f,0.0f,-0.6751284f,0.0f,-0.7377002f,-1.0f,0.0f,0.0f,};
fbn = GLBuffers.newDirectFloatBuffer(normalsArray, 0);
gl.glNormalPointer(GL2.GL_FLOAT, 0, fbn);
gl.glEnableClientState(GL2.GL_NORMAL_ARRAY);
FloatBuffer fbt = null;
float[] texcoordArray = null;
{
gl.glColor4d(1.0, 1.0, 1.0, 1.0);
int[] indices = {
0,1,2,1,0,3,2,4,5,4,2,1,6,7,8,7,6,9,7,9,10,10,9,11,10,11,12,12,11,13,12,13,14,14,13,15,14,15,16,16,15,17,16,17,18,18,17,19,18,19,20,20,19,21,20,21,22,22,21,23,22,23,24,24,23,25,24,25,26,26,25,27,26,27,28,28,27,29,30,3,0,3,30,31,5,32,33,32,5,4,34,35,36,35,34,37,38,37,34,37,38,39,38,40,39,40,38,41,41,42,40,42,41,43,43,44,42,44,43,45,45,46,44,46,45,47,47,48,46,48,47,49,49,50,48,50,49,51,50,52,53,52,50,51,53,31,30,31,53,52,32,54,33,54,32,55,55,56,54,56,55,57,57,58,56,58,57,59,59,60,58,60,59,61,61,62,60,62,61,63,63,64,62,64,63,65,66,64,65,64,66,67,68,67,66,67,68,69,70,69,68,69,70,71,36,71,70,71,36,35,};
IntBuffer fbi = GLBuffers.newDirectIntBuffer(indices, 0);
gl.glDrawElements(GL2.GL_TRIANGLES, 210, GL2.GL_UNSIGNED_INT, fbi);
gl.glDisable(GL2.GL_TEXTURE_2D);
gl.glDisable(GL2.GL_BLEND);
}
gl.glDisableClientState(GL2.GL_VERTEX_ARRAY);
gl.glDisableClientState(GL2.GL_NORMAL_ARRAY);
gl.glDisableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
}
private void ID68(GL2 gl){
float[] positionsArray = {
27.675222f,18.31434f,59.09674f,26.882113f,18.209927f,58.09674f,27.675222f,18.31434f,58.09674f,26.882113f,18.209927f,59.09674f,28.468332f,18.209927f,59.09674f,28.468332f,18.209927f,58.09674f,26.143053f,17.903797f,58.09674f,26.143053f,17.903797f,59.09674f,29.207394f,17.903797f,59.09674f,29.207394f,17.903797f,58.09674f,25.508406f,17.416817f,58.09674f,25.508406f,17.416817f,59.09674f,29.84204f,17.416817f,59.09674f,29.84204f,17.416817f,58.09674f,25.021425f,16.782171f,59.09674f,25.021425f,16.782171f,58.09674f,30.329021f,16.782171f,58.09674f,30.329021f,16.782171f,59.09674f,24.715296f,16.04311f,59.09674f,24.715296f,16.04311f,58.09674f,30.635149f,16.04311f,58.09674f,30.635149f,16.04311f,59.09674f,24.610882f,15.25f,59.09674f,24.610882f,15.25f,58.09674f,30.739565f,15.25f,58.09674f,30.739565f,15.25f,59.09674f,24.715296f,14.45689f,59.09674f,24.715296f,14.45689f,58.09674f,30.635149f,14.45689f,58.09674f,30.635149f,14.45689f,59.09674f,25.021425f,13.71783f,59.09674f,25.021425f,13.71783f,58.09674f,30.329021f,13.71783f,58.09674f,30.329021f,13.71783f,59.09674f,25.508406f,13.083183f,59.09674f,25.508406f,13.083183f,58.09674f,29.84204f,13.083183f,58.09674f,29.84204f,13.083183f,59.09674f,26.143053f,12.596203f,58.09674f,26.143053f,12.596203f,59.09674f,29.207394f,12.596203f,59.09674f,29.207394f,12.596203f,58.09674f,26.882113f,12.290073f,58.09674f,26.882113f,12.290073f,59.09674f,28.468332f,12.290073f,59.09674f,28.468332f,12.290073f,58.09674f,27.675222f,12.185658f,58.09674f,27.675222f,12.185658f,59.09674f,};
FloatBuffer fbv = GLBuffers.newDirectFloatBuffer(positionsArray, 0);
gl.glVertexPointer(3, GL2.GL_FLOAT, 0, fbv);
gl.glEnableClientState(GL2.GL_VERTEX_ARRAY);
FloatBuffer fbn = null;
float[] normalsArray = {
-0.0f,-0.6751284f,0.7377002f,0.190039f,-0.7092353f,0.6788744f,-0.0f,-0.7342544f,0.6788744f,0.1747361f,-0.652124f,0.7377002f,-0.1747361f,-0.652124f,0.7377002f,-0.190039f,-0.7092353f,0.6788744f,0.3671272f,-0.635883f,0.6788744f,0.3375642f,-0.5846784f,0.7377002f,-0.3375642f,-0.5846784f,0.7377002f,-0.3671272f,-0.635883f,0.6788744f,0.5191963f,-0.5191963f,0.6788744f,0.4773879f,-0.4773879f,0.7377002f,-0.4773879f,-0.4773879f,0.7377002f,-0.5191963f,-0.5191963f,0.6788744f,0.5846784f,-0.3375642f,0.7377002f,0.635883f,-0.3671272f,0.6788744f,-0.635883f,-0.3671272f,0.6788744f,-0.5846784f,-0.3375642f,0.7377002f,0.652124f,-0.1747361f,0.7377002f,0.7092353f,-0.190039f,0.6788744f,-0.7092353f,-0.190039f,0.6788744f,-0.652124f,-0.1747361f,0.7377002f,0.6751284f,0.0f,0.7377002f,0.7342544f,0.0f,0.6788744f,-0.7342544f,0.0f,0.6788744f,-0.6751284f,0.0f,0.7377002f,0.652124f,0.1747361f,0.7377002f,0.7092353f,0.190039f,0.6788744f,-0.7092353f,0.190039f,0.6788744f,-0.652124f,0.1747361f,0.7377002f,0.5846784f,0.3375642f,0.7377002f,0.635883f,0.3671272f,0.6788744f,-0.635883f,0.3671272f,0.6788744f,-0.5846784f,0.3375642f,0.7377002f,0.4773879f,0.4773879f,0.7377002f,0.5191963f,0.5191963f,0.6788744f,-0.5191963f,0.5191963f,0.6788744f,-0.4773879f,0.4773879f,0.7377002f,0.3671272f,0.635883f,0.6788744f,0.3375642f,0.5846784f,0.7377002f,-0.3375642f,0.5846784f,0.7377002f,-0.3671272f,0.635883f,0.6788744f,0.190039f,0.7092353f,0.6788744f,0.1747361f,0.652124f,0.7377002f,-0.1747361f,0.652124f,0.7377002f,-0.190039f,0.7092353f,0.6788744f,-0.0f,0.7342544f,0.6788744f,-0.0f,0.6751284f,0.7377002f,};
fbn = GLBuffers.newDirectFloatBuffer(normalsArray, 0);
gl.glNormalPointer(GL2.GL_FLOAT, 0, fbn);
gl.glEnableClientState(GL2.GL_NORMAL_ARRAY);
FloatBuffer fbt = null;
float[] texcoordArray = null;
{
gl.glColor4d(1.0, 1.0, 1.0, 1.0);
int[] indices = {
0,1,2,1,0,3,4,2,5,2,4,0,3,6,1,6,3,7,8,5,9,5,8,4,7,10,6,10,7,11,12,9,13,9,12,8,10,14,15,14,10,11,12,16,17,16,12,13,15,18,19,18,15,14,17,20,21,20,17,16,19,22,23,22,19,18,21,24,25,24,21,20,23,26,27,26,23,22,25,28,29,28,25,24,27,30,31,30,27,26,29,32,33,32,29,28,31,34,35,34,31,30,33,36,37,36,33,32,34,38,35,38,34,39,40,36,41,36,40,37,39,42,38,42,39,43,44,41,45,41,44,40,43,46,42,46,43,47,47,45,46,45,47,44,};
IntBuffer fbi = GLBuffers.newDirectIntBuffer(indices, 0);
gl.glDrawElements(GL2.GL_TRIANGLES, 144, GL2.GL_UNSIGNED_INT, fbi);
gl.glDisable(GL2.GL_TEXTURE_2D);
gl.glDisable(GL2.GL_BLEND);
}
gl.glDisableClientState(GL2.GL_VERTEX_ARRAY);
gl.glDisableClientState(GL2.GL_NORMAL_ARRAY);
gl.glDisableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
}
private void ID74(GL2 gl){
float[] positionsArray = {
27.819706f,15.394484f,39.84674f,28.791134f,15.894271f,41.59674f,27.852179f,15.352165f,39.84674f,28.586359f,16.161137f,41.59674f,28.919859f,15.583499f,41.59674f,27.872591f,15.302885f,39.84674f,28.319494f,16.36591f,41.59674f,27.77739f,15.426955f,39.84674f,28.586359f,16.161137f,41.59674f,28.791134f,15.894271f,43.84674f,28.791134f,15.894271f,41.59674f,28.586359f,16.161137f,43.84674f,28.963764f,15.25f,41.59674f,27.879555f,15.25f,39.84674f,28.919859f,15.583499f,43.84674f,28.919859f,15.583499f,41.59674f,28.008722f,16.494635f,41.59674f,27.728107f,15.447369f,39.84674f,28.319494f,16.36591f,43.84674f,28.319494f,16.36591f,41.59674f,27.872591f,15.197115f,39.84674f,28.919859f,14.916501f,41.59674f,28.963764f,15.25f,43.84674f,28.963764f,15.25f,41.59674f,27.675222f,16.538542f,41.59674f,27.675222f,15.45433f,39.84674f,28.008722f,16.494635f,43.84674f,28.008722f,16.494635f,41.59674f,27.852179f,15.147835f,39.84674f,28.791134f,14.605729f,41.59674f,28.919859f,14.916501f,43.84674f,28.919859f,14.916501f,41.59674f,27.341724f,16.494635f,41.59674f,27.62234f,15.447369f,39.84674f,27.675222f,16.538542f,43.84674f,27.675222f,16.538542f,41.59674f,27.819706f,15.105516f,39.84674f,28.586359f,14.338863f,41.59674f,28.791134f,14.605729f,43.84674f,28.791134f,14.605729f,41.59674f,27.030952f,16.36591f,41.59674f,27.573057f,15.426955f,39.84674f,27.341724f,16.494635f,43.84674f,27.341724f,16.494635f,41.59674f,27.77739f,15.073045f,39.84674f,28.319494f,14.13409f,41.59674f,28.586359f,14.338863f,43.84674f,28.586359f,14.338863f,41.59674f,26.764088f,16.161137f,41.59674f,27.530739f,15.394484f,39.84674f,27.030952f,16.36591f,43.84674f,27.030952f,16.36591f,41.59674f,27.728107f,15.052631f,39.84674f,28.008722f,14.005364f,41.59674f,28.319494f,14.13409f,41.59674f,28.319494f,14.13409f,43.84674f,26.559313f,15.894271f,41.59674f,27.498268f,15.352165f,39.84674f,26.764088f,16.161137f,43.84674f,26.764088f,16.161137f,41.59674f,27.675222f,15.04567f,39.84674f,27.675222f,13.961458f,41.59674f,28.008722f,14.005364f,41.59674f,28.008722f,14.005364f,43.84674f,26.430588f,15.583499f,41.59674f,27.477856f,15.302885f,39.84674f,26.559313f,15.894271f,41.59674f,26.559313f,15.894271f,43.84674f,27.62234f,15.052631f,39.84674f,27.341724f,14.005364f,41.59674f,27.675222f,13.961458f,41.59674f,27.675222f,13.961458f,43.84674f,27.470892f,15.25f,39.84674f,26.386683f,15.25f,41.59674f,26.430588f,15.583499f,41.59674f,26.430588f,15.583499f,43.84674f,27.573057f,15.073045f,39.84674f,27.030952f,14.13409f,41.59674f,27.341724f,14.005364f,41.59674f,27.341724f,14.005364f,43.84674f,27.477856f,15.197115f,39.84674f,26.430588f,14.916501f,41.59674f,26.386683f,15.25f,41.59674f,26.386683f,15.25f,43.84674f,27.530739f,15.105516f,39.84674f,26.764088f,14.338863f,41.59674f,27.030952f,14.13409f,41.59674f,27.030952f,14.13409f,43.84674f,27.498268f,15.147835f,39.84674f,26.559313f,14.605729f,41.59674f,26.430588f,14.916501f,41.59674f,26.430588f,14.916501f,43.84674f,26.764088f,14.338863f,41.59674f,26.764088f,14.338863f,43.84674f,26.559313f,14.605729f,41.59674f,26.559313f,14.605729f,43.84674f,};
FloatBuffer fbv = GLBuffers.newDirectFloatBuffer(positionsArray, 0);
gl.glVertexPointer(3, GL2.GL_FLOAT, 0, fbv);
gl.glEnableClientState(GL2.GL_VERTEX_ARRAY);
FloatBuffer fbn = null;
float[] normalsArray = {
0.6010933f,0.6010933f,-0.5266627f,0.736186f,0.4250372f,-0.5266627f,0.736186f,0.4250372f,-0.5266627f,0.6010933f,0.6010933f,-0.5266627f,0.8211087f,0.2200154f,-0.5266627f,0.8211087f,0.2200154f,-0.5266627f,0.4250372f,0.736186f,-0.5266627f,0.4250372f,0.736186f,-0.5266627f,0.7071068f,0.7071068f,0.0f,0.5846784f,0.3375642f,-0.7377002f,0.8660254f,0.5f,0.0f,0.4773879f,0.4773879f,-0.7377002f,0.8500743f,0.0f,-0.5266627f,0.8500743f,0.0f,-0.5266627f,0.652124f,0.1747361f,-0.7377002f,0.9659258f,0.258819f,0.0f,0.2200154f,0.8211087f,-0.5266627f,0.2200154f,0.8211087f,-0.5266627f,0.3375642f,0.5846784f,-0.7377002f,0.5f,0.8660254f,0.0f,0.8211087f,-0.2200154f,-0.5266627f,0.8211087f,-0.2200154f,-0.5266627f,0.6751284f,0.0f,-0.7377002f,1.0f,0.0f,0.0f,0.0f,0.8500743f,-0.5266627f,0.0f,0.8500743f,-0.5266627f,0.1747361f,0.652124f,-0.7377002f,0.258819f,0.9659258f,0.0f,0.736186f,-0.4250372f,-0.5266627f,0.736186f,-0.4250372f,-0.5266627f,0.652124f,-0.1747361f,-0.7377002f,0.9659258f,-0.258819f,0.0f,-0.2200154f,0.8211087f,-0.5266627f,-0.2200154f,0.8211087f,-0.5266627f,0.0f,0.6751284f,-0.7377002f,0.0f,1.0f,0.0f,0.6010933f,-0.6010933f,-0.5266627f,0.6010933f,-0.6010933f,-0.5266627f,0.5846784f,-0.3375642f,-0.7377002f,0.8660254f,-0.5f,0.0f,-0.4250372f,0.736186f,-0.5266627f,-0.4250372f,0.736186f,-0.5266627f,-0.1747361f,0.652124f,-0.7377002f,-0.258819f,0.9659258f,0.0f,0.4250372f,-0.736186f,-0.5266627f,0.4250372f,-0.736186f,-0.5266627f,0.4773879f,-0.4773879f,-0.7377002f,0.7071068f,-0.7071068f,0.0f,-0.6010933f,0.6010933f,-0.5266627f,-0.6010933f,0.6010933f,-0.5266627f,-0.3375642f,0.5846784f,-0.7377002f,-0.5f,0.8660254f,0.0f,0.2200154f,-0.8211087f,-0.5266627f,0.2200154f,-0.8211087f,-0.5266627f,0.5f,-0.8660254f,0.0f,0.3375642f,-0.5846784f,-0.7377002f,-0.736186f,0.4250372f,-0.5266627f,-0.736186f,0.4250372f,-0.5266627f,-0.4773879f,0.4773879f,-0.7377002f,-0.7071068f,0.7071068f,0.0f,-0.0f,-0.8500743f,-0.5266627f,-0.0f,-0.8500743f,-0.5266627f,0.258819f,-0.9659258f,0.0f,0.1747361f,-0.652124f,-0.7377002f,-0.8211087f,0.2200154f,-0.5266627f,-0.8211087f,0.2200154f,-0.5266627f,-0.8660254f,0.5f,0.0f,-0.5846784f,0.3375642f,-0.7377002f,-0.2200154f,-0.8211087f,-0.5266627f,-0.2200154f,-0.8211087f,-0.5266627f,-0.0f,-1.0f,0.0f,-0.0f,-0.6751284f,-0.7377002f,-0.8500743f,0.0f,-0.5266627f,-0.8500743f,0.0f,-0.5266627f,-0.9659258f,0.258819f,0.0f,-0.652124f,0.1747361f,-0.7377002f,-0.4250372f,-0.736186f,-0.5266627f,-0.4250372f,-0.736186f,-0.5266627f,-0.258819f,-0.9659258f,0.0f,-0.1747361f,-0.652124f,-0.7377002f,-0.8211087f,-0.2200154f,-0.5266627f,-0.8211087f,-0.2200154f,-0.5266627f,-1.0f,0.0f,0.0f,-0.6751284f,0.0f,-0.7377002f,-0.6010933f,-0.6010933f,-0.5266627f,-0.6010933f,-0.6010933f,-0.5266627f,-0.5f,-0.8660254f,0.0f,-0.3375642f,-0.5846784f,-0.7377002f,-0.736186f,-0.4250372f,-0.5266627f,-0.736186f,-0.4250372f,-0.5266627f,-0.9659258f,-0.258819f,0.0f,-0.652124f,-0.1747361f,-0.7377002f,-0.7071068f,-0.7071068f,0.0f,-0.4773879f,-0.4773879f,-0.7377002f,-0.8660254f,-0.5f,0.0f,-0.5846784f,-0.3375642f,-0.7377002f,};
fbn = GLBuffers.newDirectFloatBuffer(normalsArray, 0);
gl.glNormalPointer(GL2.GL_FLOAT, 0, fbn);
gl.glEnableClientState(GL2.GL_NORMAL_ARRAY);
FloatBuffer fbt = null;
float[] texcoordArray = null;
{
gl.glColor4d(0.1372549, 0.1372549, 0.1372549, 1.0);
int[] indices = {
0,1,2,1,0,3,2,4,5,4,2,1,6,0,7,0,6,3,8,9,10,9,8,11,5,12,13,12,5,4,10,14,15,14,10,9,16,7,17,7,16,6,18,8,19,8,18,11,20,12,21,12,20,13,15,22,23,22,15,14,24,17,25,17,24,16,26,19,27,19,26,18,28,21,29,21,28,20,23,30,31,30,23,22,32,25,33,25,32,24,34,27,35,27,34,26,36,29,37,29,36,28,31,38,39,38,31,30,40,33,41,33,40,32,42,35,43,35,42,34,37,44,36,44,37,45,39,46,47,46,39,38,48,41,49,41,48,40,50,43,51,43,50,42,45,52,44,52,45,53,46,54,47,54,46,55,56,49,57,49,56,48,58,51,59,51,58,50,53,60,52,60,53,61,55,62,54,62,55,63,64,57,65,57,64,56,58,66,67,66,58,59,61,68,60,68,61,69,63,70,62,70,63,71,64,72,73,72,64,65,67,74,75,74,67,66,69,76,68,76,69,77,71,78,70,78,71,79,73,80,81,80,73,72,75,82,83,82,75,74,77,84,76,84,77,85,79,86,78,86,79,87,81,88,89,88,81,80,83,90,91,90,83,82,89,84,85,84,89,88,87,92,86,92,87,93,91,94,95,94,91,90,95,92,93,92,95,94,};
IntBuffer fbi = GLBuffers.newDirectIntBuffer(indices, 0);
gl.glDrawElements(GL2.GL_TRIANGLES, 288, GL2.GL_UNSIGNED_INT, fbi);
gl.glDisable(GL2.GL_TEXTURE_2D);
gl.glDisable(GL2.GL_BLEND);
}
gl.glDisableClientState(GL2.GL_VERTEX_ARRAY);
gl.glDisableClientState(GL2.GL_NORMAL_ARRAY);
gl.glDisableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
}
private void ID80(GL2 gl){
float[] positionsArray = {
26.430588f,15.583499f,41.59674f,26.430588f,14.916501f,41.59674f,26.386683f,15.25f,41.59674f,26.559313f,15.894271f,41.59674f,26.559313f,14.605729f,41.59674f,26.764088f,16.161137f,41.59674f,26.764088f,14.338863f,41.59674f,27.030952f,16.36591f,41.59674f,27.030952f,14.13409f,41.59674f,27.341724f,16.494635f,41.59674f,27.341724f,14.005364f,41.59674f,27.470892f,15.25f,41.59674f,27.477856f,15.302885f,41.59674f,27.675222f,16.538542f,41.59674f,27.498268f,15.352165f,41.59674f,27.530739f,15.394484f,41.59674f,27.573057f,15.426955f,41.59674f,27.62234f,15.447369f,41.59674f,27.675222f,15.45433f,41.59674f,28.008722f,16.494635f,41.59674f,27.728107f,15.447369f,41.59674f,27.77739f,15.426955f,41.59674f,27.819706f,15.394484f,41.59674f,27.852179f,15.352165f,41.59674f,27.872591f,15.302885f,41.59674f,27.879555f,15.25f,41.59674f,27.477856f,15.197115f,41.59674f,27.675222f,13.961458f,41.59674f,27.498268f,15.147835f,41.59674f,27.530739f,15.105516f,41.59674f,27.573057f,15.073045f,41.59674f,27.62234f,15.052631f,41.59674f,27.675222f,15.04567f,41.59674f,28.008722f,14.005364f,41.59674f,27.728107f,15.052631f,41.59674f,27.77739f,15.073045f,41.59674f,27.819706f,15.105516f,41.59674f,27.852179f,15.147835f,41.59674f,27.872591f,15.197115f,41.59674f,28.319494f,16.36591f,41.59674f,28.319494f,14.13409f,41.59674f,28.586359f,16.161137f,41.59674f,28.586359f,14.338863f,41.59674f,28.791134f,15.894271f,41.59674f,28.791134f,14.605729f,41.59674f,28.919859f,15.583499f,41.59674f,28.919859f,14.916501f,41.59674f,28.963764f,15.25f,41.59674f,};
FloatBuffer fbv = GLBuffers.newDirectFloatBuffer(positionsArray, 0);
gl.glVertexPointer(3, GL2.GL_FLOAT, 0, fbv);
gl.glEnableClientState(GL2.GL_VERTEX_ARRAY);
FloatBuffer fbn = null;
float[] normalsArray = {
0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,-0.6751284f,0.0f,-0.7377002f,-0.652124f,0.1747361f,-0.7377002f,0.0f,0.0f,-1.0f,-0.5846784f,0.3375642f,-0.7377002f,-0.4773879f,0.4773879f,-0.7377002f,-0.3375642f,0.5846784f,-0.7377002f,-0.1747361f,0.652124f,-0.7377002f,0.0f,0.6751284f,-0.7377002f,0.0f,0.0f,-1.0f,0.1747361f,0.652124f,-0.7377002f,0.3375642f,0.5846784f,-0.7377002f,0.4773879f,0.4773879f,-0.7377002f,0.5846784f,0.3375642f,-0.7377002f,0.652124f,0.1747361f,-0.7377002f,0.6751284f,0.0f,-0.7377002f,-0.652124f,-0.1747361f,-0.7377002f,0.0f,0.0f,-1.0f,-0.5846784f,-0.3375642f,-0.7377002f,-0.4773879f,-0.4773879f,-0.7377002f,-0.3375642f,-0.5846784f,-0.7377002f,-0.1747361f,-0.652124f,-0.7377002f,-0.0f,-0.6751284f,-0.7377002f,0.0f,0.0f,-1.0f,0.1747361f,-0.652124f,-0.7377002f,0.3375642f,-0.5846784f,-0.7377002f,0.4773879f,-0.4773879f,-0.7377002f,0.5846784f,-0.3375642f,-0.7377002f,0.652124f,-0.1747361f,-0.7377002f,0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,};
fbn = GLBuffers.newDirectFloatBuffer(normalsArray, 0);
gl.glNormalPointer(GL2.GL_FLOAT, 0, fbn);
gl.glEnableClientState(GL2.GL_NORMAL_ARRAY);
FloatBuffer fbt = null;
float[] texcoordArray = null;
{
gl.glColor4d(1.0, 1.0, 1.0, 1.0);
int[] indices = {
0,1,2,1,0,3,1,3,4,4,3,5,4,5,6,6,5,7,6,7,8,8,7,9,8,9,10,10,9,11,11,9,12,12,9,13,12,13,14,14,13,15,15,13,16,16,13,17,17,13,18,18,13,19,18,19,20,20,19,21,21,19,22,22,19,23,23,19,24,24,19,25,10,26,27,26,10,11,27,26,28,27,28,29,27,29,30,27,30,31,27,31,32,27,32,33,33,32,34,33,34,35,33,35,36,33,36,37,33,37,38,33,38,25,33,25,19,33,19,39,33,39,40,40,39,41,40,41,42,42,41,43,42,43,44,44,43,45,44,45,46,46,45,47,};
IntBuffer fbi = GLBuffers.newDirectIntBuffer(indices, 0);
gl.glDrawElements(GL2.GL_TRIANGLES, 144, GL2.GL_UNSIGNED_INT, fbi);
gl.glDisable(GL2.GL_TEXTURE_2D);
gl.glDisable(GL2.GL_BLEND);
}
gl.glDisableClientState(GL2.GL_VERTEX_ARRAY);
gl.glDisableClientState(GL2.GL_NORMAL_ARRAY);
gl.glDisableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
}
private void ID86(GL2 gl){
float[] positionsArray = {
28.839909f,19.596666f,42.59674f,29.055916f,17.641432f,40.34674f,28.389923f,17.917295f,40.34674f,29.925222f,19.147114f,42.59674f,25.007929f,14.5353f,40.34674f,24.981014f,15.25f,40.34674f,24.913836f,15.25f,40.34674f,25.072817f,14.552688f,40.34674f,25.283792f,13.869307f,40.34674f,25.34197f,13.902895f,40.34674f,25.722628f,13.297404f,40.34674f,25.77013f,13.344907f,40.34674f,26.294529f,12.858569f,40.34674f,26.32812f,12.916746f,40.34674f,26.960524f,12.5827055f,40.34674f,26.977911f,12.6475935f,40.34674f,27.675222f,12.488613f,40.34674f,27.675222f,12.555791f,40.34674f,28.389923f,12.5827055f,40.34674f,28.372536f,12.6475935f,40.34674f,29.022327f,12.916746f,40.34674f,29.055916f,12.858569f,40.34674f,29.580317f,13.344907f,40.34674f,29.62782f,13.297404f,40.34674f,30.008476f,13.902895f,40.34674f,30.066654f,13.869307f,40.34674f,30.27763f,14.552688f,40.34674f,30.342518f,14.5353f,40.34674f,30.369432f,15.25f,40.34674f,30.43661f,15.25f,40.34674f,25.007929f,15.9647f,40.34674f,25.072817f,15.947312f,40.34674f,25.283792f,16.630693f,40.34674f,25.34197f,16.597105f,40.34674f,25.722628f,17.202595f,40.34674f,25.77013f,17.155094f,40.34674f,26.294529f,17.641432f,40.34674f,26.32812f,17.583254f,40.34674f,26.960524f,17.917295f,40.34674f,26.977911f,17.852406f,40.34674f,27.675222f,18.011387f,40.34674f,27.675222f,17.94421f,40.34674f,28.389923f,17.917295f,40.34674f,28.372536f,17.852406f,40.34674f,29.022327f,17.583254f,40.34674f,29.055916f,17.641432f,40.34674f,29.580317f,17.155094f,40.34674f,29.62782f,17.202595f,40.34674f,30.008476f,16.597105f,40.34674f,30.066654f,16.630693f,40.34674f,30.27763f,15.947312f,40.34674f,30.342518f,15.9647f,40.34674f,30.43661f,15.25f,40.34674f,30.369432f,15.25f,40.34674f,30.342518f,15.9647f,40.34674f,30.27763f,15.947312f,40.34674f,30.066654f,16.630693f,40.34674f,30.008476f,16.597105f,40.34674f,29.62782f,17.202595f,40.34674f,29.580317f,17.155094f,40.34674f,29.055916f,17.641432f,40.34674f,29.022327f,17.583254f,40.34674f,28.389923f,17.917295f,40.34674f,28.372536f,17.852406f,40.34674f,27.675222f,17.94421f,40.34674f,27.675222f,18.011387f,40.34674f,26.977911f,17.852406f,40.34674f,26.960524f,17.917295f,40.34674f,26.32812f,17.583254f,40.34674f,26.294529f,17.641432f,40.34674f,25.77013f,17.155094f,40.34674f,25.722628f,17.202595f,40.34674f,25.34197f,16.597105f,40.34674f,25.283792f,16.630693f,40.34674f,25.072817f,15.947312f,40.34674f,25.007929f,15.9647f,40.34674f,24.981014f,15.25f,40.34674f,24.913836f,15.25f,40.34674f,30.342518f,14.5353f,40.34674f,30.27763f,14.552688f,40.34674f,30.066654f,13.869307f,40.34674f,30.008476f,13.902895f,40.34674f,29.62782f,13.297404f,40.34674f,29.580317f,13.344907f,40.34674f,29.055916f,12.858569f,40.34674f,29.022327f,12.916746f,40.34674f,28.389923f,12.5827055f,40.34674f,28.372536f,12.6475935f,40.34674f,27.675222f,12.555791f,40.34674f,27.675222f,12.488613f,40.34674f,26.977911f,12.6475935f,40.34674f,26.960524f,12.5827055f,40.34674f,26.32812f,12.916746f,40.34674f,26.294529f,12.858569f,40.34674f,25.77013f,13.344907f,40.34674f,25.722628f,13.297404f,40.34674f,25.34197f,13.902895f,40.34674f,25.283792f,13.869307f,40.34674f,25.072817f,14.552688f,40.34674f,25.007929f,14.5353f,40.34674f,26.510538f,19.596666f,42.59674f,27.675222f,18.011387f,40.34674f,26.960524f,17.917295f,40.34674f,27.675222f,19.75f,42.59674f,24.493242f,18.43198f,42.59674f,26.294529f,17.641432f,40.34674f,25.722628f,17.202595f,40.34674f,25.425222f,19.147114f,42.59674f,23.328556f,16.414686f,42.59674f,25.283792f,16.630693f,40.34674f,25.007929f,15.9647f,40.34674f,23.778109f,17.5f,42.59674f,23.175222f,15.25f,42.59674f,25.007929f,14.5353f,40.34674f,23.328556f,14.085315f,42.59674f,24.913836f,15.25f,40.34674f,23.778109f,13.0f,42.59674f,25.722628f,13.297404f,40.34674f,24.493242f,12.06802f,42.59674f,25.283792f,13.869307f,40.34674f,26.510538f,10.903334f,42.59674f,26.294529f,12.858569f,40.34674f,26.960524f,12.5827055f,40.34674f,25.425222f,11.352885f,42.59674f,28.839909f,10.903334f,42.59674f,27.675222f,12.488613f,40.34674f,28.389923f,12.5827055f,40.34674f,27.675222f,10.75f,42.59674f,30.857204f,12.06802f,42.59674f,29.055916f,12.858569f,40.34674f,29.62782f,13.297404f,40.34674f,29.925222f,11.352885f,42.59674f,30.066654f,13.869307f,40.34674f,32.02189f,14.085315f,42.59674f,31.572338f,13.0f,42.59674f,30.342518f,14.5353f,40.34674f,30.342518f,15.9647f,40.34674f,32.175224f,15.25f,42.59674f,30.43661f,15.25f,40.34674f,32.02189f,16.414686f,42.59674f,29.62782f,17.202595f,40.34674f,31.572338f,17.5f,42.59674f,30.066654f,16.630693f,40.34674f,30.857204f,18.43198f,42.59674f,};
FloatBuffer fbv = GLBuffers.newDirectFloatBuffer(positionsArray, 0);
gl.glVertexPointer(3, GL2.GL_FLOAT, 0, fbv);
gl.glEnableClientState(GL2.GL_VERTEX_ARRAY);
FloatBuffer fbn = null;
float[] normalsArray = {
0.3037822f,0.7333951f,-0.6081513f,0.3037822f,0.7333951f,-0.6081513f,0.3037822f,0.7333951f,-0.6081513f,0.3037822f,0.7333951f,-0.6081513f,0.0f,-0.0f,1.0f,-0.6751284f,0.0f,0.7377002f,0.0f,-0.0f,1.0f,-0.652124f,-0.1747361f,0.7377002f,0.0f,-0.0f,1.0f,-0.5846784f,-0.3375642f,0.7377002f,0.0f,-0.0f,1.0f,-0.4773879f,-0.4773879f,0.7377002f,0.0f,-0.0f,1.0f,-0.3375642f,-0.5846784f,0.7377002f,0.0f,-0.0f,1.0f,-0.1747361f,-0.652124f,0.7377002f,0.0f,-0.0f,1.0f,-0.0f,-0.6751284f,0.7377002f,0.0f,-0.0f,1.0f,0.1747361f,-0.652124f,0.7377002f,0.3375642f,-0.5846784f,0.7377002f,0.0f,-0.0f,1.0f,0.4773879f,-0.4773879f,0.7377002f,0.0f,-0.0f,1.0f,0.5846784f,-0.3375642f,0.7377002f,0.0f,-0.0f,1.0f,0.652124f,-0.1747361f,0.7377002f,0.0f,-0.0f,1.0f,0.6751284f,0.0f,0.7377002f,0.0f,-0.0f,1.0f,0.0f,-0.0f,1.0f,-0.652124f,0.1747361f,0.7377002f,0.0f,-0.0f,1.0f,-0.5846784f,0.3375642f,0.7377002f,0.0f,-0.0f,1.0f,-0.4773879f,0.4773879f,0.7377002f,0.0f,-0.0f,1.0f,-0.3375642f,0.5846784f,0.7377002f,0.0f,-0.0f,1.0f,-0.1747361f,0.652124f,0.7377002f,0.0f,-0.0f,1.0f,0.0f,0.6751284f,0.7377002f,0.0f,-0.0f,1.0f,0.1747361f,0.652124f,0.7377002f,0.3375642f,0.5846784f,0.7377002f,0.0f,-0.0f,1.0f,0.4773879f,0.4773879f,0.7377002f,0.0f,-0.0f,1.0f,0.5846784f,0.3375642f,0.7377002f,0.0f,-0.0f,1.0f,0.652124f,0.1747361f,0.7377002f,0.0f,-0.0f,1.0f,-0.0f,0.0f,-1.0f,-0.6751284f,-0.0f,-0.7377002f,-0.0f,0.0f,-1.0f,-0.652124f,-0.1747361f,-0.7377002f,-0.0f,0.0f,-1.0f,-0.5846784f,-0.3375642f,-0.7377002f,-0.0f,0.0f,-1.0f,-0.4773879f,-0.4773879f,-0.7377002f,-0.0f,0.0f,-1.0f,-0.3375642f,-0.5846784f,-0.7377002f,-0.0f,0.0f,-1.0f,-0.1747361f,-0.652124f,-0.7377002f,-0.0f,-0.6751284f,-0.7377002f,-0.0f,0.0f,-1.0f,0.1747361f,-0.652124f,-0.7377002f,-0.0f,0.0f,-1.0f,0.3375642f,-0.5846784f,-0.7377002f,-0.0f,0.0f,-1.0f,0.4773879f,-0.4773879f,-0.7377002f,-0.0f,0.0f,-1.0f,0.5846784f,-0.3375642f,-0.7377002f,-0.0f,0.0f,-1.0f,0.652124f,-0.1747361f,-0.7377002f,-0.0f,0.0f,-1.0f,0.6751284f,-0.0f,-0.7377002f,-0.0f,0.0f,-1.0f,-0.0f,0.0f,-1.0f,-0.652124f,0.1747361f,-0.7377002f,-0.0f,0.0f,-1.0f,-0.5846784f,0.3375642f,-0.7377002f,-0.0f,0.0f,-1.0f,-0.4773879f,0.4773879f,-0.7377002f,-0.0f,0.0f,-1.0f,-0.3375642f,0.5846784f,-0.7377002f,-0.0f,0.0f,-1.0f,-0.1747361f,0.652124f,-0.7377002f,0.0f,0.6751284f,-0.7377002f,-0.0f,0.0f,-1.0f,0.1747361f,0.652124f,-0.7377002f,-0.0f,0.0f,-1.0f,0.3375642f,0.5846784f,-0.7377002f,-0.0f,0.0f,-1.0f,0.4773879f,0.4773879f,-0.7377002f,-0.0f,0.0f,-1.0f,0.5846784f,0.3375642f,-0.7377002f,-0.0f,0.0f,-1.0f,0.652124f,0.1747361f,-0.7377002f,-0.0f,0.0f,-1.0f,-0.2048007f,0.7643264f,-0.6114424f,-0.0f,0.791289f,-0.6114424f,-0.2048007f,0.7643264f,-0.6114424f,-0.0f,0.791289f,-0.6114424f,-0.5595258f,0.5595258f,-0.6114424f,-0.3956445f,0.6852763f,-0.6114424f,-0.5595258f,0.5595258f,-0.6114424f,-0.3956445f,0.6852763f,-0.6114424f,-0.7643264f,0.2048007f,-0.6114424f,-0.6852763f,0.3956445f,-0.6114424f,-0.7643264f,0.2048007f,-0.6114424f,-0.6852763f,0.3956445f,-0.6114424f,-0.791289f,-0.0f,-0.6114424f,-0.7643264f,-0.2048007f,-0.6114424f,-0.7643264f,-0.2048007f,-0.6114424f,-0.791289f,-0.0f,-0.6114424f,-0.6852763f,-0.3956445f,-0.6114424f,-0.5595258f,-0.5595258f,-0.6114424f,-0.5595258f,-0.5595258f,-0.6114424f,-0.6852763f,-0.3956445f,-0.6114424f,-0.2048007f,-0.7643264f,-0.6114424f,-0.3956445f,-0.6852763f,-0.6114424f,-0.2048007f,-0.7643264f,-0.6114424f,-0.3956445f,-0.6852763f,-0.6114424f,0.2048007f,-0.7643264f,-0.6114424f,-0.0f,-0.791289f,-0.6114424f,0.2048007f,-0.7643264f,-0.6114424f,-0.0f,-0.791289f,-0.6114424f,0.5595258f,-0.5595258f,-0.6114424f,0.3956445f,-0.6852763f,-0.6114424f,0.5595258f,-0.5595258f,-0.6114424f,0.3956445f,-0.6852763f,-0.6114424f,0.6852763f,-0.3956445f,-0.6114424f,0.7643264f,-0.2048007f,-0.6114424f,0.6852763f,-0.3956445f,-0.6114424f,0.7643264f,-0.2048007f,-0.6114424f,0.7643264f,0.2048007f,-0.6114424f,0.791289f,0.0f,-0.6114424f,0.791289f,0.0f,-0.6114424f,0.7643264f,0.2048007f,-0.6114424f,0.6297806f,0.4832477f,-0.6081513f,0.6852763f,0.3956445f,-0.6114424f,0.6852763f,0.3956445f,-0.6114424f,0.6297806f,0.4832477f,-0.6081513f,};
fbn = GLBuffers.newDirectFloatBuffer(normalsArray, 0);
gl.glNormalPointer(GL2.GL_FLOAT, 0, fbn);
gl.glEnableClientState(GL2.GL_NORMAL_ARRAY);
FloatBuffer fbt = null;
float[] texcoordArray = null;
{
gl.glColor4d(0.0, 0.0, 0.0, 1.0);
int[] indices = {
0,1,2,1,0,3,52,53,54,53,55,54,54,55,56,55,57,56,56,57,58,57,59,58,58,59,60,59,61,60,60,61,62,61,63,62,63,64,62,62,64,65,64,66,65,65,66,67,66,68,67,67,68,69,68,70,69,69,70,71,70,72,71,71,72,73,72,74,73,73,74,75,74,76,75,77,75,76,52,78,53,53,78,79,78,80,79,79,80,81,80,82,81,81,82,83,82,84,83,83,84,85,84,86,85,85,86,87,87,86,88,86,89,88,88,89,90,89,91,90,90,91,92,91,93,92,92,93,94,93,95,94,94,95,96,95,97,96,96,97,98,97,99,98,98,99,76,77,76,99,100,101,102,101,100,103,104,105,106,105,104,107,108,109,110,109,108,111,112,113,114,113,112,115,116,117,118,117,116,119,120,121,122,121,120,123,124,125,126,125,124,127,128,129,130,129,128,131,132,133,134,133,132,135,136,137,138,137,136,139,140,141,142,141,140,143,};
IntBuffer fbi = GLBuffers.newDirectIntBuffer(indices, 0);
gl.glDrawElements(GL2.GL_TRIANGLES, 216, GL2.GL_UNSIGNED_INT, fbi);
gl.glDisable(GL2.GL_TEXTURE_2D);
gl.glDisable(GL2.GL_BLEND);
}
{
gl.glColor4d(1.0, 1.0, 1.0, 1.0);
int[] indices = {
4,5,6,5,4,7,7,4,8,7,8,9,9,8,10,9,10,11,11,10,12,11,12,13,13,12,14,13,14,15,15,14,16,15,16,17,17,16,18,17,18,19,19,18,20,20,18,21,20,21,22,22,21,23,22,23,24,24,23,25,24,25,26,26,25,27,26,27,28,28,27,29,5,30,6,30,5,31,30,31,32,32,31,33,32,33,34,34,33,35,34,35,36,36,35,37,36,37,38,38,37,39,38,39,40,40,39,41,40,41,42,42,41,43,42,43,44,42,44,45,45,44,46,45,46,47,47,46,48,47,48,49,49,48,50,49,50,51,51,50,28,51,28,29,};
IntBuffer fbi = GLBuffers.newDirectIntBuffer(indices, 0);
gl.glDrawElements(GL2.GL_TRIANGLES, 144, GL2.GL_UNSIGNED_INT, fbi);
gl.glDisable(GL2.GL_TEXTURE_2D);
gl.glDisable(GL2.GL_BLEND);
}
gl.glDisableClientState(GL2.GL_VERTEX_ARRAY);
gl.glDisableClientState(GL2.GL_NORMAL_ARRAY);
gl.glDisableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
}
private void ID92(GL2 gl){
float[] positionsArray = {
26.32812f,12.916746f,43.59674f,25.77013f,13.344907f,40.34674f,26.32812f,12.916746f,40.34674f,25.77013f,13.344907f,43.59674f,25.77013f,13.344907f,43.59674f,26.32812f,12.916746f,43.59674f,25.77013f,13.344907f,40.34674f,26.32812f,12.916746f,40.34674f,26.977911f,12.6475935f,43.59674f,26.977911f,12.6475935f,40.34674f,26.977911f,12.6475935f,43.59674f,26.977911f,12.6475935f,40.34674f,25.34197f,13.902895f,43.59674f,25.34197f,13.902895f,40.34674f,25.34197f,13.902895f,40.34674f,25.34197f,13.902895f,43.59674f,27.675222f,12.555791f,43.59674f,27.675222f,12.555791f,40.34674f,27.675222f,12.555791f,43.59674f,27.675222f,12.555791f,40.34674f,25.072817f,14.552688f,43.59674f,25.072817f,14.552688f,40.34674f,25.072817f,14.552688f,40.34674f,25.072817f,14.552688f,43.59674f,28.372536f,12.6475935f,43.59674f,28.372536f,12.6475935f,40.34674f,28.372536f,12.6475935f,43.59674f,28.372536f,12.6475935f,40.34674f,24.981014f,15.25f,43.59674f,24.981014f,15.25f,40.34674f,24.981014f,15.25f,40.34674f,24.981014f,15.25f,43.59674f,29.022327f,12.916746f,43.59674f,29.022327f,12.916746f,40.34674f,29.022327f,12.916746f,43.59674f,29.022327f,12.916746f,40.34674f,25.072817f,15.947312f,43.59674f,25.072817f,15.947312f,40.34674f,25.072817f,15.947312f,40.34674f,25.072817f,15.947312f,43.59674f,29.580317f,13.344907f,43.59674f,29.580317f,13.344907f,40.34674f,29.580317f,13.344907f,43.59674f,29.580317f,13.344907f,40.34674f,25.34197f,16.597105f,43.59674f,25.34197f,16.597105f,40.34674f,25.34197f,16.597105f,40.34674f,25.34197f,16.597105f,43.59674f,30.008476f,13.902895f,40.34674f,30.008476f,13.902895f,43.59674f,30.008476f,13.902895f,43.59674f,30.008476f,13.902895f,40.34674f,25.77013f,17.155094f,43.59674f,25.77013f,17.155094f,40.34674f,25.77013f,17.155094f,40.34674f,25.77013f,17.155094f,43.59674f,30.27763f,14.552688f,40.34674f,30.27763f,14.552688f,43.59674f,30.27763f,14.552688f,43.59674f,30.27763f,14.552688f,40.34674f,26.32812f,17.583254f,40.34674f,26.32812f,17.583254f,43.59674f,26.32812f,17.583254f,43.59674f,26.32812f,17.583254f,40.34674f,30.369432f,15.25f,40.34674f,30.369432f,15.25f,43.59674f,30.369432f,15.25f,43.59674f,30.369432f,15.25f,40.34674f,26.977911f,17.852406f,40.34674f,26.977911f,17.852406f,43.59674f,26.977911f,17.852406f,43.59674f,26.977911f,17.852406f,40.34674f,30.27763f,15.947312f,40.34674f,30.27763f,15.947312f,43.59674f,30.27763f,15.947312f,43.59674f,30.27763f,15.947312f,40.34674f,27.675222f,17.94421f,40.34674f,27.675222f,17.94421f,43.59674f,27.675222f,17.94421f,43.59674f,27.675222f,17.94421f,40.34674f,30.008476f,16.597105f,40.34674f,30.008476f,16.597105f,43.59674f,30.008476f,16.597105f,43.59674f,30.008476f,16.597105f,40.34674f,28.372536f,17.852406f,40.34674f,28.372536f,17.852406f,43.59674f,28.372536f,17.852406f,43.59674f,28.372536f,17.852406f,40.34674f,29.580317f,17.155094f,40.34674f,29.580317f,17.155094f,43.59674f,29.580317f,17.155094f,43.59674f,29.580317f,17.155094f,40.34674f,29.022327f,17.583254f,40.34674f,29.022327f,17.583254f,43.59674f,29.022327f,17.583254f,43.59674f,29.022327f,17.583254f,40.34674f,};
FloatBuffer fbv = GLBuffers.newDirectFloatBuffer(positionsArray, 0);
gl.glVertexPointer(3, GL2.GL_FLOAT, 0, fbv);
gl.glEnableClientState(GL2.GL_VERTEX_ARRAY);
FloatBuffer fbn = null;
float[] normalsArray = {
-0.3671272f,-0.635883f,0.6788744f,-0.4773879f,-0.4773879f,0.7377002f,-0.3375642f,-0.5846784f,0.7377002f,-0.5191963f,-0.5191963f,0.6788744f,0.5191963f,0.5191963f,-0.6788744f,0.3671272f,0.635883f,-0.6788744f,0.4773879f,0.4773879f,-0.7377002f,0.3375642f,0.5846784f,-0.7377002f,-0.190039f,-0.7092353f,0.6788744f,-0.1747361f,-0.652124f,0.7377002f,0.190039f,0.7092353f,-0.6788744f,0.1747361f,0.652124f,-0.7377002f,-0.635883f,-0.3671272f,0.6788744f,-0.5846784f,-0.3375642f,0.7377002f,0.5846784f,0.3375642f,-0.7377002f,0.635883f,0.3671272f,-0.6788744f,-0.0f,-0.7342544f,0.6788744f,-0.0f,-0.6751284f,0.7377002f,0.0f,0.7342544f,-0.6788744f,0.0f,0.6751284f,-0.7377002f,-0.7092353f,-0.190039f,0.6788744f,-0.652124f,-0.1747361f,0.7377002f,0.652124f,0.1747361f,-0.7377002f,0.7092353f,0.190039f,-0.6788744f,0.190039f,-0.7092353f,0.6788744f,0.1747361f,-0.652124f,0.7377002f,-0.190039f,0.7092353f,-0.6788744f,-0.1747361f,0.652124f,-0.7377002f,-0.7342544f,0.0f,0.6788744f,-0.6751284f,0.0f,0.7377002f,0.6751284f,-0.0f,-0.7377002f,0.7342544f,-0.0f,-0.6788744f,0.3671272f,-0.635883f,0.6788744f,0.3375642f,-0.5846784f,0.7377002f,-0.3671272f,0.635883f,-0.6788744f,-0.3375642f,0.5846784f,-0.7377002f,-0.7092353f,0.190039f,0.6788744f,-0.652124f,0.1747361f,0.7377002f,0.652124f,-0.1747361f,-0.7377002f,0.7092353f,-0.190039f,-0.6788744f,0.5191963f,-0.5191963f,0.6788744f,0.4773879f,-0.4773879f,0.7377002f,-0.5191963f,0.5191963f,-0.6788744f,-0.4773879f,0.4773879f,-0.7377002f,-0.635883f,0.3671272f,0.6788744f,-0.5846784f,0.3375642f,0.7377002f,0.5846784f,-0.3375642f,-0.7377002f,0.635883f,-0.3671272f,-0.6788744f,0.5846784f,-0.3375642f,0.7377002f,0.635883f,-0.3671272f,0.6788744f,-0.635883f,0.3671272f,-0.6788744f,-0.5846784f,0.3375642f,-0.7377002f,-0.5191963f,0.5191963f,0.6788744f,-0.4773879f,0.4773879f,0.7377002f,0.4773879f,-0.4773879f,-0.7377002f,0.5191963f,-0.5191963f,-0.6788744f,0.652124f,-0.1747361f,0.7377002f,0.7092353f,-0.190039f,0.6788744f,-0.7092353f,0.190039f,-0.6788744f,-0.652124f,0.1747361f,-0.7377002f,-0.3375642f,0.5846784f,0.7377002f,-0.3671272f,0.635883f,0.6788744f,0.3671272f,-0.635883f,-0.6788744f,0.3375642f,-0.5846784f,-0.7377002f,0.6751284f,0.0f,0.7377002f,0.7342544f,0.0f,0.6788744f,-0.7342544f,-0.0f,-0.6788744f,-0.6751284f,-0.0f,-0.7377002f,-0.1747361f,0.652124f,0.7377002f,-0.190039f,0.7092353f,0.6788744f,0.190039f,-0.7092353f,-0.6788744f,0.1747361f,-0.652124f,-0.7377002f,0.652124f,0.1747361f,0.7377002f,0.7092353f,0.190039f,0.6788744f,-0.7092353f,-0.190039f,-0.6788744f,-0.652124f,-0.1747361f,-0.7377002f,0.0f,0.6751284f,0.7377002f,0.0f,0.7342544f,0.6788744f,-0.0f,-0.7342544f,-0.6788744f,-0.0f,-0.6751284f,-0.7377002f,0.5846784f,0.3375642f,0.7377002f,0.635883f,0.3671272f,0.6788744f,-0.635883f,-0.3671272f,-0.6788744f,-0.5846784f,-0.3375642f,-0.7377002f,0.1747361f,0.652124f,0.7377002f,0.190039f,0.7092353f,0.6788744f,-0.190039f,-0.7092353f,-0.6788744f,-0.1747361f,-0.652124f,-0.7377002f,0.4773879f,0.4773879f,0.7377002f,0.5191963f,0.5191963f,0.6788744f,-0.5191963f,-0.5191963f,-0.6788744f,-0.4773879f,-0.4773879f,-0.7377002f,0.3375642f,0.5846784f,0.7377002f,0.3671272f,0.635883f,0.6788744f,-0.3671272f,-0.635883f,-0.6788744f,-0.3375642f,-0.5846784f,-0.7377002f,};
fbn = GLBuffers.newDirectFloatBuffer(normalsArray, 0);
gl.glNormalPointer(GL2.GL_FLOAT, 0, fbn);
gl.glEnableClientState(GL2.GL_NORMAL_ARRAY);
FloatBuffer fbt = null;
float[] texcoordArray = null;
{
gl.glColor4d(1.0, 1.0, 1.0, 1.0);
int[] indices = {
0,1,2,1,0,3,8,2,9,2,8,0,12,1,3,1,12,13,16,9,17,9,16,8,20,13,12,13,20,21,24,17,25,17,24,16,28,21,20,21,28,29,32,25,33,25,32,24,36,29,28,29,36,37,40,33,41,33,40,32,44,37,36,37,44,45,48,40,41,40,48,49,52,45,44,45,52,53,56,49,48,49,56,57,52,60,53,60,52,61,64,57,56,57,64,65,61,68,60,68,61,69,72,65,64,65,72,73,69,76,68,76,69,77,80,73,72,73,80,81,77,84,76,84,77,85,88,81,80,81,88,89,85,92,84,92,85,93,93,88,92,88,93,89,};
IntBuffer fbi = GLBuffers.newDirectIntBuffer(indices, 0);
gl.glDrawElements(GL2.GL_TRIANGLES, 144, GL2.GL_UNSIGNED_INT, fbi);
gl.glDisable(GL2.GL_TEXTURE_2D);
gl.glDisable(GL2.GL_BLEND);
}
{
gl.glColor4d(0.1372549, 0.1372549, 0.1372549, 1.0);
int[] indices = {
4,5,6,7,6,5,5,10,7,11,7,10,14,15,6,4,6,15,10,18,11,19,11,18,22,23,14,15,14,23,18,26,19,27,19,26,30,31,22,23,22,31,26,34,27,35,27,34,38,39,30,31,30,39,34,42,35,43,35,42,46,47,38,39,38,47,50,51,42,43,42,51,54,55,46,47,46,55,58,59,50,51,50,59,62,55,63,54,63,55,66,67,58,59,58,67,70,62,71,63,71,62,74,75,66,67,66,75,78,70,79,71,79,70,82,83,74,75,74,83,86,78,87,79,87,78,90,91,82,83,82,91,94,86,95,87,95,86,90,94,91,95,91,94,};
IntBuffer fbi = GLBuffers.newDirectIntBuffer(indices, 0);
gl.glDrawElements(GL2.GL_TRIANGLES, 144, GL2.GL_UNSIGNED_INT, fbi);
gl.glDisable(GL2.GL_TEXTURE_2D);
gl.glDisable(GL2.GL_BLEND);
}
gl.glDisableClientState(GL2.GL_VERTEX_ARRAY);
gl.glDisableClientState(GL2.GL_NORMAL_ARRAY);
gl.glDisableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
}
private void ID98(GL2 gl){
float[] positionsArray = {
25.072817f,14.552688f,43.59674f,25.072817f,15.947312f,43.59674f,24.981014f,15.25f,43.59674f,25.34197f,13.902895f,43.59674f,25.34197f,16.597105f,43.59674f,25.77013f,13.344907f,43.59674f,25.77013f,17.155094f,43.59674f,26.32812f,12.916746f,43.59674f,26.32812f,17.583254f,43.59674f,26.977911f,12.6475935f,43.59674f,26.977911f,17.852406f,43.59674f,27.675222f,12.555791f,43.59674f,27.675222f,17.94421f,43.59674f,28.372536f,12.6475935f,43.59674f,28.372536f,17.852406f,43.59674f,29.022327f,12.916746f,43.59674f,29.022327f,17.583254f,43.59674f,29.580317f,13.344907f,43.59674f,29.580317f,17.155094f,43.59674f,30.008476f,13.902895f,43.59674f,30.008476f,16.597105f,43.59674f,30.27763f,14.552688f,43.59674f,30.27763f,15.947312f,43.59674f,30.369432f,15.25f,43.59674f,30.369432f,15.25f,43.59674f,30.27763f,14.552688f,43.59674f,30.27763f,15.947312f,43.59674f,30.008476f,16.597105f,43.59674f,30.008476f,13.902895f,43.59674f,29.580317f,17.155094f,43.59674f,29.580317f,13.344907f,43.59674f,29.022327f,17.583254f,43.59674f,29.022327f,12.916746f,43.59674f,28.372536f,17.852406f,43.59674f,28.372536f,12.6475935f,43.59674f,27.675222f,17.94421f,43.59674f,27.675222f,12.555791f,43.59674f,26.977911f,17.852406f,43.59674f,26.977911f,12.6475935f,43.59674f,26.32812f,17.583254f,43.59674f,26.32812f,12.916746f,43.59674f,25.77013f,17.155094f,43.59674f,25.77013f,13.344907f,43.59674f,25.34197f,16.597105f,43.59674f,25.34197f,13.902895f,43.59674f,25.072817f,15.947312f,43.59674f,25.072817f,14.552688f,43.59674f,24.981014f,15.25f,43.59674f,};
FloatBuffer fbv = GLBuffers.newDirectFloatBuffer(positionsArray, 0);
gl.glVertexPointer(3, GL2.GL_FLOAT, 0, fbv);
gl.glEnableClientState(GL2.GL_VERTEX_ARRAY);
FloatBuffer fbn = null;
float[] normalsArray = {
-0.7092353f,-0.190039f,0.6788744f,-0.7092353f,0.190039f,0.6788744f,-0.7342544f,0.0f,0.6788744f,-0.635883f,-0.3671272f,0.6788744f,-0.635883f,0.3671272f,0.6788744f,-0.5191963f,-0.5191963f,0.6788744f,-0.5191963f,0.5191963f,0.6788744f,-0.3671272f,-0.635883f,0.6788744f,-0.3671272f,0.635883f,0.6788744f,-0.190039f,-0.7092353f,0.6788744f,-0.190039f,0.7092353f,0.6788744f,-0.0f,-0.7342544f,0.6788744f,0.0f,0.7342544f,0.6788744f,0.190039f,-0.7092353f,0.6788744f,0.190039f,0.7092353f,0.6788744f,0.3671272f,-0.635883f,0.6788744f,0.3671272f,0.635883f,0.6788744f,0.5191963f,-0.5191963f,0.6788744f,0.5191963f,0.5191963f,0.6788744f,0.635883f,-0.3671272f,0.6788744f,0.635883f,0.3671272f,0.6788744f,0.7092353f,-0.190039f,0.6788744f,0.7092353f,0.190039f,0.6788744f,0.7342544f,0.0f,0.6788744f,-0.7342544f,-0.0f,-0.6788744f,-0.7092353f,0.190039f,-0.6788744f,-0.7092353f,-0.190039f,-0.6788744f,-0.635883f,-0.3671272f,-0.6788744f,-0.635883f,0.3671272f,-0.6788744f,-0.5191963f,-0.5191963f,-0.6788744f,-0.5191963f,0.5191963f,-0.6788744f,-0.3671272f,-0.635883f,-0.6788744f,-0.3671272f,0.635883f,-0.6788744f,-0.190039f,-0.7092353f,-0.6788744f,-0.190039f,0.7092353f,-0.6788744f,-0.0f,-0.7342544f,-0.6788744f,0.0f,0.7342544f,-0.6788744f,0.190039f,-0.7092353f,-0.6788744f,0.190039f,0.7092353f,-0.6788744f,0.3671272f,-0.635883f,-0.6788744f,0.3671272f,0.635883f,-0.6788744f,0.5191963f,-0.5191963f,-0.6788744f,0.5191963f,0.5191963f,-0.6788744f,0.635883f,-0.3671272f,-0.6788744f,0.635883f,0.3671272f,-0.6788744f,0.7092353f,-0.190039f,-0.6788744f,0.7092353f,0.190039f,-0.6788744f,0.7342544f,-0.0f,-0.6788744f,};
fbn = GLBuffers.newDirectFloatBuffer(normalsArray, 0);
gl.glNormalPointer(GL2.GL_FLOAT, 0, fbn);
gl.glEnableClientState(GL2.GL_NORMAL_ARRAY);
FloatBuffer fbt = null;
float[] texcoordArray = null;
{
gl.glColor4d(1.0, 1.0, 1.0, 1.0);
int[] indices = {
0,1,2,1,0,3,1,3,4,4,3,5,4,5,6,6,5,7,6,7,8,8,7,9,8,9,10,10,9,11,10,11,12,12,11,13,12,13,14,14,13,15,14,15,16,16,15,17,16,17,18,18,17,19,18,19,20,20,19,21,20,21,22,22,21,23,};
IntBuffer fbi = GLBuffers.newDirectIntBuffer(indices, 0);
gl.glDrawElements(GL2.GL_TRIANGLES, 66, GL2.GL_UNSIGNED_INT, fbi);
gl.glDisable(GL2.GL_TEXTURE_2D);
gl.glDisable(GL2.GL_BLEND);
}
{
gl.glColor4d(0.0, 0.0, 0.0, 1.0);
int[] indices = {
24,25,26,26,25,27,25,28,27,27,28,29,28,30,29,29,30,31,30,32,31,31,32,33,32,34,33,33,34,35,34,36,35,35,36,37,36,38,37,37,38,39,38,40,39,39,40,41,40,42,41,41,42,43,42,44,43,43,44,45,44,46,45,47,45,46,};
IntBuffer fbi = GLBuffers.newDirectIntBuffer(indices, 0);
gl.glDrawElements(GL2.GL_TRIANGLES, 66, GL2.GL_UNSIGNED_INT, fbi);
gl.glDisable(GL2.GL_TEXTURE_2D);
gl.glDisable(GL2.GL_BLEND);
}
gl.glDisableClientState(GL2.GL_VERTEX_ARRAY);
gl.glDisableClientState(GL2.GL_NORMAL_ARRAY);
gl.glDisableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
}
private void ID104(GL2 gl){
float[] positionsArray = {
24.715296f,14.45689f,58.09674f,24.715296f,16.04311f,58.09674f,24.610882f,15.25f,58.09674f,25.021425f,13.71783f,58.09674f,25.021425f,16.782171f,58.09674f,25.508406f,13.083183f,58.09674f,25.508406f,17.416817f,58.09674f,26.143053f,12.596203f,58.09674f,26.143053f,17.903797f,58.09674f,26.882113f,12.290073f,58.09674f,26.882113f,18.209927f,58.09674f,27.675222f,12.185658f,58.09674f,27.675222f,18.31434f,58.09674f,28.468332f,12.290073f,58.09674f,28.468332f,18.209927f,58.09674f,29.207394f,12.596203f,58.09674f,29.207394f,17.903797f,58.09674f,29.84204f,13.083183f,58.09674f,29.84204f,17.416817f,58.09674f,30.329021f,13.71783f,58.09674f,30.329021f,16.782171f,58.09674f,30.635149f,14.45689f,58.09674f,30.635149f,16.04311f,58.09674f,30.739565f,15.25f,58.09674f,};
FloatBuffer fbv = GLBuffers.newDirectFloatBuffer(positionsArray, 0);
gl.glVertexPointer(3, GL2.GL_FLOAT, 0, fbv);
gl.glEnableClientState(GL2.GL_VERTEX_ARRAY);
FloatBuffer fbn = null;
float[] normalsArray = {
0.7092353f,0.190039f,0.6788744f,0.7092353f,-0.190039f,0.6788744f,0.7342544f,0.0f,0.6788744f,0.635883f,0.3671272f,0.6788744f,0.635883f,-0.3671272f,0.6788744f,0.5191963f,0.5191963f,0.6788744f,0.5191963f,-0.5191963f,0.6788744f,0.3671272f,0.635883f,0.6788744f,0.3671272f,-0.635883f,0.6788744f,0.190039f,0.7092353f,0.6788744f,0.190039f,-0.7092353f,0.6788744f,-0.0f,0.7342544f,0.6788744f,-0.0f,-0.7342544f,0.6788744f,-0.190039f,0.7092353f,0.6788744f,-0.190039f,-0.7092353f,0.6788744f,-0.3671272f,0.635883f,0.6788744f,-0.3671272f,-0.635883f,0.6788744f,-0.5191963f,0.5191963f,0.6788744f,-0.5191963f,-0.5191963f,0.6788744f,-0.635883f,0.3671272f,0.6788744f,-0.635883f,-0.3671272f,0.6788744f,-0.7092353f,0.190039f,0.6788744f,-0.7092353f,-0.190039f,0.6788744f,-0.7342544f,0.0f,0.6788744f,};
fbn = GLBuffers.newDirectFloatBuffer(normalsArray, 0);
gl.glNormalPointer(GL2.GL_FLOAT, 0, fbn);
gl.glEnableClientState(GL2.GL_NORMAL_ARRAY);
FloatBuffer fbt = null;
float[] texcoordArray = null;
{
gl.glColor4d(0.0, 0.0, 0.0, 1.0);
int[] indices = {
0,1,2,1,0,3,1,3,4,4,3,5,4,5,6,6,5,7,6,7,8,8,7,9,8,9,10,10,9,11,10,11,12,12,11,13,12,13,14,14,13,15,14,15,16,16,15,17,16,17,18,18,17,19,18,19,20,20,19,21,20,21,22,22,21,23,};
IntBuffer fbi = GLBuffers.newDirectIntBuffer(indices, 0);
gl.glDrawElements(GL2.GL_TRIANGLES, 66, GL2.GL_UNSIGNED_INT, fbi);
gl.glDisable(GL2.GL_TEXTURE_2D);
gl.glDisable(GL2.GL_BLEND);
}
gl.glDisableClientState(GL2.GL_VERTEX_ARRAY);
gl.glDisableClientState(GL2.GL_NORMAL_ARRAY);
gl.glDisableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
}
private void ID110(GL2 gl){
float[] positionsArray = {
17.175222f,24.305037f,59.09674f,17.582512f,24.305037f,42.59674f,17.175222f,24.305037f,42.59674f,17.582512f,24.305037f,58.59674f,21.675222f,24.305037f,58.59674f,21.675222f,24.305037f,59.09674f,17.35452f,24.305037f,59.574707f,21.495926f,24.305037f,59.574707f,17.633953f,24.305037f,60.001926f,21.216494f,24.305037f,60.001926f,18.000004f,24.305037f,60.35774f,20.850443f,24.305037f,60.35774f,18.434975f,24.305037f,60.624943f,20.415472f,24.305037f,60.624943f,18.917831f,24.305037f,60.790615f,19.932615f,24.305037f,60.790615f,19.425222f,24.305037f,60.84674f,21.495926f,23.511833f,59.574707f,21.675222f,23.511833f,59.09674f,21.675222f,24.305037f,59.09674f,21.675222f,23.511833f,58.59674f,21.675222f,23.511833f,59.09674f,21.675222f,24.305037f,58.59674f,21.675222f,24.305037f,58.59674f,21.675222f,24.305037f,59.09674f,21.675222f,23.511833f,58.59674f,21.675222f,23.511833f,59.09674f,21.675222f,23.511833f,58.59674f,17.582512f,24.305037f,58.59674f,17.582512f,23.511833f,58.59674f,21.675222f,24.305037f,58.59674f,21.675222f,23.511833f,58.59674f,17.582512f,23.511833f,58.59674f,17.582512f,23.511833f,42.59674f,17.582512f,24.305037f,42.59674f,17.582512f,23.511833f,42.59674f,17.175222f,24.305037f,42.59674f,17.582512f,24.314718f,42.47537f,17.175222f,24.314718f,42.47537f,17.582512f,24.305037f,42.59674f,17.175222f,24.305037f,42.59674f,17.175222f,23.511833f,59.09674f,17.175222f,23.511833f,42.59674f,17.175222f,24.305037f,59.09674f,17.175222f,23.511833f,59.09674f,17.175222f,23.511833f,42.59674f,17.35452f,23.511833f,59.574707f,17.633953f,23.511833f,60.001926f,18.000004f,23.511833f,60.35774f,18.434975f,23.511833f,60.624943f,18.917831f,23.511833f,60.790615f,19.425222f,23.511833f,60.84674f,19.932615f,23.511833f,60.790615f,20.415472f,23.511833f,60.624943f,20.850443f,23.511833f,60.35774f,21.216494f,23.511833f,60.001926f,21.67244f,23.511833f,59.09867f,21.494194f,23.511833f,59.57383f,21.214996f,23.511833f,60.00069f,20.84925f,23.511833f,60.356205f,20.414644f,23.511833f,60.623188f,19.932192f,23.511833f,60.78872f,19.425222f,23.511833f,60.844803f,17.178007f,23.511833f,59.09867f,17.356253f,23.511833f,59.57383f,17.63545f,23.511833f,60.00069f,18.001196f,23.511833f,60.356205f,18.435802f,23.511833f,60.623188f,18.918255f,23.511833f,60.78872f,17.582512f,23.52878f,42.356556f,17.582512f,23.511833f,42.59674f,17.582512f,23.502151f,42.47537f,17.582512f,23.589336f,42.250927f,17.582512f,23.678411f,42.167915f,17.582512f,23.788044f,42.11494f,17.582512f,23.908436f,42.09674f,17.582512f,24.028826f,42.11494f,17.582512f,24.138458f,42.167915f,17.582512f,24.227533f,42.250927f,17.582512f,24.28809f,42.356556f,17.175222f,23.511833f,42.59674f,17.175222f,23.52878f,42.356556f,17.175222f,23.502151f,42.47537f,17.175222f,23.589336f,42.250927f,17.175222f,23.678411f,42.167915f,17.175222f,23.788044f,42.11494f,17.175222f,23.908436f,42.09674f,17.175222f,24.028826f,42.11494f,17.175222f,24.138458f,42.167915f,17.175222f,24.227533f,42.250927f,17.175222f,24.28809f,42.356556f,};
FloatBuffer fbv = GLBuffers.newDirectFloatBuffer(positionsArray, 0);
gl.glVertexPointer(3, GL2.GL_FLOAT, 0, fbv);
gl.glEnableClientState(GL2.GL_VERTEX_ARRAY);
FloatBuffer fbn = null;
float[] normalsArray = {
-0.9089006f,0.4090508f,0.0810999f,0.9486833f,0.3162278f,0.0f,-0.9486833f,0.3162278f,0.0f,0.5773503f,0.5773503f,-0.5773503f,0.0f,0.3162278f,-0.9486833f,0.4602551f,0.8708361f,0.1726551f,-0.6513821f,0.6831764f,0.3301081f,0.6513821f,0.6831764f,0.3301081f,-0.5634813f,0.6831764f,0.4644985f,0.5634813f,0.6831764f,0.4644985f,-0.4483322f,0.6831764f,0.5764271f,0.4483322f,0.6831764f,0.5764271f,-0.3115032f,0.6831764f,0.6604815f,0.3115032f,0.6831764f,0.6604815f,-0.1596107f,0.6831764f,0.712597f,0.1596107f,0.6831764f,0.712597f,-0.0f,0.6831764f,0.7302534f,0.6513821f,-0.6831764f,0.3301081f,0.4602551f,-0.8708361f,0.1726551f,-1.0f,0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,0.0f,0.0f,1.0f,-0.0f,-0.0f,1.0f,-0.0f,-0.0f,1.0f,-0.0f,-0.0f,1.0f,-0.0f,-0.0f,-0.0f,0.3162278f,0.9486833f,-0.5773503f,-0.5773503f,0.5773503f,-0.5773503f,0.5773503f,0.5773503f,-0.0f,-0.3162278f,0.9486833f,0.0f,-0.3162278f,-0.9486833f,0.5773503f,-0.5773503f,-0.5773503f,-0.9486833f,0.3162278f,-0.0f,-0.9486833f,-0.3162278f,-0.0f,0.9486833f,-0.3162278f,0.0f,-0.7243579f,0.6872415f,0.0548158f,0.6749602f,0.7360242f,-0.0519329f,-0.6749602f,0.7360242f,-0.0519329f,0.7243579f,0.6872415f,0.0548158f,0.9486833f,-0.3162278f,-0.0f,0.9089006f,0.4090508f,-0.0810999f,0.9486833f,0.3162278f,-0.0f,0.9089006f,-0.4090508f,-0.0810999f,-0.9089006f,-0.4090508f,0.0810999f,-0.9486833f,-0.3162278f,0.0f,-0.6513821f,-0.6831764f,0.3301081f,-0.5634813f,-0.6831764f,0.4644985f,-0.4483322f,-0.6831764f,0.5764271f,-0.3115032f,-0.6831764f,0.6604815f,-0.1596107f,-0.6831764f,0.712597f,-0.0f,-0.6831764f,0.7302534f,0.1596107f,-0.6831764f,0.712597f,0.3115032f,-0.6831764f,0.6604815f,0.4483322f,-0.6831764f,0.5764271f,0.5634813f,-0.6831764f,0.4644985f,0.0f,-1.0f,0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,0.0f,0.6749602f,-0.6877846f,-0.2671722f,0.7243579f,-0.6872415f,0.0548158f,0.6749602f,-0.7360242f,-0.0519329f,0.6749602f,-0.5780785f,-0.4585345f,0.6749602f,-0.4167101f,-0.6089182f,0.6749602f,-0.2181008f,-0.7048835f,0.6749602f,0.0f,-0.7378541f,0.6749602f,0.2181008f,-0.7048835f,0.6749602f,0.4167101f,-0.6089182f,0.6749602f,0.5780785f,-0.4585345f,0.6749602f,0.6877846f,-0.2671722f,-0.7243579f,-0.6872415f,0.0548158f,-0.6749602f,-0.6877846f,-0.2671722f,-0.6749602f,-0.7360242f,-0.0519329f,-0.6749602f,-0.5780785f,-0.4585345f,-0.6749602f,-0.4167101f,-0.6089182f,-0.6749602f,-0.2181008f,-0.7048835f,-0.6749602f,0.0f,-0.7378541f,-0.6749602f,0.2181008f,-0.7048835f,-0.6749602f,0.4167101f,-0.6089182f,-0.6749602f,0.5780785f,-0.4585345f,-0.6749602f,0.6877846f,-0.2671722f,};
fbn = GLBuffers.newDirectFloatBuffer(normalsArray, 0);
gl.glNormalPointer(GL2.GL_FLOAT, 0, fbn);
gl.glEnableClientState(GL2.GL_NORMAL_ARRAY);
FloatBuffer fbt = null;
float[] texcoordArray = null;
{
gl.glColor4d(0.0, 0.0, 0.0, 1.0);
int[] indices = {
0,1,2,1,0,3,3,0,4,4,0,5,5,0,6,5,6,7,7,6,8,7,8,9,9,8,10,9,10,11,11,10,12,11,12,13,13,12,14,13,14,15,15,14,16,5,17,18,17,5,7,23,24,25,26,25,24,4,31,3,32,3,31,1,3,35,32,35,3,36,37,38,37,36,39,0,2,44,45,44,2,6,44,46,44,6,0,8,46,47,46,8,6,48,8,47,8,48,10,49,10,48,10,49,12,50,12,49,12,50,14,51,14,50,14,51,16,52,16,51,16,52,15,53,15,52,15,53,13,54,13,53,13,54,11,55,11,54,11,55,9,7,55,17,55,7,9,32,45,35,45,32,44,44,32,18,44,18,56,56,18,17,56,17,57,57,17,58,58,17,55,58,55,59,59,55,54,59,54,60,60,54,53,60,53,61,61,53,52,61,52,62,62,52,51,44,63,46,63,44,56,46,63,64,46,64,65,46,65,47,47,65,66,47,66,48,48,66,67,48,67,49,49,67,68,49,68,50,50,68,62,50,62,51,18,32,31,69,70,71,70,69,39,39,69,72,39,72,73,39,73,74,39,74,75,39,75,76,39,76,77,39,77,78,39,78,79,39,79,37,80,81,82,81,80,36,81,36,83,83,36,84,84,36,85,85,36,86,86,36,87,87,36,88,88,36,89,89,36,90,90,36,38,38,79,90,79,38,37,70,82,71,82,70,80,71,81,69,81,71,82,69,83,72,83,69,81,73,83,84,83,73,72,74,84,85,84,74,73,75,85,86,85,75,74,76,86,87,86,76,75,77,87,88,87,77,76,78,88,89,88,78,77,90,78,89,78,90,79,};
IntBuffer fbi = GLBuffers.newDirectIntBuffer(indices, 0);
gl.glDrawElements(GL2.GL_TRIANGLES, 369, GL2.GL_UNSIGNED_INT, fbi);
gl.glDisable(GL2.GL_TEXTURE_2D);
gl.glDisable(GL2.GL_BLEND);
}
{
gl.glColor4d(1.0, 1.0, 1.0, 1.0);
int[] indices = {
19,20,21,20,19,22,27,28,29,28,27,30,28,33,29,33,28,34,40,41,42,41,40,43,};
IntBuffer fbi = GLBuffers.newDirectIntBuffer(indices, 0);
gl.glDrawElements(GL2.GL_TRIANGLES, 24, GL2.GL_UNSIGNED_INT, fbi);
gl.glDisable(GL2.GL_TEXTURE_2D);
gl.glDisable(GL2.GL_BLEND);
}
gl.glDisableClientState(GL2.GL_VERTEX_ARRAY);
gl.glDisableClientState(GL2.GL_NORMAL_ARRAY);
gl.glDisableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
}
private void ID116(GL2 gl){
float[] positionsArray = {
17.175222f,19.305037f,59.09674f,17.582512f,19.305037f,42.59674f,17.175222f,19.305037f,42.59674f,17.582512f,19.305037f,58.59674f,21.675222f,19.305037f,58.59674f,21.675222f,19.305037f,59.09674f,17.35452f,19.305037f,59.574707f,21.495926f,19.305037f,59.574707f,17.633953f,19.305037f,60.001926f,21.216494f,19.305037f,60.001926f,18.000004f,19.305037f,60.35774f,20.850443f,19.305037f,60.35774f,18.434975f,19.305037f,60.624943f,20.415472f,19.305037f,60.624943f,18.917831f,19.305037f,60.790615f,19.932615f,19.305037f,60.790615f,19.425222f,19.305037f,60.84674f,21.495926f,18.511833f,59.574707f,21.675222f,18.511833f,59.09674f,21.675222f,19.305037f,59.09674f,21.675222f,18.511833f,58.59674f,21.675222f,18.511833f,59.09674f,21.675222f,19.305037f,58.59674f,21.675222f,19.305037f,58.59674f,21.675222f,19.305037f,59.09674f,21.675222f,18.511833f,58.59674f,21.675222f,18.511833f,59.09674f,21.675222f,18.511833f,58.59674f,17.582512f,19.305037f,58.59674f,17.582512f,18.511833f,58.59674f,21.675222f,19.305037f,58.59674f,21.675222f,18.511833f,58.59674f,17.582512f,18.511833f,58.59674f,17.582512f,18.511833f,42.59674f,17.582512f,19.305037f,42.59674f,17.582512f,18.511833f,42.59674f,17.175222f,19.305037f,42.59674f,17.582512f,19.314718f,42.47537f,17.175222f,19.314718f,42.47537f,17.582512f,19.305037f,42.59674f,17.175222f,19.305037f,42.59674f,17.175222f,18.511833f,59.09674f,17.175222f,18.511833f,42.59674f,17.175222f,19.305037f,59.09674f,17.175222f,18.511833f,59.09674f,17.175222f,18.511833f,42.59674f,17.35452f,18.511833f,59.574707f,17.633953f,18.511833f,60.001926f,18.000004f,18.511833f,60.35774f,18.434975f,18.511833f,60.624943f,18.917831f,18.511833f,60.790615f,19.425222f,18.511833f,60.84674f,19.932615f,18.511833f,60.790615f,20.415472f,18.511833f,60.624943f,20.850443f,18.511833f,60.35774f,21.216494f,18.511833f,60.001926f,17.582512f,18.52878f,42.356556f,17.582512f,18.511833f,42.59674f,17.582512f,18.502151f,42.47537f,17.582512f,18.589336f,42.250927f,17.582512f,18.678411f,42.167915f,17.582512f,18.788044f,42.11494f,17.582512f,18.908436f,42.09674f,17.582512f,19.028826f,42.11494f,17.582512f,19.138458f,42.167915f,17.582512f,19.227533f,42.250927f,17.582512f,19.28809f,42.356556f,17.175222f,18.511833f,42.59674f,17.175222f,18.52878f,42.356556f,17.175222f,18.502151f,42.47537f,17.175222f,18.589336f,42.250927f,17.175222f,18.678411f,42.167915f,17.175222f,18.788044f,42.11494f,17.175222f,18.908436f,42.09674f,17.175222f,19.028826f,42.11494f,17.175222f,19.138458f,42.167915f,17.175222f,19.227533f,42.250927f,17.175222f,19.28809f,42.356556f,};
FloatBuffer fbv = GLBuffers.newDirectFloatBuffer(positionsArray, 0);
gl.glVertexPointer(3, GL2.GL_FLOAT, 0, fbv);
gl.glEnableClientState(GL2.GL_VERTEX_ARRAY);
FloatBuffer fbn = null;
float[] normalsArray = {
-0.9089006f,0.4090508f,0.0810999f,0.9486833f,0.3162278f,0.0f,-0.9486833f,0.3162278f,0.0f,0.5773503f,0.5773503f,-0.5773503f,0.0f,0.3162278f,-0.9486833f,0.4602551f,0.8708361f,0.1726551f,-0.6513821f,0.6831764f,0.3301081f,0.6513821f,0.6831764f,0.3301081f,-0.5634813f,0.6831764f,0.4644985f,0.5634813f,0.6831764f,0.4644985f,-0.4483322f,0.6831764f,0.5764271f,0.4483322f,0.6831764f,0.5764271f,-0.3115032f,0.6831764f,0.6604815f,0.3115032f,0.6831764f,0.6604815f,-0.1596107f,0.6831764f,0.712597f,0.1596107f,0.6831764f,0.712597f,-0.0f,0.6831764f,0.7302534f,0.6513821f,-0.6831764f,0.3301081f,0.4602551f,-0.8708361f,0.1726551f,-1.0f,0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,0.0f,0.0f,1.0f,-0.0f,-0.0f,1.0f,-0.0f,-0.0f,1.0f,-0.0f,-0.0f,1.0f,-0.0f,-0.0f,-0.0f,0.3162278f,0.9486833f,-0.5773503f,-0.5773503f,0.5773503f,-0.5773503f,0.5773503f,0.5773503f,-0.0f,-0.3162278f,0.9486833f,0.0f,-0.3162278f,-0.9486833f,0.5773503f,-0.5773503f,-0.5773503f,-0.9486833f,0.3162278f,-0.0f,-0.9486833f,-0.3162278f,-0.0f,0.9486833f,-0.3162278f,0.0f,-0.7243579f,0.6872415f,0.0548158f,0.6749602f,0.7360242f,-0.0519329f,-0.6749602f,0.7360242f,-0.0519329f,0.7243579f,0.6872415f,0.0548158f,0.9486833f,-0.3162278f,-0.0f,0.9089006f,0.4090508f,-0.0810999f,0.9486833f,0.3162278f,-0.0f,0.9089006f,-0.4090508f,-0.0810999f,-0.9089006f,-0.4090508f,0.0810999f,-0.9486833f,-0.3162278f,0.0f,-0.6513821f,-0.6831764f,0.3301081f,-0.5634813f,-0.6831764f,0.4644985f,-0.4483322f,-0.6831764f,0.5764271f,-0.3115032f,-0.6831764f,0.6604815f,-0.1596107f,-0.6831764f,0.712597f,-0.0f,-0.6831764f,0.7302534f,0.1596107f,-0.6831764f,0.712597f,0.3115032f,-0.6831764f,0.6604815f,0.4483322f,-0.6831764f,0.5764271f,0.5634813f,-0.6831764f,0.4644985f,0.6749602f,-0.6877846f,-0.2671722f,0.7243579f,-0.6872415f,0.0548158f,0.6749602f,-0.7360242f,-0.0519329f,0.6749602f,-0.5780785f,-0.4585345f,0.6749602f,-0.4167101f,-0.6089182f,0.6749602f,-0.2181008f,-0.7048835f,0.6749602f,0.0f,-0.7378541f,0.6749602f,0.2181008f,-0.7048835f,0.6749602f,0.4167101f,-0.6089182f,0.6749602f,0.5780785f,-0.4585345f,0.6749602f,0.6877846f,-0.2671722f,-0.7243579f,-0.6872415f,0.0548158f,-0.6749602f,-0.6877846f,-0.2671722f,-0.6749602f,-0.7360242f,-0.0519329f,-0.6749602f,-0.5780785f,-0.4585345f,-0.6749602f,-0.4167101f,-0.6089182f,-0.6749602f,-0.2181008f,-0.7048835f,-0.6749602f,0.0f,-0.7378541f,-0.6749602f,0.2181008f,-0.7048835f,-0.6749602f,0.4167101f,-0.6089182f,-0.6749602f,0.5780785f,-0.4585345f,-0.6749602f,0.6877846f,-0.2671722f,};
fbn = GLBuffers.newDirectFloatBuffer(normalsArray, 0);
gl.glNormalPointer(GL2.GL_FLOAT, 0, fbn);
gl.glEnableClientState(GL2.GL_NORMAL_ARRAY);
FloatBuffer fbt = null;
float[] texcoordArray = null;
{
gl.glColor4d(0.0, 0.0, 0.0, 1.0);
int[] indices = {
0,1,2,1,0,3,3,0,4,4,0,5,5,0,6,5,6,7,7,6,8,7,8,9,9,8,10,9,10,11,11,10,12,11,12,13,13,12,14,13,14,15,15,14,16,5,17,18,17,5,7,23,24,25,26,25,24,4,31,3,32,3,31,1,3,35,32,35,3,36,37,38,37,36,39,0,2,44,45,44,2,6,44,46,44,6,0,8,46,47,46,8,6,48,8,47,8,48,10,49,10,48,10,49,12,50,12,49,12,50,14,51,14,50,14,51,16,52,16,51,16,52,15,53,15,52,15,53,13,54,13,53,13,54,11,55,11,54,11,55,9,7,55,17,55,7,9,18,32,31,32,45,35,45,32,44,44,32,18,44,18,17,44,17,46,46,17,55,46,55,47,47,55,48,48,55,54,48,54,49,49,54,53,49,53,50,50,53,52,50,52,51,56,57,58,57,56,39,39,56,59,39,59,60,39,60,61,39,61,62,39,62,63,39,63,64,39,64,65,39,65,66,39,66,37,67,68,69,68,67,36,68,36,70,70,36,71,71,36,72,72,36,73,73,36,74,74,36,75,75,36,76,76,36,77,77,36,38,38,66,77,66,38,37,57,69,58,69,57,67,58,68,56,68,58,69,56,70,59,70,56,68,60,70,71,70,60,59,61,71,72,71,61,60,62,72,73,72,62,61,63,73,74,73,63,62,64,74,75,74,64,63,65,75,76,75,65,64,77,65,76,65,77,66,};
IntBuffer fbi = GLBuffers.newDirectIntBuffer(indices, 0);
gl.glDrawElements(GL2.GL_TRIANGLES, 324, GL2.GL_UNSIGNED_INT, fbi);
gl.glDisable(GL2.GL_TEXTURE_2D);
gl.glDisable(GL2.GL_BLEND);
}
{
gl.glColor4d(1.0, 1.0, 1.0, 1.0);
int[] indices = {
19,20,21,20,19,22,27,28,29,28,27,30,28,33,29,33,28,34,40,41,42,41,40,43,};
IntBuffer fbi = GLBuffers.newDirectIntBuffer(indices, 0);
gl.glDrawElements(GL2.GL_TRIANGLES, 24, GL2.GL_UNSIGNED_INT, fbi);
gl.glDisable(GL2.GL_TEXTURE_2D);
gl.glDisable(GL2.GL_BLEND);
}
gl.glDisableClientState(GL2.GL_VERTEX_ARRAY);
gl.glDisableClientState(GL2.GL_NORMAL_ARRAY);
gl.glDisableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
}
private void ID122(GL2 gl){
float[] positionsArray = {
21.494194f,23.511833f,59.57383f,17.178007f,23.511833f,59.09867f,21.67244f,23.511833f,59.09867f,17.356253f,23.511833f,59.57383f,17.63545f,23.511833f,60.00069f,21.214996f,23.511833f,60.00069f,18.001196f,23.511833f,60.356205f,20.84925f,23.511833f,60.356205f,20.414644f,23.511833f,60.623188f,18.435802f,23.511833f,60.623188f,19.932192f,23.511833f,60.78872f,18.918255f,23.511833f,60.78872f,19.425222f,23.511833f,60.844803f,};
FloatBuffer fbv = GLBuffers.newDirectFloatBuffer(positionsArray, 0);
gl.glVertexPointer(3, GL2.GL_FLOAT, 0, fbv);
gl.glEnableClientState(GL2.GL_VERTEX_ARRAY);
FloatBuffer fbn = null;
float[] normalsArray = {
0.0f,-1.0f,0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,0.0f,0.0f,-1.0f,0.0f,};
fbn = GLBuffers.newDirectFloatBuffer(normalsArray, 0);
gl.glNormalPointer(GL2.GL_FLOAT, 0, fbn);
gl.glEnableClientState(GL2.GL_NORMAL_ARRAY);
FloatBuffer fbt = null;
float[] texcoordArray = null;
{
gl.glColor4d(0.0, 0.0, 0.0, 1.0);
int[] indices = {
0,1,2,1,0,3,3,0,4,4,0,5,4,5,6,6,5,7,6,7,8,6,8,9,9,8,10,9,10,11,11,10,12,};
IntBuffer fbi = GLBuffers.newDirectIntBuffer(indices, 0);
gl.glDrawElements(GL2.GL_TRIANGLES, 33, GL2.GL_UNSIGNED_INT, fbi);
gl.glDisable(GL2.GL_TEXTURE_2D);
gl.glDisable(GL2.GL_BLEND);
}
gl.glDisableClientState(GL2.GL_VERTEX_ARRAY);
gl.glDisableClientState(GL2.GL_NORMAL_ARRAY);
gl.glDisableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
}
private void ID128(GL2 gl){
float[] positionsArray = {
17.582512f,23.511833f,42.59674f,17.175222f,24.305037f,42.59674f,17.175222f,23.511833f,42.59674f,17.582512f,24.305037f,42.59674f,};
FloatBuffer fbv = GLBuffers.newDirectFloatBuffer(positionsArray, 0);
gl.glVertexPointer(3, GL2.GL_FLOAT, 0, fbv);
gl.glEnableClientState(GL2.GL_VERTEX_ARRAY);
FloatBuffer fbn = null;
float[] normalsArray = {
-0.0f,-0.0f,1.0f,-0.0f,-0.0f,1.0f,-0.0f,-0.0f,1.0f,-0.0f,-0.0f,1.0f,};
fbn = GLBuffers.newDirectFloatBuffer(normalsArray, 0);
gl.glNormalPointer(GL2.GL_FLOAT, 0, fbn);
gl.glEnableClientState(GL2.GL_NORMAL_ARRAY);
FloatBuffer fbt = null;
float[] texcoordArray = null;
{
gl.glColor4d(1.0, 1.0, 1.0, 1.0);
int[] indices = {
0,1,2,1,0,3,};
IntBuffer fbi = GLBuffers.newDirectIntBuffer(indices, 0);
gl.glDrawElements(GL2.GL_TRIANGLES, 6, GL2.GL_UNSIGNED_INT, fbi);
gl.glDisable(GL2.GL_TEXTURE_2D);
gl.glDisable(GL2.GL_BLEND);
}
gl.glDisableClientState(GL2.GL_VERTEX_ARRAY);
gl.glDisableClientState(GL2.GL_NORMAL_ARRAY);
gl.glDisableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
}
private void ID134(GL2 gl){
float[] positionsArray = {
17.582512f,18.511833f,42.59674f,17.175222f,19.305037f,42.59674f,17.175222f,18.511833f,42.59674f,17.582512f,19.305037f,42.59674f,};
FloatBuffer fbv = GLBuffers.newDirectFloatBuffer(positionsArray, 0);
gl.glVertexPointer(3, GL2.GL_FLOAT, 0, fbv);
gl.glEnableClientState(GL2.GL_VERTEX_ARRAY);
FloatBuffer fbn = null;
float[] normalsArray = {
-0.0f,-0.0f,1.0f,-0.0f,-0.0f,1.0f,-0.0f,-0.0f,1.0f,-0.0f,-0.0f,1.0f,};
fbn = GLBuffers.newDirectFloatBuffer(normalsArray, 0);
gl.glNormalPointer(GL2.GL_FLOAT, 0, fbn);
gl.glEnableClientState(GL2.GL_NORMAL_ARRAY);
FloatBuffer fbt = null;
float[] texcoordArray = null;
{
gl.glColor4d(1.0, 1.0, 1.0, 1.0);
int[] indices = {
0,1,2,1,0,3,};
IntBuffer fbi = GLBuffers.newDirectIntBuffer(indices, 0);
gl.glDrawElements(GL2.GL_TRIANGLES, 6, GL2.GL_UNSIGNED_INT, fbi);
gl.glDisable(GL2.GL_TEXTURE_2D);
gl.glDisable(GL2.GL_BLEND);
}
gl.glDisableClientState(GL2.GL_VERTEX_ARRAY);
gl.glDisableClientState(GL2.GL_NORMAL_ARRAY);
gl.glDisableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
}
private void ID140(GL2 gl){
float[] positionsArray = {
14.686024f,25.490929f,53.61814f,14.623524f,25.507675f,53.557846f,14.67956f,25.515053f,53.557846f,14.623524f,25.4827f,53.61814f,14.567488f,25.515053f,53.557846f,14.561024f,25.490929f,53.61814f,14.623524f,25.547405f,53.50607f,14.669276f,25.553429f,53.50607f,14.744265f,25.515053f,53.61814f,14.731776f,25.536682f,53.557846f,14.688229f,25.4827f,53.682846f,14.623524f,25.474182f,53.682846f,14.51527f,25.536682f,53.557846f,14.502783f,25.515053f,53.61814f,14.57777f,25.553429f,53.50607f,14.558819f,25.4827f,53.682846f,14.655876f,25.603441f,53.46634f,14.623524f,25.599182f,53.46634f,14.711912f,25.571089f,53.50607f,14.794276f,25.553429f,53.61814f,14.776617f,25.571089f,53.557846f,14.748524f,25.507675f,53.682846f,14.686024f,25.490929f,53.74755f,14.623524f,25.4827f,53.74755f,14.47043f,25.571089f,53.557846f,14.45277f,25.553429f,53.61814f,14.535135f,25.571089f,53.50607f,14.498524f,25.507675f,53.682846f,14.591171f,25.603441f,53.46634f,14.561024f,25.490929f,53.74755f,14.64027f,25.661682f,53.441364f,14.623524f,25.659477f,53.441364f,14.686024f,25.615929f,53.46634f,14.748524f,25.599182f,53.50607f,14.832653f,25.603441f,53.61814f,14.811024f,25.615929f,53.557846f,14.800301f,25.547405f,53.682846f,14.744265f,25.515053f,53.74755f,14.67956f,25.515053f,53.807846f,14.623524f,25.507675f,53.807846f,14.414394f,25.603441f,53.61814f,14.436024f,25.615929f,53.557846f,14.498524f,25.599182f,53.50607f,14.446747f,25.547405f,53.682846f,14.561024f,25.615929f,53.46634f,14.502783f,25.515053f,53.74755f,14.606776f,25.661682f,53.441364f,14.567488f,25.515053f,53.807846f,14.655876f,25.668146f,53.441364f,14.711912f,25.635794f,53.46634f,14.776617f,25.635794f,53.50607f,14.856776f,25.661682f,53.61814f,14.832653f,25.668146f,53.557846f,14.84003f,25.599182f,53.682846f,14.794276f,25.553429f,53.74755f,14.731776f,25.536682f,53.807846f,14.669276f,25.553429f,53.859623f,14.623524f,25.547405f,53.859623f,14.39027f,25.661682f,53.61814f,14.414394f,25.668146f,53.557846f,14.47043f,25.635794f,53.50607f,14.407017f,25.599182f,53.682846f,14.535135f,25.635794f,53.46634f,14.45277f,25.553429f,53.74755f,14.591171f,25.668146f,53.441364f,14.51527f,25.536682f,53.807846f,14.57777f,25.553429f,53.859623f,14.669276f,25.678429f,53.441364f,14.731776f,25.661682f,53.46634f,14.794276f,25.678429f,53.50607f,14.865005f,25.724182f,53.61814f,14.84003f,25.724182f,53.557846f,14.865005f,25.659477f,53.682846f,14.832653f,25.603441f,53.74755f,14.776617f,25.571089f,53.807846f,14.711912f,25.571089f,53.859623f,14.623524f,25.599182f,53.899353f,14.655876f,25.603441f,53.899353f,14.382042f,25.724182f,53.61814f,14.407017f,25.724182f,53.557846f,14.45277f,25.678429f,53.50607f,14.382042f,25.659477f,53.682846f,14.51527f,25.661682f,53.46634f,14.414394f,25.603441f,53.74755f,14.57777f,25.678429f,53.441364f,14.47043f,25.571089f,53.807846f,14.535135f,25.571089f,53.859623f,14.591171f,25.603441f,53.899353f,14.67956f,25.69183f,53.441364f,14.744265f,25.69183f,53.46634f,14.800301f,25.724182f,53.50607f,14.832653f,25.780218f,53.557846f,14.856776f,25.786682f,53.61814f,14.873524f,25.724182f,53.682846f,14.856776f,25.661682f,53.74755f,14.811024f,25.615929f,53.807846f,14.748524f,25.599182f,53.859623f,14.686024f,25.615929f,53.899353f,14.623524f,25.659477f,53.924328f,14.64027f,25.661682f,53.924328f,14.39027f,25.786682f,53.61814f,14.414394f,25.780218f,53.557846f,14.446747f,25.724182f,53.50607f,14.373524f,25.724182f,53.682846f,14.502783f,25.69183f,53.46634f,14.39027f,25.661682f,53.74755f,14.567488f,25.69183f,53.441364f,14.436024f,25.615929f,53.807846f,14.498524f,25.599182f,53.859623f,14.561024f,25.615929f,53.899353f,14.606776f,25.661682f,53.924328f,14.686024f,25.707436f,53.441364f,14.748524f,25.724182f,53.46634f,14.794276f,25.769936f,53.50607f,14.811024f,25.832436f,53.557846f,14.832653f,25.844923f,53.61814f,14.865005f,25.788887f,53.682846f,14.865005f,25.724182f,53.74755f,14.832653f,25.668146f,53.807846f,14.776617f,25.635794f,53.859623f,14.711912f,25.635794f,53.899353f,14.655876f,25.668146f,53.924328f,14.561024f,25.707436f,53.924328f,14.561024f,25.740929f,53.924328f,14.558819f,25.724182f,53.924328f,14.567488f,25.69183f,53.924328f,14.567488f,25.756535f,53.924328f,14.57777f,25.678429f,53.924328f,14.57777f,25.769936f,53.924328f,14.591171f,25.668146f,53.924328f,14.591171f,25.780218f,53.924328f,14.606776f,25.786682f,53.924328f,14.436024f,25.832436f,53.557846f,14.414394f,25.844923f,53.61814f,14.45277f,25.769936f,53.50607f,14.382042f,25.788887f,53.682846f,14.498524f,25.724182f,53.46634f,14.382042f,25.724182f,53.74755f,14.561024f,25.707436f,53.441364f,14.414394f,25.668146f,53.807846f,14.47043f,25.635794f,53.859623f,14.535135f,25.635794f,53.899353f,14.688229f,25.724182f,53.441364f,14.744265f,25.756535f,53.46634f,14.776617f,25.81257f,53.50607f,14.776617f,25.877275f,53.557846f,14.794276f,25.894936f,53.61814f,14.84003f,25.849182f,53.682846f,14.856776f,25.786682f,53.74755f,14.84003f,25.724182f,53.807846f,14.794276f,25.678429f,53.859623f,14.731776f,25.661682f,53.899353f,14.669276f,25.678429f,53.924328f,14.670379f,25.67652f,53.924328f,14.623524f,25.788887f,53.924328f,14.64027f,25.786682f,53.924328f,14.655876f,25.780218f,53.924328f,14.669276f,25.769936f,53.924328f,14.67956f,25.69183f,53.924328f,14.67956f,25.756535f,53.924328f,14.686024f,25.707436f,53.924328f,14.686024f,25.740929f,53.924328f,14.688229f,25.724182f,53.924328f,14.591171f,25.844923f,53.899353f,14.561024f,25.832436f,53.899353f,14.535135f,25.81257f,53.899353f,14.51527f,25.786682f,53.899353f,14.502783f,25.756535f,53.899353f,14.498524f,25.724182f,53.899353f,14.502783f,25.69183f,53.899353f,14.51527f,25.661682f,53.899353f,14.47043f,25.877275f,53.557846f,14.45277f,25.894936f,53.61814f,14.47043f,25.81257f,53.50607f,14.407017f,25.849182f,53.682846f,14.502783f,25.756535f,53.46634f,14.39027f,25.786682f,53.74755f,14.558819f,25.724182f,53.441364f,14.407017f,25.724182f,53.807846f,14.45277f,25.678429f,53.859623f,14.686024f,25.740929f,53.441364f,14.731776f,25.786682f,53.46634f,14.748524f,25.849182f,53.50607f,14.744265f,25.933311f,53.61814f,14.731776f,25.911682f,53.557846f,14.800301f,25.900959f,53.682846f,14.832653f,25.844923f,53.74755f,14.832653f,25.780218f,53.807846f,14.800301f,25.724182f,53.859623f,14.744265f,25.69183f,53.899353f,14.748524f,25.724182f,53.899353f,14.744265f,25.756535f,53.899353f,14.731776f,25.786682f,53.899353f,14.711912f,25.81257f,53.899353f,14.686024f,25.832436f,53.899353f,14.655876f,25.844923f,53.899353f,14.623524f,25.849182f,53.899353f,14.622952f,25.791016f,53.924328f,14.57777f,25.894936f,53.859623f,14.535135f,25.877275f,53.859623f,14.498524f,25.849182f,53.859623f,14.47043f,25.81257f,53.859623f,14.45277f,25.769936f,53.859623f,14.446747f,25.724182f,53.859623f,14.51527f,25.911682f,53.557846f,14.502783f,25.933311f,53.61814f,14.498524f,25.849182f,53.50607f,14.446747f,25.900959f,53.682846f,14.51527f,25.786682f,53.46634f,14.414394f,25.844923f,53.74755f,14.561024f,25.740929f,53.441364f,14.414394f,25.780218f,53.807846f,14.67956f,25.756535f,53.441364f,14.711912f,25.81257f,53.46634f,14.711912f,25.877275f,53.50607f,14.686024f,25.957436f,53.61814f,14.67956f,25.933311f,53.557846f,14.748524f,25.940687f,53.682846f,14.794276f,25.894936f,53.74755f,14.811024f,25.832436f,53.807846f,14.794276f,25.769936f,53.859623f,14.776617f,25.81257f,53.859623f,14.748524f,25.849182f,53.859623f,14.711912f,25.877275f,53.859623f,14.669276f,25.894936f,53.859623f,14.623524f,25.900959f,53.859623f,14.567488f,25.933311f,53.807846f,14.51527f,25.911682f,53.807846f,14.47043f,25.877275f,53.807846f,14.436024f,25.832436f,53.807846f,14.567488f,25.933311f,53.557846f,14.561024f,25.957436f,53.61814f,14.535135f,25.877275f,53.50607f,14.498524f,25.940687f,53.682846f,14.535135f,25.81257f,53.46634f,14.45277f,25.894936f,53.74755f,14.567488f,25.756535f,53.441364f,14.669276f,25.769936f,53.441364f,14.686024f,25.832436f,53.46634f,14.669276f,25.894936f,53.50607f,14.623524f,25.965664f,53.61814f,14.623524f,25.940687f,53.557846f,14.688229f,25.965664f,53.682846f,14.744265f,25.933311f,53.74755f,14.776617f,25.877275f,53.807846f,14.731776f,25.911682f,53.807846f,14.67956f,25.933311f,53.807846f,14.623524f,25.940687f,53.807846f,14.561024f,25.957436f,53.74755f,14.502783f,25.933311f,53.74755f,14.57777f,25.894936f,53.50607f,14.558819f,25.965664f,53.682846f,14.561024f,25.832436f,53.46634f,14.57777f,25.769936f,53.441364f,14.655876f,25.780218f,53.441364f,14.655876f,25.844923f,53.46634f,14.623524f,25.900959f,53.50607f,14.623524f,25.974182f,53.682846f,14.686024f,25.957436f,53.74755f,14.623524f,25.965664f,53.74755f,14.591171f,25.844923f,53.46634f,14.591171f,25.780218f,53.441364f,14.64027f,25.786682f,53.441364f,14.623524f,25.849182f,53.46634f,14.606776f,25.786682f,53.441364f,14.623524f,25.788887f,53.441364f,};
FloatBuffer fbv = GLBuffers.newDirectFloatBuffer(positionsArray, 0);
gl.glVertexPointer(3, GL2.GL_FLOAT, 0, fbv);
gl.glEnableClientState(GL2.GL_VERTEX_ARRAY);
FloatBuffer fbn = null;
float[] normalsArray = {
0.2501843f,-0.9337004f,-0.2561471f,-0.0f,-0.8686895f,-0.4953571f,0.2248334f,-0.8390896f,-0.4953571f,-0.0f,-0.9666378f,-0.2561471f,-0.2248334f,-0.8390896f,-0.4953571f,-0.2501843f,-0.9337004f,-0.2561471f,-0.0f,-0.7124563f,-0.7017165f,0.1843973f,-0.6881799f,-0.7017165f,0.4833189f,-0.8371329f,-0.2561471f,0.4343447f,-0.7523071f,-0.4953571f,0.258819f,-0.9659258f,0.0f,-0.0f,-1.0f,0.0f,-0.4343447f,-0.7523071f,-0.4953571f,-0.4833189f,-0.8371329f,-0.2561471f,-0.1843973f,-0.6881799f,-0.7017165f,-0.258819f,-0.9659258f,0.0f,0.1314969f,-0.490753f,-0.8613188f,-0.0f,-0.5080649f,-0.8613188f,0.3562282f,-0.6170053f,-0.7017165f,0.6835162f,-0.6835162f,-0.2561471f,0.6142562f,-0.6142562f,-0.4953571f,0.5f,-0.8660254f,0.0f,0.2501843f,-0.9337004f,0.2561471f,-0.0f,-0.9666378f,0.2561471f,-0.6142562f,-0.6142562f,-0.4953571f,-0.6835162f,-0.6835162f,-0.2561471f,-0.3562282f,-0.6170053f,-0.7017165f,-0.5f,-0.8660254f,0.0f,-0.1314969f,-0.490753f,-0.8613188f,-0.2501843f,-0.9337004f,0.2561471f,0.0990458f,-0.3696438f,-0.9238795f,-0.0f,-0.3826834f,-0.9238795f,0.2540325f,-0.4399971f,-0.8613188f,0.5037827f,-0.5037827f,-0.7017165f,0.8371329f,-0.4833189f,-0.2561471f,0.7523071f,-0.4343447f,-0.4953571f,0.7071068f,-0.7071068f,0.0f,0.4833189f,-0.8371329f,0.2561471f,0.2248334f,-0.8390896f,0.4953571f,-0.0f,-0.8686895f,0.4953571f,-0.8371329f,-0.4833189f,-0.2561471f,-0.7523071f,-0.4343447f,-0.4953571f,-0.5037827f,-0.5037827f,-0.7017165f,-0.7071068f,-0.7071068f,0.0f,-0.2540325f,-0.4399971f,-0.8613188f,-0.4833189f,-0.8371329f,0.2561471f,-0.0990458f,-0.3696438f,-0.9238795f,-0.2248334f,-0.8390896f,0.4953571f,0.1913417f,-0.3314136f,-0.9238795f,0.3592562f,-0.3592562f,-0.8613188f,0.6170053f,-0.3562282f,-0.7017165f,0.9337004f,-0.2501843f,-0.2561471f,0.8390896f,-0.2248334f,-0.4953571f,0.8660254f,-0.5f,0.0f,0.6835162f,-0.6835162f,0.2561471f,0.4343447f,-0.7523071f,0.4953571f,0.1843973f,-0.6881799f,0.7017165f,-0.0f,-0.7124563f,0.7017165f,-0.9337004f,-0.2501843f,-0.2561471f,-0.8390896f,-0.2248334f,-0.4953571f,-0.6170053f,-0.3562282f,-0.7017165f,-0.8660254f,-0.5f,0.0f,-0.3592562f,-0.3592562f,-0.8613188f,-0.6835162f,-0.6835162f,0.2561471f,-0.1913417f,-0.3314136f,-0.9238795f,-0.4343447f,-0.7523071f,0.4953571f,-0.1843973f,-0.6881799f,0.7017165f,0.2705981f,-0.2705981f,-0.9238795f,0.4399971f,-0.2540325f,-0.8613188f,0.6881799f,-0.1843973f,-0.7017165f,0.9666378f,0.0f,-0.2561471f,0.8686895f,-0.0f,-0.4953571f,0.9659258f,-0.258819f,0.0f,0.8371329f,-0.4833189f,0.2561471f,0.6142562f,-0.6142562f,0.4953571f,0.3562282f,-0.6170053f,0.7017165f,-0.0f,-0.5080649f,0.8613188f,0.1314969f,-0.490753f,0.8613188f,-0.9666378f,0.0f,-0.2561471f,-0.8686895f,0.0f,-0.4953571f,-0.6881799f,-0.1843973f,-0.7017165f,-0.9659258f,-0.258819f,0.0f,-0.4399971f,-0.2540325f,-0.8613188f,-0.8371329f,-0.4833189f,0.2561471f,-0.2705981f,-0.2705981f,-0.9238795f,-0.6142562f,-0.6142562f,0.4953571f,-0.3562282f,-0.6170053f,0.7017165f,-0.1314969f,-0.490753f,0.8613188f,0.3314136f,-0.1913417f,-0.9238795f,0.490753f,-0.1314969f,-0.8613188f,0.7124563f,0.0f,-0.7017165f,0.8390896f,0.2248334f,-0.4953571f,0.9337004f,0.2501843f,-0.2561471f,1.0f,0.0f,0.0f,0.9337004f,-0.2501843f,0.2561471f,0.7523071f,-0.4343447f,0.4953571f,0.5037827f,-0.5037827f,0.7017165f,0.2532732f,-0.4414887f,0.8607789f,-0.0f,-0.2106266f,0.9775666f,0.0545142f,-0.2034496f,0.9775666f,-0.9337004f,0.2501843f,-0.2561471f,-0.8390896f,0.2248334f,-0.4953571f,-0.7124563f,0.0f,-0.7017165f,-1.0f,0.0f,0.0f,-0.490753f,-0.1314969f,-0.8613188f,-0.9337004f,-0.2501843f,0.2561471f,-0.3314136f,-0.1913417f,-0.9238795f,-0.7523071f,-0.4343447f,0.4953571f,-0.5037827f,-0.5037827f,0.7017165f,-0.2540325f,-0.4399971f,0.8613188f,-0.0545142f,-0.2034496f,0.9775666f,0.3696438f,-0.0990458f,-0.9238795f,0.5080649f,0.0f,-0.8613188f,0.6881799f,0.1843973f,-0.7017165f,0.7523071f,0.4343447f,-0.4953571f,0.8371329f,0.4833189f,-0.2561471f,0.9659258f,0.258819f,0.0f,0.9666378f,0.0f,0.2561471f,0.8390896f,-0.2248334f,0.4953571f,0.6170053f,-0.3562282f,0.7017165f,0.3602168f,-0.3599072f,0.8606455f,0.1045009f,-0.1843002f,0.9772988f,-0.2034496f,-0.0545142f,0.9775666f,-0.2034496f,0.0545142f,0.9775666f,-0.2106266f,0.0f,0.9775666f,-0.182408f,-0.1053133f,0.9775666f,-0.182408f,0.1053133f,0.9775666f,-0.1489355f,-0.1489355f,0.9775666f,-0.1489355f,0.1489355f,0.9775666f,-0.1053133f,-0.182408f,0.9775666f,-0.1053133f,0.182408f,0.9775666f,-0.0564266f,0.2042132f,0.9772988f,-0.7523071f,0.4343447f,-0.4953571f,-0.8371329f,0.4833189f,-0.2561471f,-0.6881799f,0.1843973f,-0.7017165f,-0.9659258f,0.258819f,0.0f,-0.5080649f,0.0f,-0.8613188f,-0.9666378f,0.0f,0.2561471f,-0.3696438f,-0.0990458f,-0.9238795f,-0.8390896f,-0.2248334f,0.4953571f,-0.6170053f,-0.3562282f,0.7017165f,-0.3592562f,-0.3592562f,0.8613188f,0.3826834f,0.0f,-0.9238795f,0.490753f,0.1314969f,-0.8613188f,0.6170053f,0.3562282f,-0.7017165f,0.6142562f,0.6142562f,-0.4953571f,0.6835162f,0.6835162f,-0.2561471f,0.8660254f,0.5f,0.0f,0.9337004f,0.2501843f,0.2561471f,0.8686895f,-0.0f,0.4953571f,0.6881799f,-0.1843973f,0.7017165f,0.4414747f,-0.2531846f,0.8608122f,0.1546003f,-0.147111f,0.9769632f,0.2687674f,-0.2761899f,0.9227585f,0.0052957f,0.2133421f,0.9769632f,0.0564867f,0.204121f,0.9773146f,0.1053133f,0.182408f,0.9775666f,0.1489355f,0.1489355f,0.9775666f,0.1842775f,-0.1043932f,0.9773146f,0.182408f,0.1053133f,0.9775666f,0.2034496f,-0.0545142f,0.9775666f,0.2034496f,0.0545142f,0.9775666f,0.2106266f,0.0f,0.9775666f,-0.1330885f,0.4912709f,0.8607789f,-0.2540325f,0.4399971f,0.8613188f,-0.3592562f,0.3592562f,0.8613188f,-0.4399971f,0.2540325f,0.8613188f,-0.490753f,0.1314969f,0.8613188f,-0.5080649f,0.0f,0.8613188f,-0.490753f,-0.1314969f,0.8613188f,-0.4399971f,-0.2540325f,0.8613188f,-0.6142562f,0.6142562f,-0.4953571f,-0.6835162f,0.6835162f,-0.2561471f,-0.6170053f,0.3562282f,-0.7017165f,-0.8660254f,0.5f,0.0f,-0.490753f,0.1314969f,-0.8613188f,-0.9337004f,0.2501843f,0.2561471f,-0.3826834f,0.0f,-0.9238795f,-0.8686895f,0.0f,0.4953571f,-0.6881799f,-0.1843973f,0.7017165f,0.3696438f,0.0990458f,-0.9238795f,0.4399971f,0.2540325f,-0.8613188f,0.5037827f,0.5037827f,-0.7017165f,0.4833189f,0.8371329f,-0.2561471f,0.4343447f,0.7523071f,-0.4953571f,0.7071068f,0.7071068f,0.0f,0.8371329f,0.4833189f,0.2561471f,0.8390896f,0.2248334f,0.4953571f,0.7124563f,0.0f,0.7017165f,0.490753f,-0.1314969f,0.8613188f,0.5080649f,0.0f,0.8613188f,0.490753f,0.1314969f,0.8613188f,0.4399971f,0.2540325f,0.8613188f,0.3592562f,0.3592562f,0.8613188f,0.2540325f,0.4399971f,0.8613188f,0.1331413f,0.4911983f,0.8608122f,2.19E-4f,0.5092046f,0.8606455f,-0.0052485f,0.385343f,0.9227585f,-0.1843973f,0.6881799f,0.7017165f,-0.3562282f,0.6170053f,0.7017165f,-0.5037827f,0.5037827f,0.7017165f,-0.6170053f,0.3562282f,0.7017165f,-0.6881799f,0.1843973f,0.7017165f,-0.7124563f,0.0f,0.7017165f,-0.4343447f,0.7523071f,-0.4953571f,-0.4833189f,0.8371329f,-0.2561471f,-0.5037827f,0.5037827f,-0.7017165f,-0.7071068f,0.7071068f,0.0f,-0.4399971f,0.2540325f,-0.8613188f,-0.8371329f,0.4833189f,0.2561471f,-0.3696438f,0.0990458f,-0.9238795f,-0.8390896f,0.2248334f,0.4953571f,0.3314136f,0.1913417f,-0.9238795f,0.3592562f,0.3592562f,-0.8613188f,0.3562282f,0.6170053f,-0.7017165f,0.2501843f,0.9337004f,-0.2561471f,0.2248334f,0.8390896f,-0.4953571f,0.5f,0.8660254f,0.0f,0.6835162f,0.6835162f,0.2561471f,0.7523071f,0.4343447f,0.4953571f,0.6881799f,0.1843973f,0.7017165f,0.6170053f,0.3562282f,0.7017165f,0.5037827f,0.5037827f,0.7017165f,0.3562282f,0.6170053f,0.7017165f,0.1843973f,0.6881799f,0.7017165f,-0.0f,0.7124563f,0.7017165f,-0.2248334f,0.8390896f,0.4953571f,-0.4343447f,0.7523071f,0.4953571f,-0.6142562f,0.6142562f,0.4953571f,-0.7523071f,0.4343447f,0.4953571f,-0.2248334f,0.8390896f,-0.4953571f,-0.2501843f,0.9337004f,-0.2561471f,-0.3562282f,0.6170053f,-0.7017165f,-0.5f,0.8660254f,0.0f,-0.3592562f,0.3592562f,-0.8613188f,-0.6835162f,0.6835162f,0.2561471f,-0.3314136f,0.1913417f,-0.9238795f,0.2705981f,0.2705981f,-0.9238795f,0.2540325f,0.4399971f,-0.8613188f,0.1843973f,0.6881799f,-0.7017165f,-0.0f,0.9666378f,-0.2561471f,0.0f,0.8686895f,-0.4953571f,0.258819f,0.9659258f,0.0f,0.4833189f,0.8371329f,0.2561471f,0.6142562f,0.6142562f,0.4953571f,0.4343447f,0.7523071f,0.4953571f,0.2248334f,0.8390896f,0.4953571f,0.0f,0.8686895f,0.4953571f,-0.2501843f,0.9337004f,0.2561471f,-0.4833189f,0.8371329f,0.2561471f,-0.1843973f,0.6881799f,-0.7017165f,-0.258819f,0.9659258f,0.0f,-0.2540325f,0.4399971f,-0.8613188f,-0.2705981f,0.2705981f,-0.9238795f,0.1913417f,0.3314136f,-0.9238795f,0.1314969f,0.490753f,-0.8613188f,0.0f,0.7124563f,-0.7017165f,-0.0f,1.0f,0.0f,0.2501843f,0.9337004f,0.2561471f,-0.0f,0.9666378f,0.2561471f,-0.1314969f,0.490753f,-0.8613188f,-0.1913417f,0.3314136f,-0.9238795f,0.0990458f,0.3696438f,-0.9238795f,0.0f,0.5080649f,-0.8613188f,-0.0990458f,0.3696438f,-0.9238795f,0.0f,0.3826834f,-0.9238795f,};
fbn = GLBuffers.newDirectFloatBuffer(normalsArray, 0);
gl.glNormalPointer(GL2.GL_FLOAT, 0, fbn);
gl.glEnableClientState(GL2.GL_NORMAL_ARRAY);
FloatBuffer fbt = null;
float[] texcoordArray = null;
{
gl.glEnable(GL2.GL_TEXTURE_2D);
gl.glEnable(GL2.GL_BLEND);
gl.glBlendFunc(GL2.GL_SRC_ALPHA, GL2.GL_ONE_MINUS_SRC_ALPHA);
ID143.bind(gl);
texcoordArray = new float[] {
0.3312522f,0.7541866f,0.3301451f,0.7529795f,0.3311918f,0.7529795f,0.3300848f,0.7541866f,0.2068937f,0.7273309f,0.2057866f,0.7261238f,0.2068333f,0.7261238f,0.2057263f,0.7273309f,0.3311918f,0.5272002f,0.3302412f,0.5259954f,0.3310958f,0.5259954f,0.3301451f,0.5272002f,0.4330761f,0.7923543f,0.4319691f,0.7911472f,0.4330158f,0.7911472f,0.4319087f,0.7923543f,0.3312727f,0.9298052f,0.3300848f,0.9285968f,0.3312522f,0.9285968f,0.3300642f,0.9298052f,0.0684755f,0.7136173f,0.0673684f,0.7124102f,0.0684151f,0.7124102f,0.0673081f,0.7136173f,0.2068333f,0.4843969f,0.2058827f,0.4831922f,0.2067373f,0.4831922f,0.2057866f,0.4843969f,0.2069142f,0.9206553f,0.2057263f,0.9194469f,0.2068937f,0.9194469f,0.2057057f,0.9206553f,0.3309706f,0.2622696f,0.3302412f,0.2634717f,0.3303663f,0.2622696f,0.3310958f,0.2634717f,0.4330158f,0.5880328f,0.4320652f,0.586828f,0.4329197f,0.586828f,0.4319691f,0.5880328f,0.5054265f,0.8392329f,0.5043195f,0.8380258f,0.5053661f,0.8380258f,0.5042591f,0.8392329f,0.4330967f,0.9428091f,0.4319087f,0.9416007f,0.4330761f,0.9416007f,0.4318882f,0.9428091f,0.3312522f,1.0429331f,0.3300642f,1.0417247f,0.3312727f,1.0417247f,0.3300848f,1.0429331f,-0.0745694f,0.7139805f,-0.0756764f,0.7127734f,-0.0746298f,0.7127734f,-0.0757368f,0.7139805f,0.0684151f,0.4625399f,0.0674645f,0.4613352f,0.0683191f,0.4613352f,0.0673684f,0.4625399f,0.0684961f,0.915983f,0.0673081f,0.9147746f,0.0684755f,0.9147746f,0.0672875f,0.915983f,0.2060078f,0.2063631f,0.2067373f,0.2075652f,0.2058827f,0.2075652f,0.2066121f,0.2063631f,0.2068937f,1.052083f,0.2057057f,1.0508746f,0.2069142f,1.0508746f,0.2057263f,1.052083f,0.3308249f,-0.0205739f,0.3303663f,-0.0193742f,0.3305121f,-0.0205739f,0.3309706f,-0.0193742f,0.4327946f,0.3417247f,0.4320652f,0.3429267f,0.4321903f,0.3417247f,0.4329197f,0.3429267f,0.5053661f,0.662749f,0.5044155f,0.6615443f,0.5052701f,0.6615443f,0.5043195f,0.662749f,0.5422656f,0.8904206f,0.5433726f,0.8916277f,0.5422052f,0.8916277f,0.5433123f,0.8904206f,0.5054471f,0.9587809f,0.5042591f,0.9575725f,0.5054265f,0.9575725f,0.5042385f,0.9587809f,0.4330761f,1.0299292f,0.4318882f,1.0287209f,0.4330967f,1.0287209f,0.4319087f,1.0299292f,0.3311918f,1.0862231f,0.3300848f,1.085016f,0.3312522f,1.085016f,0.3301451f,1.0862231f,-0.2136601f,0.7283956f,-0.2125531f,0.7271885f,-0.2124928f,0.7283956f,-0.2135998f,0.7271885f,-0.0746298f,0.4631187f,-0.0755804f,0.461914f,-0.0747258f,0.461914f,-0.0756764f,0.4631187f,-0.0745488f,0.9161068f,-0.0757368f,0.9148984f,-0.0745694f,0.9148984f,-0.0757574f,0.9161068f,0.0675896f,0.1778151f,0.0683191f,0.1790172f,0.0674645f,0.1790172f,0.0681939f,0.1778151f,0.0684755f,1.0567553f,0.0672875f,1.0555469f,0.0684961f,1.0555469f,0.0673081f,1.0567553f,0.2061536f,-0.0858044f,0.2066121f,-0.0846047f,0.2060078f,-0.0846047f,0.2064664f,-0.0858044f,0.2068333f,1.1130788f,0.2057263f,1.1118717f,0.2068937f,1.1118717f,0.2057866f,1.1130788f,0.4326488f,0.0721326f,0.4321903f,0.0733323f,0.432336f,0.0721326f,0.4327946f,0.0733323f,0.5051449f,0.4393135f,0.5044155f,0.4405156f,0.5045406f,0.4393135f,0.5052701f,0.4405156f,0.5423616f,0.7450524f,0.5433123f,0.7462572f,0.5422656f,0.7462572f,0.5432162f,0.7450524f,0.5432216f,0.9447611f,0.5443286f,0.9459681f,0.5431612f,0.9459681f,0.5442682f,0.9447611f,0.5422052f,0.9754237f,0.5433932f,0.9766321f,0.5421846f,0.9766321f,0.5433726f,0.9754237f,0.5054265f,1.0139574f,0.5042385f,1.012749f,0.5054471f,1.012749f,0.5042591f,1.0139574f,0.4330158f,1.0480554f,0.4319087f,1.0468483f,0.4330761f,1.0468483f,0.4319691f,1.0480554f,0.3310958f,1.0563955f,0.3301451f,1.0551908f,0.3311918f,1.0551908f,0.3302412f,1.0563955f,-0.3370627f,0.7558803f,-0.3359556f,0.7546732f,-0.3358953f,0.7558803f,-0.3370023f,0.7546732f,-0.2135998f,0.4860939f,-0.2126492f,0.4848891f,-0.2125531f,0.4860939f,-0.2135037f,0.4848891f,-0.2136807f,0.9210181f,-0.2124928f,0.9198097f,-0.2124722f,0.9210181f,-0.2136601f,0.9198097f,-0.0754553f,0.1785711f,-0.0747258f,0.1797732f,-0.0755804f,0.1797732f,-0.074851f,0.1785711f,-0.0745694f,1.0566314f,-0.0757574f,1.0554231f,-0.0745488f,1.0554231f,-0.0757368f,1.0566314f,0.0677354f,-0.1191136f,0.0681939f,-0.1179139f,0.0675896f,-0.1179139f,0.0680482f,-0.1191136f,0.0684151f,1.1267924f,0.0673081f,1.1255853f,0.0684755f,1.1255853f,0.0673684f,1.1267924f,0.2067373f,1.0991988f,0.2057866f,1.097994f,0.2068333f,1.097994f,0.2058827f,1.0991988f,0.5049992f,0.1859972f,0.5045406f,0.187197f,0.5046864f,0.1859972f,0.5051449f,0.187197f,0.5430911f,0.5483857f,0.5423616f,0.5495878f,0.5424868f,0.5483857f,0.5432162f,0.5495878f,0.5433176f,0.8316615f,0.5442682f,0.8328662f,0.5432216f,0.8328662f,0.5441722f,0.8316615f,0.5071222f,0.9973439f,0.5082293f,0.998551f,0.5070619f,0.998551f,0.5081689f,0.9973439f,0.5431612f,0.9939377f,0.5443492f,0.9951461f,0.5431406f,0.9951461f,0.5443286f,0.9939377f,0.5433932f,0.9948978f,0.5422052f,0.9961062f,0.5421846f,0.9948978f,0.5433726f,0.9961062f,0.5053661f,1.0011768f,0.5042591f,0.9999697f,0.5054265f,0.9999697f,0.5043195f,1.0011768f,0.4329197f,0.9955629f,0.4319691f,0.9943582f,0.4330158f,0.9943582f,0.4320652f,0.9955629f,0.3310958f,0.9534427f,0.3303663f,0.9546447f,0.3302412f,0.9534427f,0.3309706f,0.9546447f,-0.4375347f,0.7945616f,-0.4364277f,0.7933545f,-0.4363673f,0.7945616f,-0.4374743f,0.7933545f,-0.3370023f,0.5298997f,-0.3360517f,0.5286949f,-0.3359556f,0.5298997f,-0.3369063f,0.5286949f,-0.3370833f,0.9303823f,-0.3358953f,0.9291739f,-0.3358747f,0.9303823f,-0.3370627f,0.9291739f,-0.2133786f,0.2085796f,-0.2126492f,0.2097817f,-0.2135037f,0.2097817f,-0.2127743f,0.2085796f,-0.2124928f,1.0517201f,-0.2136807f,1.0505118f,-0.2124722f,1.0505118f,-0.2136601f,1.0517201f,-0.0753095f,-0.1182315f,-0.074851f,-0.1170318f,-0.0754553f,-0.1170318f,-0.0749967f,-0.1182315f,-0.0746298f,1.1264292f,-0.0757368f,1.1252221f,-0.0745694f,1.1252221f,-0.0756764f,1.1264292f,0.0683191f,1.1210558f,0.0673684f,1.119851f,0.0684151f,1.119851f,0.0674645f,1.1210558f,0.2067373f,1.0093491f,0.2060078f,1.0105512f,0.2058827f,1.0093491f,0.2066121f,1.0105512f,0.5429453f,0.3132603f,0.5424868f,0.3144601f,0.5426325f,0.3132603f,0.5430911f,0.3144601f,0.5440471f,0.6615082f,0.5433176f,0.6627102f,0.5434428f,0.6615082f,0.5441722f,0.6627102f,0.5072183f,0.9154692f,0.5081689f,0.916674f,0.5071222f,0.916674f,0.5080729f,0.9154692f,0.4374743f,1.0445857f,0.4363673f,1.0457927f,0.4364277f,1.0445857f,0.4375347f,1.0457927f,0.5070619f,1.011853f,0.5082499f,1.0130614f,0.5070413f,1.0130614f,0.5082293f,1.011853f,0.5443492f,0.9763838f,0.5431612f,0.9775922f,0.5431406f,0.9763838f,0.5443286f,0.9775922f,0.5433726f,0.9475749f,0.5422656f,0.948782f,0.5422052f,0.9475749f,0.5433123f,0.948782f,0.5052701f,0.9208467f,0.5043195f,0.9196419f,0.5053661f,0.9196419f,0.5044155f,0.9208467f,0.4320652f,0.8739876f,0.4327946f,0.8751897f,0.4321903f,0.8751897f,0.4329197f,0.8739876f,0.3309706f,0.7858393f,0.3305121f,0.787039f,0.3303663f,0.7858393f,0.3308249f,0.787039f,-0.5082293f,0.8418034f,-0.5071222f,0.8405963f,-0.5070619f,0.8418034f,-0.5081689f,0.8405963f,-0.4374743f,0.5915508f,-0.4365237f,0.5903461f,-0.4364277f,0.5915508f,-0.4373783f,0.5903461f,-0.4375553f,0.9435612f,-0.4363673f,0.9423528f,-0.4363467f,0.9435612f,-0.4375347f,0.9423528f,-0.3367811f,0.2657955f,-0.3360517f,0.2669976f,-0.3369063f,0.2669976f,-0.3361768f,0.2657955f,-0.3358953f,1.042356f,-0.3370833f,1.0411476f,-0.3358747f,1.0411476f,-0.3370627f,1.042356f,-0.2132329f,-0.0832183f,-0.2127743f,-0.0820185f,-0.2133786f,-0.0820185f,-0.21292f,-0.0832183f,-0.2125531f,1.112014f,-0.2136601f,1.110807f,-0.2124928f,1.110807f,-0.2135998f,1.112014f,-0.0747258f,1.120477f,-0.0756764f,1.1192722f,-0.0746298f,1.1192722f,-0.0755804f,1.120477f,0.0683191f,1.0378971f,0.0675896f,1.0390992f,0.0674645f,1.0378971f,0.0681939f,1.0390992f,0.2066121f,0.8510698f,0.2061536f,0.8522695f,0.2060078f,0.8510698f,0.2064664f,0.8522695f,0.5439013f,0.4452492f,0.5434428f,0.4464489f,0.5435885f,0.4452492f,0.5440471f,0.4464489f,0.5079477f,0.7709717f,0.5072183f,0.7721738f,0.5073434f,0.7709717f,0.5080729f,0.7721738f,0.4373783f,0.9907643f,0.4364277f,0.9919691f,0.4365237f,0.9907643f,0.4374743f,0.9919691f,0.3370023f,1.0832669f,0.3358953f,1.084474f,0.3359556f,1.0832669f,0.3370627f,1.084474f,0.4375347f,1.0279485f,0.4363467f,1.0291569f,0.4363673f,1.0279485f,0.4375553f,1.0291569f,0.5082499f,0.9584685f,0.5070619f,0.9596769f,0.5070413f,0.9584685f,0.5082293f,0.9596769f,0.5443286f,0.8932345f,0.5432216f,0.8944415f,0.5431612f,0.8932345f,0.5442682f,0.8944415f,0.5433123f,0.8361338f,0.5423616f,0.8373385f,0.5422656f,0.8361338f,0.5432162f,0.8373385f,0.5044155f,0.7763987f,0.5051449f,0.7776008f,0.5045406f,0.7776008f,0.5052701f,0.7763987f,0.4321903f,0.6931328f,0.4326488f,0.6943325f,0.432336f,0.6943325f,0.4327946f,0.6931328f,0.2696486f,0.4760636f,0.2696486f,0.4766839f,0.2696078f,0.4763737f,0.2697683f,0.4757746f,0.2697683f,0.4769729f,0.2699587f,0.4755265f,0.2699587f,0.477221f,0.2702069f,0.475336f,0.2702069f,0.4774114f,0.2704959f,0.4752163f,0.2704959f,0.4775311f,0.270806f,0.4751755f,0.2714051f,0.475336f,0.2711161f,0.4752163f,-0.5431612f,0.8943862f,-0.5442682f,0.8931791f,-0.5432216f,0.8931791f,-0.5443286f,0.8943862f,-0.5081689f,0.6668459f,-0.5072183f,0.6656412f,-0.5071222f,0.6668459f,-0.5080729f,0.6656412f,-0.5082499f,0.9596567f,-0.5070619f,0.9584483f,-0.5070413f,0.9596567f,-0.5082293f,0.9584483f,-0.4372532f,0.3463197f,-0.4365237f,0.3475218f,-0.4373783f,0.3475218f,-0.4366489f,0.3463197f,-0.4363673f,1.0291771f,-0.4375553f,1.0279686f,-0.4363467f,1.0279686f,-0.4375347f,1.0291771f,-0.3366354f,-0.01646f,-0.3361768f,-0.0152602f,-0.3367811f,-0.0152602f,-0.3363226f,-0.01646f,-0.3359556f,1.0845294f,-0.3370627f,1.0833223f,-0.3358953f,1.0833223f,-0.3370023f,1.0845294f,-0.2126492f,1.0975018f,-0.2135998f,1.096297f,-0.2125531f,1.096297f,-0.2135037f,1.0975018f,-0.0747258f,1.0371411f,-0.0754553f,1.0383432f,-0.0755804f,1.0371411f,-0.074851f,1.0383432f,0.0681939f,0.884379f,0.0677354f,0.8855787f,0.0675896f,0.884379f,0.0680482f,0.8855787f,0.507802f,0.5729689f,0.5073434f,0.5741687f,0.5074892f,0.5729689f,0.5079477f,0.5741687f,0.4373783f,0.8705187f,0.4366489f,0.8693166f,0.4372532f,0.8693166f,0.4365237f,0.8705187f,0.3369063f,1.0524155f,0.3359556f,1.0536202f,0.3360517f,1.0524155f,0.3370023f,1.0536202f,0.2135998f,1.1107516f,0.2124928f,1.1119587f,0.2125531f,1.1107516f,0.2136601f,1.1119587f,0.3370627f,1.0411274f,0.3358747f,1.0423357f,0.3358953f,1.0411274f,0.3370833f,1.0423357f,0.4375553f,0.942373f,0.4363673f,0.9435814f,0.4363467f,0.942373f,0.4375347f,0.9435814f,0.5082293f,0.8406517f,0.5071222f,0.8418587f,0.5070619f,0.8406517f,0.5081689f,0.8418587f,0.5442682f,0.7495247f,0.5433176f,0.7507294f,0.5432216f,0.7495247f,0.5441722f,0.7507294f,0.5423616f,0.6673265f,0.5430911f,0.6685286f,0.5424868f,0.6685286f,0.5432162f,0.6673265f,0.5009473f,0.5902791f,0.5013873f,0.5914858f,0.5010746f,0.591481f,0.5013827f,0.5914484f,0.5015515f,0.5902884f,0.270806f,0.477572f,0.2711161f,0.4775311f,0.2714051f,0.4774114f,0.2716533f,0.4755265f,0.2716533f,0.477221f,0.2718437f,0.4757746f,0.2718437f,0.4769729f,0.2719634f,0.4760636f,0.2719634f,0.4766839f,0.2720042f,0.4763737f,-0.432336f,0.073388f,-0.4327946f,0.0721883f,-0.4321903f,0.0721883f,-0.4326488f,0.073388f,-0.5046864f,0.1872527f,-0.5051449f,0.1860529f,-0.5045406f,0.1860529f,-0.5049992f,0.1872527f,-0.5426325f,0.3145158f,-0.5430911f,0.313316f,-0.5424868f,0.313316f,-0.5429453f,0.3145158f,-0.5435885f,0.4465046f,-0.5440471f,0.4453049f,-0.5434428f,0.4453049f,-0.5439013f,0.4465046f,-0.5074892f,0.5742244f,-0.5079477f,0.5730246f,-0.5073434f,0.5730246f,-0.507802f,0.5742244f,-0.4366489f,0.6877714f,-0.4371074f,0.6889711f,-0.4372532f,0.6877714f,-0.4367946f,0.6889711f,-0.3361768f,0.7817253f,-0.3366354f,0.782925f,-0.3367811f,0.7817253f,-0.3363226f,0.782925f,-0.2127743f,0.8484836f,-0.2132329f,0.8496834f,-0.2133786f,0.8484836f,-0.21292f,0.8496834f,-0.074851f,0.8834969f,-0.0753095f,0.8846966f,-0.0754553f,0.8834969f,-0.0749967f,0.8846966f,-0.5422052f,0.9487266f,-0.5433123f,0.9475195f,-0.5422656f,0.9475195f,-0.5433726f,0.9487266f,-0.5432216f,0.7506537f,-0.5441722f,0.7494489f,-0.5433176f,0.7494489f,-0.5442682f,0.7506537f,-0.5431406f,0.9775719f,-0.5443286f,0.9763635f,-0.5431612f,0.9763635f,-0.5443492f,0.9775719f,-0.5080729f,0.4458667f,-0.5073434f,0.4446646f,-0.5072183f,0.4458667f,-0.5079477f,0.4446646f,-0.5082293f,1.0130816f,-0.5070413f,1.0118732f,-0.5070619f,1.0130816f,-0.5082499f,1.0118732f,-0.4371074f,0.077494f,-0.4366489f,0.0786937f,-0.4372532f,0.0786937f,-0.4367946f,0.077494f,-0.4364277f,1.0458481f,-0.4375347f,1.044641f,-0.4363673f,1.044641f,-0.4374743f,1.0458481f,-0.3360517f,1.053696f,-0.3370023f,1.0524912f,-0.3359556f,1.0524912f,-0.3369063f,1.053696f,-0.2126492f,1.0071326f,-0.2133786f,1.0083348f,-0.2135037f,1.0071326f,-0.2127743f,1.0083348f,0.4372532f,0.6889154f,0.4367946f,0.6877157f,0.4371074f,0.6877157f,0.4366489f,0.6889154f,0.3369063f,0.9510429f,0.3361768f,0.9498408f,0.3367811f,0.9498408f,0.3360517f,0.9510429f,0.2135037f,1.0962213f,0.2125531f,1.097426f,0.2126492f,1.0962213f,0.2135998f,1.097426f,0.0757368f,1.1263738f,0.0746298f,1.1251668f,0.0756764f,1.1251668f,0.0745694f,1.1263738f,0.2136601f,1.0504916f,0.2124722f,1.0517f,0.2124928f,1.0504916f,0.2136807f,1.0517f,0.3358747f,0.9291941f,0.3370627f,0.9304025f,0.3358953f,0.9304025f,0.3370833f,0.9291941f,0.4375347f,0.7934099f,0.4364277f,0.794617f,0.4363673f,0.7934099f,0.4374743f,0.794617f,0.5081689f,0.6657169f,0.5072183f,0.6669217f,0.5071222f,0.6657169f,0.5080729f,0.6669217f,0.5433176f,0.5542041f,0.5440471f,0.5554062f,0.5434428f,0.5554062f,0.5441722f,0.5542041f,0.543821f,0.4476641f,0.54415f,0.4476936f,0.5438373f,0.4476986f,0.5436723f,0.4465013f,0.5442765f,0.4464916f,0.5434428f,0.3200161f,0.5439013f,0.3212159f,0.5435885f,0.3212159f,0.5440471f,0.3200161f,0.5073434f,0.1922964f,0.507802f,0.1934962f,0.5074892f,0.1934962f,0.5079477f,0.1922964f,0.4367946f,0.0787494f,0.4372532f,0.0775497f,0.4371074f,0.0787494f,0.4366489f,0.0775497f,0.3363226f,-0.0152045f,0.3367811f,-0.0164043f,0.3366354f,-0.0152045f,0.3361768f,-0.0164043f,0.21292f,-0.0819628f,0.2133786f,-0.0831626f,0.2132329f,-0.0819628f,0.2127743f,-0.0831626f,0.0749967f,-0.1169761f,0.0754553f,-0.1181758f,0.0753095f,-0.1169761f,0.074851f,-0.1181758f,-0.0680482f,-0.1178582f,-0.0675896f,-0.1190579f,-0.0677354f,-0.1178582f,-0.0681939f,-0.1190579f,-0.1972694f,-0.0837703f,-0.1971044f,-0.0849676f,-0.1972531f,-0.0838048f,-0.1975822f,-0.0837753f,-0.1977086f,-0.0849773f,-0.3381014f,-0.0099169f,-0.3380967f,-0.0099542f,-0.3377886f,-0.0099217f,-0.3382656f,-0.0111142f,-0.3376614f,-0.0111235f,-0.4321903f,0.3430027f,-0.4329197f,0.3418006f,-0.4320652f,0.3418006f,-0.4327946f,0.3430027f,-0.5045406f,0.4405916f,-0.5052701f,0.4393895f,-0.5044155f,0.4393895f,-0.5051449f,0.4405916f,-0.5424868f,0.5496638f,-0.5432162f,0.5484617f,-0.5423616f,0.5484617f,-0.5430911f,0.5496638f,-0.5434428f,0.6627862f,-0.5441722f,0.6615841f,-0.5433176f,0.6615841f,-0.5440471f,0.6627862f,-0.5073434f,0.7722497f,-0.5080729f,0.7710476f,-0.5072183f,0.7710476f,-0.5079477f,0.7722497f,-0.4365237f,0.8693925f,-0.4372532f,0.8705946f,-0.4373783f,0.8693925f,-0.4366489f,0.8705946f,-0.3360517f,0.9499167f,-0.3367811f,0.9511188f,-0.3369063f,0.9499167f,-0.3361768f,0.9511188f,-0.5042591f,1.0011214f,-0.5053661f,0.9999144f,-0.5043195f,0.9999144f,-0.5054265f,1.0011214f,-0.5422656f,0.8372627f,-0.5432162f,0.836058f,-0.5423616f,0.836058f,-0.5433123f,0.8372627f,-0.5421846f,0.996086f,-0.5433726f,0.9948776f,-0.5422052f,0.9948776f,-0.5433932f,0.996086f,-0.5441722f,0.5553302f,-0.5434428f,0.5541281f,-0.5433176f,0.5553302f,-0.5440471f,0.5541281f,-0.5443286f,0.9951664f,-0.5431406f,0.993958f,-0.5431612f,0.9951664f,-0.5443492f,0.993958f,-0.5079477f,0.1934405f,-0.5074892f,0.1922407f,-0.5073434f,0.1934405f,-0.507802f,0.1922407f,-0.5081689f,0.9986063f,-0.5070619f,0.9973992f,-0.5071222f,0.9986063f,-0.5082293f,0.9973992f,-0.4365237f,0.9920448f,-0.4374743f,0.9908401f,-0.4364277f,0.9908401f,-0.4373783f,0.9920448f,0.3367811f,0.7828693f,0.3363226f,0.7816696f,0.3366354f,0.7816696f,0.3361768f,0.7828693f,0.2135037f,1.0082588f,0.2127743f,1.0070567f,0.2133786f,1.0070567f,0.2126492f,1.0082588f,0.0756764f,1.1204011f,0.0747258f,1.1191964f,0.0755804f,1.1191964f,0.0746298f,1.1204011f,-0.0673081f,1.126737f,-0.0684151f,1.1255299f,-0.0673684f,1.1255299f,-0.0684755f,1.126737f,0.0757574f,1.0566113f,0.0745694f,1.0554029f,0.0757368f,1.0554029f,0.0745488f,1.0566113f,0.2124722f,0.9198299f,0.2136601f,0.9210383f,0.2124928f,0.9210383f,0.2136807f,0.9198299f,0.3358953f,0.7547286f,0.3370023f,0.7559357f,0.3359556f,0.7559357f,0.3370627f,0.7547286f,0.4374743f,0.5904219f,0.4365237f,0.5916266f,0.4364277f,0.5904219f,0.4373783f,0.5916266f,0.5072183f,0.4447405f,0.5079477f,0.4459426f,0.5073434f,0.4459426f,0.5080729f,0.4447405f,0.4366489f,0.3475977f,0.4373783f,0.3463957f,0.4372532f,0.3475977f,0.4365237f,0.3463957f,0.3361768f,0.2670735f,0.3369063f,0.2658715f,0.3367811f,0.2670735f,0.3360517f,0.2658715f,0.2127743f,0.2098576f,0.2135037f,0.2086555f,0.2133786f,0.2098576f,0.2126492f,0.2086555f,0.074851f,0.1798491f,0.0755804f,0.178647f,0.0754553f,0.1798491f,0.0747258f,0.178647f,-0.0681939f,0.1790931f,-0.0674645f,0.177891f,-0.0675896f,0.1790931f,-0.0683191f,0.177891f,-0.2066121f,0.2076411f,-0.2058827f,0.206439f,-0.2060078f,0.2076411f,-0.2067373f,0.206439f,-0.3303663f,0.2635476f,-0.3310958f,0.2623455f,-0.3302412f,0.2623455f,-0.3309706f,0.2635476f,-0.4320652f,0.5881085f,-0.4330158f,0.5869038f,-0.4319691f,0.5869038f,-0.4329197f,0.5881085f,-0.5044155f,0.6628248f,-0.5053661f,0.66162f,-0.5043195f,0.66162f,-0.5052701f,0.6628248f,-0.5432162f,0.7463329f,-0.5422656f,0.7451282f,-0.5423616f,0.7463329f,-0.5433123f,0.7451282f,-0.5441722f,0.832942f,-0.5432216f,0.8317373f,-0.5433176f,0.832942f,-0.5442682f,0.8317373f,-0.5080729f,0.9167498f,-0.5071222f,0.915545f,-0.5072183f,0.9167498f,-0.5081689f,0.915545f,-0.4319087f,1.048f,-0.4330158f,1.046793f,-0.4319691f,1.046793f,-0.4330761f,1.048f,-0.5043195f,0.9207709f,-0.5052701f,0.9195661f,-0.5044155f,0.9195661f,-0.5053661f,0.9207709f,-0.5042385f,1.0139372f,-0.5054265f,1.0127288f,-0.5042591f,1.0127288f,-0.5054471f,1.0139372f,-0.5432162f,0.6684526f,-0.5424868f,0.6672506f,-0.5423616f,0.6684526f,-0.5430911f,0.6672506f,-0.5433726f,0.9766523f,-0.5421846f,0.9754439f,-0.5422052f,0.9766523f,-0.5433932f,0.9754439f,-0.5440471f,0.3211602f,-0.5435885f,0.3199604f,-0.5434428f,0.3211602f,-0.5439013f,0.3199604f,-0.5442682f,0.9460235f,-0.5431612f,0.9448164f,-0.5432216f,0.9460235f,-0.5443286f,0.9448164f,0.2133786f,0.8496277f,0.21292f,0.8484279f,0.2132329f,0.8484279f,0.2127743f,0.8496277f,0.0755804f,1.0382673f,0.074851f,1.0370651f,0.0754553f,1.0370651f,0.0747258f,1.0382673f,-0.0673684f,1.12098f,-0.0683191f,1.1197752f,-0.0674645f,1.1197752f,-0.0684151f,1.12098f,-0.2057263f,1.1130234f,-0.2068333f,1.1118164f,-0.2057866f,1.1118164f,-0.2068937f,1.1130234f,-0.0672875f,1.056735f,-0.0684755f,1.0555266f,-0.0673081f,1.0555266f,-0.0684961f,1.056735f,0.0757368f,0.916127f,0.0745488f,0.9149186f,0.0757574f,0.9149186f,0.0745694f,0.916127f,0.2124928f,0.7272439f,0.2135998f,0.728451f,0.2125531f,0.728451f,0.2136601f,0.7272439f,0.3359556f,0.5287707f,0.3369063f,0.5299755f,0.3360517f,0.5299755f,0.3370023f,0.5287707f,0.2125531f,0.4849649f,0.2135037f,0.4861697f,0.2126492f,0.4861697f,0.2135998f,0.4849649f,0.0755804f,0.4631945f,0.0746298f,0.4619897f,0.0756764f,0.4619897f,0.0747258f,0.4631945f,-0.0674645f,0.4626157f,-0.0684151f,0.4614109f,-0.0673684f,0.4614109f,-0.0683191f,0.4626157f,-0.2058827f,0.4844727f,-0.2068333f,0.4832679f,-0.2057866f,0.4832679f,-0.2067373f,0.4844727f,-0.3302412f,0.527276f,-0.3311918f,0.5260712f,-0.3301451f,0.5260712f,-0.3310958f,0.527276f,-0.4319691f,0.7924096f,-0.4330761f,0.7912026f,-0.4319087f,0.7912026f,-0.4330158f,0.7924096f,-0.5043195f,0.8392882f,-0.5054265f,0.8380812f,-0.5042591f,0.8380812f,-0.5053661f,0.8392882f,-0.5433123f,0.8916831f,-0.5422052f,0.890476f,-0.5422656f,0.8916831f,-0.5433726f,0.890476f,-0.3300848f,1.0861677f,-0.3311918f,1.0849607f,-0.3301451f,1.0849607f,-0.3312522f,1.0861677f,-0.4319691f,0.9954871f,-0.4329197f,0.9942824f,-0.4320652f,0.9942824f,-0.4330158f,0.9954871f,-0.4318882f,1.0299089f,-0.4330761f,1.0287005f,-0.4319087f,1.0287005f,-0.4330967f,1.0299089f,-0.5052701f,0.7775248f,-0.5045406f,0.7763228f,-0.5044155f,0.7775248f,-0.5051449f,0.7763228f,-0.5042591f,0.9588011f,-0.5054471f,0.9575927f,-0.5042385f,0.9575927f,-0.5054265f,0.9588011f,-0.5430911f,0.453149f,-0.5426325f,0.4519493f,-0.5424868f,0.453149f,-0.5429453f,0.4519493f,0.0754553f,0.8846409f,0.0749967f,0.8834412f,0.0753095f,0.8834412f,0.074851f,0.8846409f,-0.0674645f,1.0390233f,-0.0681939f,1.0378212f,-0.0675896f,1.0378212f,-0.0683191f,1.0390233f,-0.2057866f,1.099123f,-0.2067373f,1.0979182f,-0.2058827f,1.0979182f,-0.2068333f,1.099123f,-0.2057057f,1.0520627f,-0.2068937f,1.0508543f,-0.2057263f,1.0508543f,-0.2069142f,1.0520627f,-0.0673081f,0.9160033f,-0.0684961f,0.9147949f,-0.0672875f,0.9147949f,-0.0684755f,0.9160033f,0.0756764f,0.7140358f,0.0745694f,0.7128288f,0.0757368f,0.7128288f,0.0746298f,0.7140358f,-0.0673684f,0.7136727f,-0.0684755f,0.7124656f,-0.0673081f,0.7124656f,-0.0684151f,0.7136727f,-0.2057866f,0.7273862f,-0.2068937f,0.7261792f,-0.2057263f,0.7261792f,-0.2068333f,0.7273862f,-0.3301451f,0.7542419f,-0.3312522f,0.7530349f,-0.3300848f,0.7530349f,-0.3311918f,0.7542419f,-0.4319087f,0.9428294f,-0.4330967f,0.941621f,-0.4318882f,0.941621f,-0.4330761f,0.9428294f,-0.3301451f,1.0563197f,-0.3310958f,1.055115f,-0.3302412f,1.055115f,-0.3311918f,1.0563197f,-0.3300642f,1.0429128f,-0.3312522f,1.0417045f,-0.3300848f,1.0417045f,-0.3312727f,1.0429128f,-0.4329197f,0.8751137f,-0.4321903f,0.8739116f,-0.4320652f,0.8751137f,-0.4327946f,0.8739116f,-0.5051449f,0.5804122f,-0.5046864f,0.5792124f,-0.5045406f,0.5804122f,-0.5049992f,0.5792124f,-0.0675896f,0.885523f,-0.0680482f,0.8843233f,-0.0677354f,0.8843233f,-0.0681939f,0.885523f,-0.2067373f,1.0104753f,-0.2060078f,1.0092732f,-0.2058827f,1.0104753f,-0.2066121f,1.0092732f,-0.2057263f,0.9206756f,-0.2069142f,0.9194672f,-0.2057057f,0.9194672f,-0.2068937f,0.9206756f,-0.3300848f,0.9298254f,-0.3312727f,0.928617f,-0.3300642f,0.928617f,-0.3312522f,0.9298254f,-0.3310958f,0.9545688f,-0.3303663f,0.9533667f,-0.3302412f,0.9545688f,-0.3309706f,0.9533667f,-0.4327946f,0.6942768f,-0.432336f,0.6930771f,-0.4321903f,0.6942768f,-0.4326488f,0.6930771f,-0.2066121f,0.8522138f,-0.2061536f,0.8510141f,-0.2060078f,0.8522138f,-0.2064664f,0.8510141f,-0.3309706f,0.7869833f,-0.3305121f,0.7857836f,-0.3303663f,0.7869833f,-0.3308249f,0.7857836f,};
fbt = GLBuffers.newDirectFloatBuffer(texcoordArray);
gl.glTexCoordPointer(2, GL2.GL_FLOAT, 0, fbt);
gl.glEnableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
int[] indices = {
0,0,1,1,2,2,1,1,0,0,3,3,3,4,4,5,1,6,4,5,3,4,5,7,2,8,6,9,7,10,6,9,2,8,1,11,8,12,2,13,9,14,2,13,8,12,0,15,10,16,3,17,0,18,3,17,10,16,11,19,5,20,12,21,4,22,12,21,5,20,13,23,1,24,14,25,6,26,14,25,1,24,4,27,11,28,5,29,3,30,5,29,11,28,15,31,16,32,6,33,17,34,6,33,16,32,7,35,9,36,7,37,18,38,7,37,9,36,2,39,19,40,9,41,20,42,9,41,19,40,8,43,21,44,0,45,8,46,0,45,21,44,10,47,22,48,11,49,10,50,11,49,22,48,23,51,13,52,24,53,12,54,24,53,13,52,25,55,4,56,26,57,14,58,26,57,4,56,12,59,15,60,13,61,5,62,13,61,15,60,27,63,28,64,6,65,14,66,6,65,28,64,17,67,23,68,15,69,11,70,15,69,23,68,29,71,30,72,17,73,31,74,17,73,30,72,16,75,32,76,7,77,16,78,7,77,32,76,18,79,20,80,18,81,33,82,18,81,20,80,9,83,20,84,34,85,19,86,34,85,20,84,35,87,36,88,8,89,19,90,8,89,36,88,21,91,37,92,10,93,21,94,10,93,37,92,22,95,38,96,23,97,22,98,23,97,38,96,39,99,40,100,24,101,25,102,24,101,40,100,41,103,12,104,42,105,26,106,42,105,12,104,24,107,27,108,25,109,13,110,25,109,27,108,43,111,44,112,14,113,26,114,14,113,44,112,28,115,29,116,27,117,15,118,27,117,29,116,45,119,46,120,17,121,28,122,17,121,46,120,31,123,39,124,29,125,23,126,29,125,39,124,47,127,48,128,16,129,30,130,16,129,48,128,32,131,49,132,18,133,32,134,18,133,49,132,33,135,33,136,35,137,20,138,35,137,33,136,50,139,35,140,51,141,34,142,51,141,35,140,52,143,19,144,53,145,36,146,53,145,19,144,34,147,54,148,21,149,36,150,21,149,54,148,37,151,55,152,22,153,37,154,22,153,55,152,38,155,56,156,39,157,38,158,39,157,56,156,57,159,58,160,41,161,40,162,41,161,58,160,59,163,41,164,42,165,24,166,42,165,41,164,60,167,61,168,25,169,43,170,25,169,61,168,40,171,62,172,26,173,42,174,26,173,62,172,44,175,45,176,43,177,27,178,43,177,45,176,63,179,64,180,28,181,44,182,28,181,64,180,46,183,47,184,45,185,29,186,45,185,47,184,65,187,57,188,47,189,39,190,47,189,57,188,66,191,67,192,32,193,48,194,32,193,67,192,49,195,68,196,33,197,49,198,33,197,68,196,50,199,50,200,52,201,35,202,52,201,50,200,69,203,52,204,70,205,51,206,70,205,52,204,71,207,34,208,72,209,53,210,72,209,34,208,51,211,53,212,54,213,36,214,54,213,53,212,73,215,74,216,37,217,54,218,37,217,74,216,55,219,75,220,38,221,55,222,38,221,75,220,56,223,56,224,76,225,57,226,76,225,56,224,77,227,78,228,59,229,58,230,59,229,78,228,79,231,59,232,60,233,41,234,60,233,59,232,80,235,81,236,40,237,61,238,40,237,81,236,58,239,82,240,42,241,60,242,42,241,82,240,62,243,63,244,61,245,43,246,61,245,63,244,83,247,84,248,44,249,62,250,44,249,84,248,64,251,65,252,63,253,45,254,63,253,65,252,85,255,66,256,65,257,47,258,65,257,66,256,86,259,57,260,87,261,66,262,87,261,57,260,76,263,88,264,49,265,67,266,49,265,88,264,68,267,89,268,50,269,68,270,50,269,89,268,69,271,69,272,71,273,52,274,71,273,69,272,90,275,91,276,70,277,71,278,70,277,91,276,92,279,51,280,93,281,72,282,93,281,51,280,70,283,72,284,73,285,53,286,73,285,72,284,94,287,73,288,74,289,54,290,74,289,73,288,95,291,96,292,55,293,74,294,55,293,96,292,75,295,56,296,97,297,77,298,97,297,56,296,75,299,77,300,98,301,76,302,98,301,77,300,99,303,100,304,79,305,78,306,79,305,100,304,101,307,79,308,80,309,59,310,80,309,79,308,102,311,103,312,58,313,81,314,58,313,103,312,78,315,104,316,60,317,80,318,60,317,104,316,82,319,83,320,81,321,61,322,81,321,83,320,105,323,106,324,62,325,82,326,62,325,106,324,84,327,85,328,83,329,63,330,83,329,85,328,107,331,86,332,85,333,65,334,85,333,86,332,108,335,66,336,109,337,86,338,109,337,66,336,87,339,76,340,110,341,87,342,110,341,76,340,98,343,111,344,68,345,88,346,68,345,111,344,89,347,112,348,69,349,89,350,69,349,112,348,90,351,113,352,71,353,90,354,71,353,113,352,91,355,114,356,92,357,91,358,92,357,114,356,115,359,92,360,93,361,70,362,93,361,92,360,116,363,93,364,94,365,72,366,94,365,93,364,117,367,94,368,95,369,73,370,95,369,94,368,118,371,95,372,96,373,74,374,96,373,95,372,119,375,75,376,120,377,97,378,120,377,75,376,96,379,77,380,121,381,99,382,121,381,77,380,97,383,122,384,123,385,124,386,123,385,122,384,125,387,123,385,125,387,126,388,126,388,125,387,127,389,126,388,127,389,128,390,128,390,127,389,129,391,128,390,129,391,130,392,130,392,129,391,110,393,130,392,110,393,131,394,131,394,110,393,98,395,131,394,98,395,121,396,121,396,98,395,99,397,100,398,132,399,101,400,132,399,100,398,133,401,101,402,102,403,79,404,102,403,101,402,134,405,135,406,78,407,103,408,78,407,135,406,100,409,136,410,80,411,102,412,80,411,136,410,104,413,105,414,103,415,81,416,103,415,105,414,137,417,138,418,82,419,104,420,82,419,138,418,106,421,107,422,105,423,83,424,105,423,107,422,139,425,108,426,107,427,85,428,107,427,108,426,140,429,86,430,141,431,108,432,141,431,86,430,109,433,87,434,129,435,109,436,129,435,87,434,110,437,142,438,89,439,111,440,89,439,142,438,112,441,113,442,112,443,143,444,112,443,113,442,90,445,144,446,91,447,113,448,91,447,144,446,114,449,145,450,115,451,114,452,115,451,145,450,146,453,115,454,116,455,92,456,116,455,115,454,147,457,116,458,117,459,93,460,117,459,116,458,148,461,117,462,118,463,94,464,118,463,117,462,149,465,118,466,119,467,95,468,119,467,118,466,150,469,96,470,151,471,120,472,151,471,96,470,119,473,97,474,152,475,121,476,152,475,97,474,153,477,153,477,97,474,120,478,121,396,154,479,131,394,154,479,121,396,155,480,155,480,121,396,156,481,156,481,121,396,152,482,156,481,152,482,157,483,157,483,152,482,158,484,157,483,158,484,159,485,159,485,158,484,160,486,159,485,160,486,161,487,161,487,160,486,162,488,130,489,163,490,164,491,163,490,130,489,131,492,128,493,164,494,165,495,164,494,128,493,130,496,126,497,165,498,166,499,165,498,126,497,128,500,123,501,166,502,167,503,166,502,123,501,126,504,124,505,167,506,168,507,167,506,124,505,123,508,169,509,124,510,168,511,124,510,169,509,122,512,170,513,122,514,169,515,122,514,170,513,125,516,141,517,125,518,170,519,125,518,141,517,127,520,109,521,127,522,141,523,127,522,109,521,129,524,133,525,171,526,132,527,171,526,133,525,172,528,101,529,173,530,134,531,173,530,101,529,132,532,135,533,133,534,100,535,133,534,135,533,174,536,134,537,136,538,102,539,136,538,134,537,175,540,176,541,103,542,137,543,103,542,176,541,135,544,177,545,104,546,136,547,104,546,177,545,138,548,139,549,137,550,105,551,137,550,139,549,178,552,140,553,139,554,107,555,139,554,140,553,179,556,108,557,170,558,140,559,170,558,108,557,141,560,143,561,142,562,180,563,142,562,143,561,112,564,144,565,143,566,181,567,143,566,144,565,113,568,182,569,114,570,144,571,114,570,182,569,145,572,183,573,145,574,184,575,145,574,183,573,146,576,146,577,147,578,115,579,147,578,146,577,185,580,116,581,186,582,148,583,186,582,116,581,147,584,148,585,149,586,117,587,149,586,148,585,187,588,149,589,150,590,118,591,150,590,149,589,188,592,119,593,189,594,151,595,189,594,119,593,150,596,153,597,158,598,152,599,158,598,153,597,120,600,158,598,120,600,151,601,151,602,160,603,158,604,160,603,151,602,189,605,189,606,162,607,160,608,162,607,189,606,190,609,162,610,191,611,161,612,191,611,162,610,190,613,161,614,192,615,159,616,192,615,161,614,191,617,159,618,193,619,157,620,193,619,159,618,192,621,157,622,194,623,156,624,194,623,157,622,193,625,156,626,195,627,155,628,195,627,156,626,194,629,154,630,196,631,197,632,196,631,154,630,155,633,196,631,155,633,195,634,154,635,197,636,131,637,131,637,196,638,163,639,196,638,131,637,197,636,164,640,198,641,199,642,198,641,164,640,163,643,165,644,199,645,200,646,199,645,165,644,164,647,166,648,200,649,201,650,200,649,166,648,165,651,167,652,201,653,202,654,201,653,167,652,166,655,168,656,202,657,203,658,202,657,168,656,167,659,179,660,168,661,203,662,168,661,179,660,169,663,140,664,169,665,179,666,169,665,140,664,170,667,172,668,204,669,171,670,204,669,172,668,205,671,132,672,206,673,173,674,206,673,132,672,171,675,174,676,172,677,133,678,172,677,174,676,207,679,173,680,175,681,134,682,175,681,173,680,208,683,209,684,135,685,176,686,135,685,209,684,174,687,175,688,177,689,136,690,177,689,175,688,210,691,211,692,137,693,178,694,137,693,211,692,176,695,179,696,178,697,139,698,178,697,179,696,203,699,181,700,180,701,212,702,180,701,181,700,143,703,182,704,181,705,213,706,181,705,182,704,144,707,184,708,182,709,214,710,182,709,184,708,145,711,215,712,184,713,216,714,184,713,215,712,183,715,217,716,146,717,183,718,146,717,217,716,185,719,147,720,218,721,186,722,218,721,147,720,185,723,148,724,219,725,187,726,219,725,148,724,186,727,187,728,188,729,149,730,188,729,187,728,220,731,150,732,190,733,189,734,190,733,150,732,188,735,190,736,220,737,191,738,220,737,190,736,188,739,191,740,221,741,192,742,221,741,191,740,220,743,192,744,222,745,193,746,222,745,192,744,221,747,193,748,223,749,194,750,223,749,193,748,222,751,194,752,224,753,195,754,224,753,194,752,223,755,195,756,225,757,196,758,225,757,195,756,224,759,163,760,225,761,198,762,225,761,163,760,196,763,199,764,226,765,227,766,226,765,199,764,198,767,200,768,227,769,228,770,227,769,200,768,199,771,200,772,229,773,201,774,229,773,200,772,228,775,201,776,211,777,202,778,211,777,201,776,229,779,202,780,178,781,203,782,178,781,202,780,211,783,205,784,230,785,204,786,230,785,205,784,231,787,171,788,232,789,206,790,232,789,171,788,204,791,207,792,205,793,172,794,205,793,207,792,233,795,206,796,208,797,173,798,208,797,206,796,234,799,235,800,174,801,209,802,174,801,235,800,207,803,208,804,210,805,175,806,210,805,208,804,236,807,229,808,176,809,211,810,176,809,229,808,209,811,213,812,212,813,237,814,212,813,213,812,181,815,214,816,213,817,238,818,213,817,214,816,182,819,216,820,214,821,239,822,214,821,216,820,184,823,240,824,216,825,241,826,216,825,240,824,215,827,242,828,183,829,215,830,183,829,242,828,217,831,243,832,185,833,217,834,185,833,243,832,218,835,186,836,244,837,219,838,244,837,186,836,218,839,187,840,221,841,220,842,221,841,187,840,219,843,219,844,222,845,221,846,222,845,219,844,244,847,223,848,244,849,245,850,244,849,223,848,222,851,224,852,245,853,246,854,245,853,224,852,223,855,225,856,246,857,247,858,246,857,225,856,224,859,198,860,247,861,226,862,247,861,198,860,225,863,227,864,248,865,249,866,248,865,227,864,226,867,228,868,249,869,235,870,249,869,228,868,227,871,228,872,209,873,229,874,209,873,228,872,235,875,231,876,241,877,230,878,241,877,231,876,240,879,204,880,250,881,232,882,250,881,204,880,230,883,233,884,231,885,205,886,231,885,233,884,251,887,232,888,234,889,206,890,234,889,232,888,252,891,235,892,233,893,207,894,233,893,235,892,249,895,234,896,236,897,208,898,236,897,234,896,253,899,238,900,237,901,254,902,237,901,238,900,213,903,239,904,238,905,255,906,238,905,239,904,214,907,241,908,239,909,256,910,239,909,241,908,216,911,257,912,215,913,240,914,215,913,257,912,242,915,258,916,217,917,242,918,217,917,258,916,243,919,245,920,218,921,243,922,218,921,245,920,244,923,246,924,243,925,258,926,243,925,246,924,245,927,247,928,258,929,259,930,258,929,247,928,246,931,226,932,259,933,248,934,259,933,226,932,247,935,249,936,251,937,233,938,251,937,249,936,248,939,230,940,256,941,250,942,256,941,230,940,241,943,251,944,240,945,231,946,240,945,251,944,257,947,250,948,252,949,232,950,252,949,250,948,260,951,252,952,253,953,234,954,253,953,252,952,261,955,255,956,254,957,262,958,254,957,255,956,238,959,239,960,263,961,256,962,263,961,239,960,255,963,259,964,242,965,257,966,242,965,259,964,258,967,248,968,257,969,251,970,257,969,248,968,259,971,256,972,260,973,250,974,260,973,256,972,263,975,260,976,261,977,252,978,261,977,260,976,264,979,255,980,265,981,263,982,265,981,255,980,262,983,263,984,264,985,260,986,264,985,263,984,265,987,};
IntBuffer fbi = GLBuffers.newDirectIntBuffer(indices, 0);
gl.glDisableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
gl.glBegin(GL2.GL_TRIANGLES);
	for (int i=0; i<indices.length-1; i+=2) {
		int vertexIndex = indices[i];
		int textureIndex = indices[i+1];
		try {
		gl.glTexCoord2f(texcoordArray[textureIndex*2], -(texcoordArray[textureIndex*2+1]));
		} catch (ArrayIndexOutOfBoundsException e) {
			System.out.println(e);
		}
		gl.glArrayElement(vertexIndex);
	}
gl.glEnd();
gl.glDisable(GL2.GL_TEXTURE_2D);
gl.glDisable(GL2.GL_BLEND);
}
gl.glDisableClientState(GL2.GL_VERTEX_ARRAY);
gl.glDisableClientState(GL2.GL_NORMAL_ARRAY);
gl.glDisableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
}
private void ID153(GL2 gl){
float[] positionsArray = {
14.572059f,25.751963f,53.899353f,14.567724f,25.71904f,53.899353f,14.567724f,25.735786f,53.899353f,14.572059f,25.702864f,53.899353f,14.580432f,25.766466f,53.899353f,14.580432f,25.68836f,53.899353f,14.592274f,25.778309f,53.899353f,14.592274f,25.67652f,53.899353f,14.606776f,25.786682f,53.899353f,14.606776f,25.668146f,53.899353f,14.622952f,25.791016f,53.899353f,14.622952f,25.66381f,53.899353f,14.6397f,25.791016f,53.899353f,14.6397f,25.66381f,53.899353f,14.655876f,25.786682f,53.899353f,14.655876f,25.668146f,53.899353f,14.670379f,25.778309f,53.899353f,14.670379f,25.67652f,53.899353f,14.68222f,25.766466f,53.899353f,14.68222f,25.68836f,53.899353f,14.690595f,25.751963f,53.899353f,14.690595f,25.702864f,53.899353f,14.694929f,25.735786f,53.899353f,14.694929f,25.71904f,53.899353f,};
FloatBuffer fbv = GLBuffers.newDirectFloatBuffer(positionsArray, 0);
gl.glVertexPointer(3, GL2.GL_FLOAT, 0, fbv);
gl.glEnableClientState(GL2.GL_VERTEX_ARRAY);
FloatBuffer fbn = null;
float[] normalsArray = {
-0.6783626f,0.280987f,-0.6788744f,-0.7279728f,-0.0958394f,-0.6788744f,-0.7279728f,0.0958394f,-0.6788744f,-0.6783626f,-0.280987f,-0.6788744f,-0.5825232f,0.4469858f,-0.6788744f,-0.5825232f,-0.4469858f,-0.6788744f,-0.4469858f,0.5825232f,-0.6788744f,-0.4469858f,-0.5825232f,-0.6788744f,-0.280987f,0.6783626f,-0.6788744f,-0.280987f,-0.6783626f,-0.6788744f,-0.0958394f,0.7279728f,-0.6788744f,-0.0958394f,-0.7279728f,-0.6788744f,0.0958394f,0.7279728f,-0.6788744f,0.0958394f,-0.7279728f,-0.6788744f,0.280987f,0.6783626f,-0.6788744f,0.280987f,-0.6783626f,-0.6788744f,0.4469858f,0.5825232f,-0.6788744f,0.4469858f,-0.5825232f,-0.6788744f,0.5825232f,0.4469858f,-0.6788744f,0.5825232f,-0.4469858f,-0.6788744f,0.6783626f,0.280987f,-0.6788744f,0.6783626f,-0.280987f,-0.6788744f,0.7279728f,0.0958394f,-0.6788744f,0.7279728f,-0.0958394f,-0.6788744f,};
fbn = GLBuffers.newDirectFloatBuffer(normalsArray, 0);
gl.glNormalPointer(GL2.GL_FLOAT, 0, fbn);
gl.glEnableClientState(GL2.GL_NORMAL_ARRAY);
FloatBuffer fbt = null;
float[] texcoordArray = null;
{
gl.glColor4d(1.0, 1.0, 1.0, 1.0);
int[] indices = {
0,1,2,1,0,3,3,0,4,3,4,5,5,4,6,5,6,7,7,6,8,7,8,9,9,8,10,9,10,11,11,10,12,11,12,13,13,12,14,13,14,15,15,14,16,15,16,17,17,16,18,17,18,19,19,18,20,19,20,21,21,20,22,21,22,23,};
IntBuffer fbi = GLBuffers.newDirectIntBuffer(indices, 0);
gl.glDrawElements(GL2.GL_TRIANGLES, 66, GL2.GL_UNSIGNED_INT, fbi);
gl.glDisable(GL2.GL_TEXTURE_2D);
gl.glDisable(GL2.GL_BLEND);
}
gl.glDisableClientState(GL2.GL_VERTEX_ARRAY);
gl.glDisableClientState(GL2.GL_NORMAL_ARRAY);
gl.glDisableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
}
private void ID159(GL2 gl){
float[] positionsArray = {
14.873524f,25.291168f,53.74755f,14.752933f,25.241219f,53.682846f,14.873524f,25.291168f,53.682846f,14.752933f,25.241219f,53.74755f,14.977077f,25.370628f,53.74755f,14.977077f,25.370628f,53.682846f,14.14056f,25.594772f,53.74755f,14.14056f,25.853592f,53.74755f,14.123524f,25.724182f,53.74755f,14.190511f,25.474182f,53.74755f,14.190511f,25.974182f,53.74755f,14.26997f,25.370628f,53.74755f,14.26997f,26.077734f,53.74755f,14.373524f,25.291168f,53.74755f,14.373524f,26.157194f,53.74755f,14.494114f,25.241219f,53.74755f,14.494114f,26.207144f,53.74755f,14.623524f,25.224182f,53.74755f,14.623524f,26.224182f,53.74755f,14.752933f,26.207144f,53.74755f,14.873524f,26.157194f,53.74755f,14.977077f,26.077734f,53.74755f,15.056537f,25.474182f,53.74755f,15.056537f,25.974182f,53.74755f,15.106486f,25.594772f,53.74755f,15.106486f,25.853592f,53.74755f,15.123524f,25.724182f,53.74755f,14.623524f,25.224182f,53.682846f,15.056537f,25.474182f,53.682846f,15.106486f,25.594772f,53.682846f,15.123524f,25.724182f,53.682846f,15.106486f,25.853592f,53.682846f,15.056537f,25.974182f,53.682846f,14.977077f,26.077734f,53.682846f,14.873524f,26.157194f,53.682846f,14.752933f,26.207144f,53.682846f,14.623524f,26.224182f,53.682846f,14.494114f,26.207144f,53.682846f,14.373524f,26.157194f,53.682846f,14.26997f,26.077734f,53.682846f,14.190511f,25.974182f,53.682846f,14.14056f,25.853592f,53.682846f,14.123524f,25.724182f,53.682846f,14.14056f,25.594772f,53.682846f,14.190511f,25.474182f,53.682846f,14.26997f,25.370628f,53.682846f,14.373524f,25.291168f,53.682846f,14.494114f,25.241219f,53.682846f,};
FloatBuffer fbv = GLBuffers.newDirectFloatBuffer(positionsArray, 0);
gl.glVertexPointer(3, GL2.GL_FLOAT, 0, fbv);
gl.glEnableClientState(GL2.GL_VERTEX_ARRAY);
FloatBuffer fbn = null;
float[] normalsArray = {
0.3671272f,-0.635883f,0.6788744f,0.1747361f,-0.652124f,0.7377002f,0.3375642f,-0.5846784f,0.7377002f,0.190039f,-0.7092353f,0.6788744f,0.5191963f,-0.5191963f,0.6788744f,0.4773879f,-0.4773879f,0.7377002f,-0.7092353f,-0.190039f,0.6788744f,-0.7092353f,0.190039f,0.6788744f,-0.7342544f,0.0f,0.6788744f,-0.635883f,-0.3671272f,0.6788744f,-0.635883f,0.3671272f,0.6788744f,-0.5191963f,-0.5191963f,0.6788744f,-0.5191963f,0.5191963f,0.6788744f,-0.3671272f,-0.635883f,0.6788744f,-0.3671272f,0.635883f,0.6788744f,-0.190039f,-0.7092353f,0.6788744f,-0.190039f,0.7092353f,0.6788744f,-0.0f,-0.7342544f,0.6788744f,-0.0f,0.7342544f,0.6788744f,0.190039f,0.7092353f,0.6788744f,0.3671272f,0.635883f,0.6788744f,0.5191963f,0.5191963f,0.6788744f,0.635883f,-0.3671272f,0.6788744f,0.635883f,0.3671272f,0.6788744f,0.7092353f,-0.190039f,0.6788744f,0.7092353f,0.190039f,0.6788744f,0.7342544f,0.0f,0.6788744f,-0.0f,-0.6751284f,0.7377002f,0.5846784f,-0.3375642f,0.7377002f,0.652124f,-0.1747361f,0.7377002f,0.6751284f,0.0f,0.7377002f,0.652124f,0.1747361f,0.7377002f,0.5846784f,0.3375642f,0.7377002f,0.4773879f,0.4773879f,0.7377002f,0.3375642f,0.5846784f,0.7377002f,0.1747361f,0.652124f,0.7377002f,-0.0f,0.6751284f,0.7377002f,-0.1747361f,0.652124f,0.7377002f,-0.3375642f,0.5846784f,0.7377002f,-0.4773879f,0.4773879f,0.7377002f,-0.5846784f,0.3375642f,0.7377002f,-0.652124f,0.1747361f,0.7377002f,-0.6751284f,0.0f,0.7377002f,-0.652124f,-0.1747361f,0.7377002f,-0.5846784f,-0.3375642f,0.7377002f,-0.4773879f,-0.4773879f,0.7377002f,-0.3375642f,-0.5846784f,0.7377002f,-0.1747361f,-0.652124f,0.7377002f,};
fbn = GLBuffers.newDirectFloatBuffer(normalsArray, 0);
gl.glNormalPointer(GL2.GL_FLOAT, 0, fbn);
gl.glEnableClientState(GL2.GL_NORMAL_ARRAY);
FloatBuffer fbt = null;
float[] texcoordArray = null;
{
gl.glColor4d(0.1372549, 0.1372549, 0.1372549, 1.0);
int[] indices = {
0,1,2,1,0,3,4,2,5,2,4,0,6,7,8,7,6,9,7,9,10,10,9,11,10,11,12,12,11,13,12,13,14,14,13,15,14,15,16,16,15,17,16,17,18,18,17,3,18,3,19,19,3,0,19,0,20,20,0,4,20,4,21,21,4,22,21,22,23,23,22,24,23,24,25,25,24,26,3,27,1,27,3,17,28,4,5,4,28,22,29,22,28,22,29,24,30,24,29,24,30,26,31,26,30,26,31,25,32,25,31,25,32,23,33,23,32,23,33,21,20,33,34,33,20,21,19,34,35,34,19,20,18,35,36,35,18,19,16,36,37,36,16,18,14,37,38,37,14,16,12,38,39,38,12,14,12,40,10,40,12,39,10,41,7,41,10,40,7,42,8,42,7,41,8,43,6,43,8,42,6,44,9,44,6,43,9,45,11,45,9,44,13,45,46,45,13,11,15,46,47,46,15,13,17,47,27,47,17,15,};
IntBuffer fbi = GLBuffers.newDirectIntBuffer(indices, 0);
gl.glDrawElements(GL2.GL_TRIANGLES, 210, GL2.GL_UNSIGNED_INT, fbi);
gl.glDisable(GL2.GL_TEXTURE_2D);
gl.glDisable(GL2.GL_BLEND);
}
gl.glDisableClientState(GL2.GL_VERTEX_ARRAY);
gl.glDisableClientState(GL2.GL_NORMAL_ARRAY);
gl.glDisableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
}
private void ID165(GL2 gl){
float[] positionsArray = {
14.670379f,25.67652f,53.924328f,14.655876f,25.668146f,53.899353f,14.670379f,25.67652f,53.899353f,14.655876f,25.668146f,53.924328f,14.670379f,25.67652f,54.174328f,14.655876f,25.668146f,54.174328f,14.68222f,25.68836f,53.899353f,14.68222f,25.68836f,54.174328f,14.580432f,25.68836f,54.174328f,14.690595f,25.702864f,54.174328f,14.572059f,25.702864f,54.174328f,14.592274f,25.67652f,54.174328f,14.606776f,25.668146f,54.174328f,14.622952f,25.66381f,54.174328f,14.631327f,25.66381f,54.174328f,14.6397f,25.66381f,54.174328f,14.6397f,25.66381f,53.899353f,14.690595f,25.702864f,53.899353f,14.580432f,25.68836f,53.899353f,14.572059f,25.702864f,53.899353f,14.592274f,25.67652f,53.899353f,14.606776f,25.668146f,53.899353f,14.622952f,25.66381f,53.899353f,14.694929f,25.71904f,53.899353f,14.694929f,25.71904f,54.174328f,14.567724f,25.71904f,54.174328f,14.567724f,25.71904f,53.899353f,14.694929f,25.735786f,53.899353f,14.694929f,25.735786f,54.174328f,14.567724f,25.735786f,54.174328f,14.567724f,25.735786f,53.899353f,14.690595f,25.751963f,53.899353f,14.690595f,25.751963f,54.174328f,14.572059f,25.751963f,54.174328f,14.572059f,25.751963f,53.899353f,14.68222f,25.766466f,53.899353f,14.68222f,25.766466f,54.174328f,14.580432f,25.766466f,54.174328f,14.580432f,25.766466f,53.899353f,14.670379f,25.778309f,54.174328f,14.670379f,25.778309f,53.899353f,14.592274f,25.778309f,54.174328f,14.592274f,25.778309f,53.899353f,14.655876f,25.786682f,54.174328f,14.655876f,25.786682f,53.899353f,14.606776f,25.786682f,53.899353f,14.606776f,25.786682f,53.924328f,14.606776f,25.786682f,54.174328f,14.6397f,25.791016f,54.174328f,14.6397f,25.791016f,53.899353f,14.622952f,25.791016f,53.899353f,14.622952f,25.791016f,53.924328f,14.622952f,25.791016f,54.174328f,14.631327f,25.791016f,54.174328f,};
FloatBuffer fbv = GLBuffers.newDirectFloatBuffer(positionsArray, 0);
gl.glVertexPointer(3, GL2.GL_FLOAT, 0, fbv);
gl.glEnableClientState(GL2.GL_VERTEX_ARRAY);
FloatBuffer fbn = null;
float[] normalsArray = {
0.6087614f,-0.7933533f,-0.0f,0.280987f,-0.6783626f,-0.6788744f,0.4469858f,-0.5825232f,-0.6788744f,0.3826834f,-0.9238795f,-0.0f,0.4469858f,-0.5825232f,0.6788744f,0.280987f,-0.6783626f,0.6788744f,0.5825232f,-0.4469858f,-0.6788744f,0.5825232f,-0.4469858f,0.6788744f,-0.5825232f,-0.4469858f,0.6788744f,0.8241393f,-0.5118421f,0.2425122f,-0.8241393f,-0.5118421f,0.2425122f,-0.4469858f,-0.5825232f,0.6788744f,-0.280987f,-0.6783626f,0.6788744f,-0.0958394f,-0.7279728f,0.6788744f,0.0f,-0.7071068f,0.7071068f,0.0958394f,-0.7279728f,0.6788744f,0.0958394f,-0.7279728f,-0.6788744f,0.6783626f,-0.280987f,-0.6788744f,-0.5825232f,-0.4469858f,-0.6788744f,-0.6783626f,-0.280987f,-0.6788744f,-0.4469858f,-0.5825232f,-0.6788744f,-0.280987f,-0.6783626f,-0.6788744f,-0.0958394f,-0.7279728f,-0.6788744f,0.7279728f,-0.0958394f,-0.6788744f,0.7279728f,-0.0958394f,0.6788744f,-0.7279728f,-0.0958394f,0.6788744f,-0.7279728f,-0.0958394f,-0.6788744f,0.7279728f,0.0958394f,-0.6788744f,0.7279728f,0.0958394f,0.6788744f,-0.7279728f,0.0958394f,0.6788744f,-0.7279728f,0.0958394f,-0.6788744f,0.6783626f,0.280987f,-0.6788744f,0.6783626f,0.280987f,0.6788744f,-0.6783626f,0.280987f,0.6788744f,-0.6783626f,0.280987f,-0.6788744f,0.5825232f,0.4469858f,-0.6788744f,0.5825232f,0.4469858f,0.6788744f,-0.5825232f,0.4469858f,0.6788744f,-0.5825232f,0.4469858f,-0.6788744f,0.4469858f,0.5825232f,0.6788744f,0.4469858f,0.5825232f,-0.6788744f,-0.4469858f,0.5825232f,0.6788744f,-0.4469858f,0.5825232f,-0.6788744f,0.280987f,0.6783626f,0.6788744f,0.280987f,0.6783626f,-0.6788744f,-0.280987f,0.6783626f,-0.6788744f,-0.3826834f,0.9238795f,-0.0f,-0.280987f,0.6783626f,0.6788744f,0.0958394f,0.7279728f,0.6788744f,0.0958394f,0.7279728f,-0.6788744f,-0.0958394f,0.7279728f,-0.6788744f,-0.1305262f,0.9914449f,0.0f,-0.0958394f,0.7279728f,0.6788744f,0.0f,0.7071068f,0.7071068f,};
fbn = GLBuffers.newDirectFloatBuffer(normalsArray, 0);
gl.glNormalPointer(GL2.GL_FLOAT, 0, fbn);
gl.glEnableClientState(GL2.GL_NORMAL_ARRAY);
FloatBuffer fbt = null;
float[] texcoordArray = null;
{
gl.glColor4d(0.1372549, 0.1372549, 0.1372549, 1.0);
int[] indices = {
0,1,2,1,0,3,3,0,4,3,4,5,6,0,2,0,6,4,4,6,7,8,9,10,9,8,11,9,11,12,9,12,13,9,13,14,9,14,15,9,15,5,9,5,4,9,4,7,3,16,1,16,3,15,15,3,5,17,7,6,7,17,9,10,18,8,18,10,19,8,20,11,20,8,18,12,20,21,20,12,11,13,21,22,21,13,12,15,22,16,22,15,13,13,15,14,23,9,17,9,23,24,25,19,10,19,25,26,27,24,23,24,27,28,29,26,25,26,29,30,31,28,27,28,31,32,33,30,29,30,33,34,35,32,31,32,35,36,37,34,33,34,37,38,39,35,40,35,39,36,41,38,37,38,41,42,43,40,44,40,43,39,41,45,42,45,41,46,46,41,47,48,44,49,44,48,43,46,50,45,50,46,51,51,46,47,51,47,52,51,49,50,49,51,48,48,51,52,48,52,53,};
IntBuffer fbi = GLBuffers.newDirectIntBuffer(indices, 0);
gl.glDrawElements(GL2.GL_TRIANGLES, 201, GL2.GL_UNSIGNED_INT, fbi);
gl.glDisable(GL2.GL_TEXTURE_2D);
gl.glDisable(GL2.GL_BLEND);
}
gl.glDisableClientState(GL2.GL_VERTEX_ARRAY);
gl.glDisableClientState(GL2.GL_NORMAL_ARRAY);
gl.glDisableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
}
private void ID171(GL2 gl){
float[] positionsArray = {
14.690595f,25.702864f,54.215466f,14.572059f,25.702864f,54.174328f,14.690595f,25.702864f,54.174328f,14.572059f,25.702864f,54.215466f,14.690595f,25.751963f,54.174328f,14.690595f,25.751963f,54.215466f,14.690595f,25.751963f,54.215466f,14.572059f,25.702864f,54.215466f,14.572059f,25.751963f,54.215466f,14.690595f,25.702864f,54.215466f,14.572059f,25.751963f,54.215466f,14.572059f,25.751963f,54.174328f,};
FloatBuffer fbv = GLBuffers.newDirectFloatBuffer(positionsArray, 0);
gl.glVertexPointer(3, GL2.GL_FLOAT, 0, fbv);
gl.glEnableClientState(GL2.GL_VERTEX_ARRAY);
FloatBuffer fbn = null;
float[] normalsArray = {
0.3015113f,-0.3015113f,0.904534f,-0.8241393f,-0.5118421f,0.2425122f,0.8241393f,-0.5118421f,0.2425122f,-0.3015113f,-0.3015113f,0.904534f,0.3015113f,0.3015113f,0.904534f,0.3015113f,0.3015113f,0.904534f,-0.3015113f,-0.3015113f,-0.904534f,0.3015113f,0.3015113f,-0.904534f,0.3015113f,-0.3015113f,-0.904534f,-0.3015113f,0.3015113f,-0.904534f,-0.3015113f,0.3015113f,0.904534f,-0.3015113f,0.3015113f,0.904534f,};
fbn = GLBuffers.newDirectFloatBuffer(normalsArray, 0);
gl.glNormalPointer(GL2.GL_FLOAT, 0, fbn);
gl.glEnableClientState(GL2.GL_NORMAL_ARRAY);
FloatBuffer fbt = null;
float[] texcoordArray = null;
{
gl.glEnable(GL2.GL_TEXTURE_2D);
gl.glEnable(GL2.GL_BLEND);
gl.glBlendFunc(GL2.GL_SRC_ALPHA, GL2.GL_ONE_MINUS_SRC_ALPHA);
ID143.bind(gl);
texcoordArray = new float[] {
0.272048f,1.00399f,0.2698529f,1.0032283f,0.272048f,1.0032283f,0.2698529f,1.00399f,0.4768882f,1.0032283f,0.475979f,1.00399f,0.475979f,1.0032283f,0.4768882f,1.00399f,-0.272048f,0.475979f,-0.272048f,0.4768882f,-0.2698529f,0.475979f,-0.2698529f,0.4768882f,-0.4768882f,1.00399f,-0.475979f,1.0032283f,-0.475979f,1.00399f,-0.4768882f,1.0032283f,-0.2698529f,1.00399f,-0.272048f,1.0032283f,-0.2698529f,1.0032283f,-0.272048f,1.00399f,};
fbt = GLBuffers.newDirectFloatBuffer(texcoordArray);
gl.glTexCoordPointer(2, GL2.GL_FLOAT, 0, fbt);
gl.glEnableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
int[] indices = {
0,0,1,1,2,2,1,1,0,0,3,3,4,4,0,5,2,6,0,5,4,4,5,7,0,8,5,9,3,10,10,11,3,10,5,9,10,12,1,13,3,14,1,13,10,12,11,15,10,16,4,17,11,18,4,17,10,16,5,19,};
IntBuffer fbi = GLBuffers.newDirectIntBuffer(indices, 0);
gl.glDisableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
gl.glBegin(GL2.GL_TRIANGLES);
	for (int i=0; i<indices.length-1; i+=2) {
		int vertexIndex = indices[i];
		int textureIndex = indices[i+1];
		try {
		gl.glTexCoord2f(texcoordArray[textureIndex*2], -(texcoordArray[textureIndex*2+1]));
		} catch (ArrayIndexOutOfBoundsException e) {
			System.out.println(e);
		}
		gl.glArrayElement(vertexIndex);
	}
gl.glEnd();
gl.glDisable(GL2.GL_TEXTURE_2D);
gl.glDisable(GL2.GL_BLEND);
}
{
gl.glColor4d(1.0, 1.0, 1.0, 1.0);
int[] indices = {
6,7,8,7,6,9,};
IntBuffer fbi = GLBuffers.newDirectIntBuffer(indices, 0);
gl.glDrawElements(GL2.GL_TRIANGLES, 6, GL2.GL_UNSIGNED_INT, fbi);
gl.glDisable(GL2.GL_TEXTURE_2D);
gl.glDisable(GL2.GL_BLEND);
}
gl.glDisableClientState(GL2.GL_VERTEX_ARRAY);
gl.glDisableClientState(GL2.GL_NORMAL_ARRAY);
gl.glDisableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
}
private void ID179(GL2 gl){
float[] positionsArray = {
14.694929f,25.71904f,54.174328f,14.690595f,25.751963f,54.174328f,14.690595f,25.702864f,54.174328f,14.694929f,25.735786f,54.174328f,14.580432f,25.766466f,54.174328f,14.572059f,25.751963f,54.174328f,14.592274f,25.778309f,54.174328f,14.606776f,25.786682f,54.174328f,14.622952f,25.791016f,54.174328f,14.631327f,25.791016f,54.174328f,14.6397f,25.791016f,54.174328f,14.655876f,25.786682f,54.174328f,14.670379f,25.778309f,54.174328f,14.68222f,25.766466f,54.174328f,14.572059f,25.702864f,54.174328f,14.567724f,25.735786f,54.174328f,14.567724f,25.71904f,54.174328f,};
FloatBuffer fbv = GLBuffers.newDirectFloatBuffer(positionsArray, 0);
gl.glVertexPointer(3, GL2.GL_FLOAT, 0, fbv);
gl.glEnableClientState(GL2.GL_VERTEX_ARRAY);
FloatBuffer fbn = null;
float[] normalsArray = {
0.7279728f,-0.0958394f,0.6788744f,0.3015113f,0.3015113f,0.904534f,0.8241393f,-0.5118421f,0.2425122f,0.7279728f,0.0958394f,0.6788744f,-0.5825232f,0.4469858f,0.6788744f,-0.3015113f,0.3015113f,0.904534f,-0.4469858f,0.5825232f,0.6788744f,-0.280987f,0.6783626f,0.6788744f,-0.0958394f,0.7279728f,0.6788744f,0.0f,0.7071068f,0.7071068f,0.0958394f,0.7279728f,0.6788744f,0.280987f,0.6783626f,0.6788744f,0.4469858f,0.5825232f,0.6788744f,0.5825232f,0.4469858f,0.6788744f,-0.8241393f,-0.5118421f,0.2425122f,-0.7279728f,0.0958394f,0.6788744f,-0.7279728f,-0.0958394f,0.6788744f,};
fbn = GLBuffers.newDirectFloatBuffer(normalsArray, 0);
gl.glNormalPointer(GL2.GL_FLOAT, 0, fbn);
gl.glEnableClientState(GL2.GL_NORMAL_ARRAY);
FloatBuffer fbt = null;
float[] texcoordArray = null;
{
gl.glColor4d(1.0, 1.0, 1.0, 1.0);
int[] indices = {
0,1,2,1,0,3,1,4,5,4,1,6,6,1,7,7,1,8,8,1,9,9,1,10,10,1,11,11,1,12,12,1,13,14,15,16,15,14,5,};
IntBuffer fbi = GLBuffers.newDirectIntBuffer(indices, 0);
gl.glDrawElements(GL2.GL_TRIANGLES, 39, GL2.GL_UNSIGNED_INT, fbi);
gl.glDisable(GL2.GL_TEXTURE_2D);
gl.glDisable(GL2.GL_BLEND);
}
gl.glDisableClientState(GL2.GL_VERTEX_ARRAY);
gl.glDisableClientState(GL2.GL_NORMAL_ARRAY);
gl.glDisableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
}
private void ID185(GL2 gl){
float[] positionsArray = {
14.655876f,16.168146f,53.924328f,14.623524f,16.288887f,53.924328f,14.606776f,16.286682f,53.924328f,14.64027f,16.286682f,53.924328f,14.655876f,16.280218f,53.924328f,14.669276f,16.178429f,53.924328f,14.669276f,16.269936f,53.924328f,14.67956f,16.19183f,53.924328f,14.67956f,16.256535f,53.924328f,14.686024f,16.207436f,53.924328f,14.686024f,16.240929f,53.924328f,14.688229f,16.224182f,53.924328f,14.561024f,16.207436f,53.924328f,14.561024f,16.240929f,53.924328f,14.558819f,16.224182f,53.924328f,14.567488f,16.19183f,53.924328f,14.567488f,16.256535f,53.924328f,14.57777f,16.178429f,53.924328f,14.57777f,16.269936f,53.924328f,14.591171f,16.168146f,53.924328f,14.591171f,16.280218f,53.924328f,14.606776f,16.161682f,53.924328f,14.623524f,16.159477f,53.924328f,14.64027f,16.161682f,53.924328f,14.686024f,16.115929f,53.899353f,14.670379f,16.17652f,53.924328f,14.711912f,16.135794f,53.899353f,14.731776f,16.161682f,53.899353f,14.744265f,16.19183f,53.899353f,14.748524f,16.224182f,53.899353f,14.744265f,16.256535f,53.899353f,14.731776f,16.286682f,53.899353f,14.711912f,16.31257f,53.899353f,14.686024f,16.332436f,53.899353f,14.655876f,16.344923f,53.899353f,14.623524f,16.349182f,53.899353f,14.622952f,16.291016f,53.924328f,14.591171f,16.344923f,53.899353f,14.561024f,16.332436f,53.899353f,14.535135f,16.31257f,53.899353f,14.51527f,16.286682f,53.899353f,14.502783f,16.256535f,53.899353f,14.498524f,16.224182f,53.899353f,14.502783f,16.19183f,53.899353f,14.51527f,16.161682f,53.899353f,14.535135f,16.135794f,53.899353f,14.561024f,16.115929f,53.899353f,14.591171f,16.103441f,53.899353f,14.623524f,16.099182f,53.899353f,14.655876f,16.103441f,53.899353f,14.711912f,16.071089f,53.859623f,14.748524f,16.099182f,53.859623f,14.776617f,16.135794f,53.859623f,14.794276f,16.178429f,53.859623f,14.800301f,16.224182f,53.859623f,14.794276f,16.269936f,53.859623f,14.776617f,16.31257f,53.859623f,14.748524f,16.349182f,53.859623f,14.711912f,16.377275f,53.859623f,14.669276f,16.394936f,53.859623f,14.623524f,16.400959f,53.859623f,14.57777f,16.394936f,53.859623f,14.535135f,16.377275f,53.859623f,14.498524f,16.349182f,53.859623f,14.47043f,16.31257f,53.859623f,14.45277f,16.269936f,53.859623f,14.446747f,16.224182f,53.859623f,14.45277f,16.178429f,53.859623f,14.47043f,16.135794f,53.859623f,14.498524f,16.099182f,53.859623f,14.535135f,16.071089f,53.859623f,14.57777f,16.053429f,53.859623f,14.623524f,16.047405f,53.859623f,14.669276f,16.053429f,53.859623f,14.731776f,16.036682f,53.807846f,14.776617f,16.071089f,53.807846f,14.811024f,16.115929f,53.807846f,14.832653f,16.168146f,53.807846f,14.84003f,16.224182f,53.807846f,14.832653f,16.280218f,53.807846f,14.811024f,16.332436f,53.807846f,14.776617f,16.377275f,53.807846f,14.731776f,16.411682f,53.807846f,14.67956f,16.433311f,53.807846f,14.623524f,16.440687f,53.807846f,14.567488f,16.433311f,53.807846f,14.51527f,16.411682f,53.807846f,14.47043f,16.377275f,53.807846f,14.436024f,16.332436f,53.807846f,14.414394f,16.280218f,53.807846f,14.407017f,16.224182f,53.807846f,14.414394f,16.168146f,53.807846f,14.436024f,16.115929f,53.807846f,14.47043f,16.071089f,53.807846f,14.51527f,16.036682f,53.807846f,14.567488f,16.015053f,53.807846f,14.623524f,16.007675f,53.807846f,14.67956f,16.015053f,53.807846f,14.744265f,16.015053f,53.74755f,14.794276f,16.053429f,53.74755f,14.832653f,16.103441f,53.74755f,14.856776f,16.161682f,53.74755f,14.865005f,16.224182f,53.74755f,14.856776f,16.286682f,53.74755f,14.832653f,16.344923f,53.74755f,14.794276f,16.394936f,53.74755f,14.744265f,16.433311f,53.74755f,14.686024f,16.457436f,53.74755f,14.623524f,16.465664f,53.74755f,14.561024f,16.457436f,53.74755f,14.502783f,16.433311f,53.74755f,14.45277f,16.394936f,53.74755f,14.414394f,16.344923f,53.74755f,14.39027f,16.286682f,53.74755f,14.382042f,16.224182f,53.74755f,14.39027f,16.161682f,53.74755f,14.414394f,16.103441f,53.74755f,14.45277f,16.053429f,53.74755f,14.502783f,16.015053f,53.74755f,14.561024f,15.990929f,53.74755f,14.623524f,15.9827f,53.74755f,14.686024f,15.990929f,53.74755f,14.748524f,16.007675f,53.682846f,14.800301f,16.047405f,53.682846f,14.84003f,16.099182f,53.682846f,14.865005f,16.159477f,53.682846f,14.873524f,16.224182f,53.682846f,14.865005f,16.288887f,53.682846f,14.84003f,16.349182f,53.682846f,14.800301f,16.400959f,53.682846f,14.748524f,16.440687f,53.682846f,14.688229f,16.465664f,53.682846f,14.623524f,16.474182f,53.682846f,14.558819f,16.465664f,53.682846f,14.498524f,16.440687f,53.682846f,14.446747f,16.400959f,53.682846f,14.407017f,16.349182f,53.682846f,14.382042f,16.288887f,53.682846f,14.373524f,16.224182f,53.682846f,14.382042f,16.159477f,53.682846f,14.407017f,16.099182f,53.682846f,14.446747f,16.047405f,53.682846f,14.498524f,16.007675f,53.682846f,14.558819f,15.9827f,53.682846f,14.623524f,15.974181f,53.682846f,14.688229f,15.9827f,53.682846f,14.744265f,16.015053f,53.61814f,14.794276f,16.053429f,53.61814f,14.832653f,16.103441f,53.61814f,14.856776f,16.161682f,53.61814f,14.865005f,16.224182f,53.61814f,14.856776f,16.286682f,53.61814f,14.832653f,16.344923f,53.61814f,14.794276f,16.394936f,53.61814f,14.744265f,16.433311f,53.61814f,14.686024f,16.457436f,53.61814f,14.623524f,16.465664f,53.61814f,14.561024f,16.457436f,53.61814f,14.502783f,16.433311f,53.61814f,14.45277f,16.394936f,53.61814f,14.414394f,16.344923f,53.61814f,14.39027f,16.286682f,53.61814f,14.382042f,16.224182f,53.61814f,14.39027f,16.161682f,53.61814f,14.414394f,16.103441f,53.61814f,14.45277f,16.053429f,53.61814f,14.502783f,16.015053f,53.61814f,14.561024f,15.990929f,53.61814f,14.623524f,15.9827f,53.61814f,14.686024f,15.990929f,53.61814f,14.731776f,16.036682f,53.557846f,14.776617f,16.071089f,53.557846f,14.811024f,16.115929f,53.557846f,14.832653f,16.168146f,53.557846f,14.84003f,16.224182f,53.557846f,14.832653f,16.280218f,53.557846f,14.811024f,16.332436f,53.557846f,14.776617f,16.377275f,53.557846f,14.731776f,16.411682f,53.557846f,14.67956f,16.433311f,53.557846f,14.623524f,16.440687f,53.557846f,14.567488f,16.433311f,53.557846f,14.51527f,16.411682f,53.557846f,14.47043f,16.377275f,53.557846f,14.436024f,16.332436f,53.557846f,14.414394f,16.280218f,53.557846f,14.407017f,16.224182f,53.557846f,14.414394f,16.168146f,53.557846f,14.436024f,16.115929f,53.557846f,14.47043f,16.071089f,53.557846f,14.51527f,16.036682f,53.557846f,14.567488f,16.015053f,53.557846f,14.623524f,16.007675f,53.557846f,14.67956f,16.015053f,53.557846f,14.711912f,16.071089f,53.50607f,14.748524f,16.099182f,53.50607f,14.776617f,16.135794f,53.50607f,14.794276f,16.178429f,53.50607f,14.800301f,16.224182f,53.50607f,14.794276f,16.269936f,53.50607f,14.776617f,16.31257f,53.50607f,14.748524f,16.349182f,53.50607f,14.711912f,16.377275f,53.50607f,14.669276f,16.394936f,53.50607f,14.623524f,16.400959f,53.50607f,14.57777f,16.394936f,53.50607f,14.535135f,16.377275f,53.50607f,14.498524f,16.349182f,53.50607f,14.47043f,16.31257f,53.50607f,14.45277f,16.269936f,53.50607f,14.446747f,16.224182f,53.50607f,14.45277f,16.178429f,53.50607f,14.47043f,16.135794f,53.50607f,14.498524f,16.099182f,53.50607f,14.535135f,16.071089f,53.50607f,14.57777f,16.053429f,53.50607f,14.623524f,16.047405f,53.50607f,14.669276f,16.053429f,53.50607f,14.711912f,16.135794f,53.46634f,14.686024f,16.115929f,53.46634f,14.731776f,16.161682f,53.46634f,14.744265f,16.19183f,53.46634f,14.748524f,16.224182f,53.46634f,14.744265f,16.256535f,53.46634f,14.731776f,16.286682f,53.46634f,14.711912f,16.31257f,53.46634f,14.686024f,16.332436f,53.46634f,14.655876f,16.344923f,53.46634f,14.623524f,16.349182f,53.46634f,14.591171f,16.344923f,53.46634f,14.561024f,16.332436f,53.46634f,14.535135f,16.31257f,53.46634f,14.51527f,16.286682f,53.46634f,14.502783f,16.256535f,53.46634f,14.498524f,16.224182f,53.46634f,14.502783f,16.19183f,53.46634f,14.51527f,16.161682f,53.46634f,14.535135f,16.135794f,53.46634f,14.561024f,16.115929f,53.46634f,14.591171f,16.103441f,53.46634f,14.623524f,16.099182f,53.46634f,14.655876f,16.103441f,53.46634f,14.669276f,16.178429f,53.441364f,14.655876f,16.168146f,53.441364f,14.67956f,16.19183f,53.441364f,14.686024f,16.207436f,53.441364f,14.688229f,16.224182f,53.441364f,14.686024f,16.240929f,53.441364f,14.67956f,16.256535f,53.441364f,14.669276f,16.269936f,53.441364f,14.655876f,16.280218f,53.441364f,14.64027f,16.286682f,53.441364f,14.623524f,16.288887f,53.441364f,14.606776f,16.286682f,53.441364f,14.591171f,16.280218f,53.441364f,14.57777f,16.269936f,53.441364f,14.567488f,16.256535f,53.441364f,14.561024f,16.240929f,53.441364f,14.558819f,16.224182f,53.441364f,14.561024f,16.207436f,53.441364f,14.567488f,16.19183f,53.441364f,14.57777f,16.178429f,53.441364f,14.591171f,16.168146f,53.441364f,14.606776f,16.161682f,53.441364f,14.623524f,16.159477f,53.441364f,14.64027f,16.161682f,53.441364f,};
FloatBuffer fbv = GLBuffers.newDirectFloatBuffer(positionsArray, 0);
gl.glVertexPointer(3, GL2.GL_FLOAT, 0, fbv);
gl.glEnableClientState(GL2.GL_VERTEX_ARRAY);
FloatBuffer fbn = null;
float[] normalsArray = {
0.1045009f,-0.1843002f,0.9772988f,0.0052957f,0.2133421f,0.9769632f,-0.0564266f,0.2042132f,0.9772988f,0.0564867f,0.204121f,0.9773146f,0.1053133f,0.182408f,0.9775666f,0.1546003f,-0.147111f,0.9769632f,0.1489355f,0.1489355f,0.9775666f,0.1842775f,-0.1043932f,0.9773146f,0.182408f,0.1053133f,0.9775666f,0.2034496f,-0.0545142f,0.9775666f,0.2034496f,0.0545142f,0.9775666f,0.2106266f,0.0f,0.9775666f,-0.2034496f,-0.0545142f,0.9775666f,-0.2034496f,0.0545142f,0.9775666f,-0.2106266f,-0.0f,0.9775666f,-0.182408f,-0.1053133f,0.9775666f,-0.182408f,0.1053133f,0.9775666f,-0.1489355f,-0.1489355f,0.9775666f,-0.1489355f,0.1489355f,0.9775666f,-0.1053133f,-0.182408f,0.9775666f,-0.1053133f,0.182408f,0.9775666f,-0.0545142f,-0.2034496f,0.9775666f,-0.0f,-0.2106266f,0.9775666f,0.0545142f,-0.2034496f,0.9775666f,0.2532732f,-0.4414887f,0.8607789f,0.2687674f,-0.2761899f,0.9227585f,0.3602168f,-0.3599072f,0.8606455f,0.4414747f,-0.2531846f,0.8608122f,0.490753f,-0.1314969f,0.8613188f,0.5080649f,-0.0f,0.8613188f,0.490753f,0.1314969f,0.8613188f,0.4399971f,0.2540325f,0.8613188f,0.3592562f,0.3592562f,0.8613188f,0.2540325f,0.4399971f,0.8613188f,0.1331413f,0.4911983f,0.8608122f,2.19E-4f,0.5092046f,0.8606455f,-0.0052485f,0.385343f,0.9227585f,-0.1330885f,0.4912709f,0.8607789f,-0.2540325f,0.4399971f,0.8613188f,-0.3592562f,0.3592562f,0.8613188f,-0.4399971f,0.2540325f,0.8613188f,-0.490753f,0.1314969f,0.8613188f,-0.5080649f,-0.0f,0.8613188f,-0.490753f,-0.1314969f,0.8613188f,-0.4399971f,-0.2540325f,0.8613188f,-0.3592562f,-0.3592562f,0.8613188f,-0.2540325f,-0.4399971f,0.8613188f,-0.1314969f,-0.490753f,0.8613188f,-0.0f,-0.5080649f,0.8613188f,0.1314969f,-0.490753f,0.8613188f,0.3562282f,-0.6170053f,0.7017165f,0.5037827f,-0.5037827f,0.7017165f,0.6170053f,-0.3562282f,0.7017165f,0.6881799f,-0.1843973f,0.7017165f,0.7124563f,0.0f,0.7017165f,0.6881799f,0.1843973f,0.7017165f,0.6170053f,0.3562282f,0.7017165f,0.5037827f,0.5037827f,0.7017165f,0.3562282f,0.6170053f,0.7017165f,0.1843973f,0.6881799f,0.7017165f,-0.0f,0.7124563f,0.7017165f,-0.1843973f,0.6881799f,0.7017165f,-0.3562282f,0.6170053f,0.7017165f,-0.5037827f,0.5037827f,0.7017165f,-0.6170053f,0.3562282f,0.7017165f,-0.6881799f,0.1843973f,0.7017165f,-0.7124563f,-0.0f,0.7017165f,-0.6881799f,-0.1843973f,0.7017165f,-0.6170053f,-0.3562282f,0.7017165f,-0.5037827f,-0.5037827f,0.7017165f,-0.3562282f,-0.6170053f,0.7017165f,-0.1843973f,-0.6881799f,0.7017165f,-0.0f,-0.7124563f,0.7017165f,0.1843973f,-0.6881799f,0.7017165f,0.4343447f,-0.7523071f,0.4953571f,0.6142562f,-0.6142562f,0.4953571f,0.7523071f,-0.4343447f,0.4953571f,0.8390896f,-0.2248334f,0.4953571f,0.8686895f,-0.0f,0.4953571f,0.8390896f,0.2248334f,0.4953571f,0.7523071f,0.4343447f,0.4953571f,0.6142562f,0.6142562f,0.4953571f,0.4343447f,0.7523071f,0.4953571f,0.2248334f,0.8390896f,0.4953571f,0.0f,0.8686895f,0.4953571f,-0.2248334f,0.8390896f,0.4953571f,-0.4343447f,0.7523071f,0.4953571f,-0.6142562f,0.6142562f,0.4953571f,-0.7523071f,0.4343447f,0.4953571f,-0.8390896f,0.2248334f,0.4953571f,-0.8686895f,-0.0f,0.4953571f,-0.8390896f,-0.2248334f,0.4953571f,-0.7523071f,-0.4343447f,0.4953571f,-0.6142562f,-0.6142562f,0.4953571f,-0.4343447f,-0.7523071f,0.4953571f,-0.2248334f,-0.8390896f,0.4953571f,-0.0f,-0.8686895f,0.4953571f,0.2248334f,-0.8390896f,0.4953571f,0.4833189f,-0.8371329f,0.2561471f,0.6835162f,-0.6835162f,0.2561471f,0.8371329f,-0.4833189f,0.2561471f,0.9337004f,-0.2501843f,0.2561471f,0.9666378f,-0.0f,0.2561471f,0.9337004f,0.2501843f,0.2561471f,0.8371329f,0.4833189f,0.2561471f,0.6835162f,0.6835162f,0.2561471f,0.4833189f,0.8371329f,0.2561471f,0.2501843f,0.9337004f,0.2561471f,-0.0f,0.9666378f,0.2561471f,-0.2501843f,0.9337004f,0.2561471f,-0.4833189f,0.8371329f,0.2561471f,-0.6835162f,0.6835162f,0.2561471f,-0.8371329f,0.4833189f,0.2561471f,-0.9337004f,0.2501843f,0.2561471f,-0.9666378f,-0.0f,0.2561471f,-0.9337004f,-0.2501843f,0.2561471f,-0.8371329f,-0.4833189f,0.2561471f,-0.6835162f,-0.6835162f,0.2561471f,-0.4833189f,-0.8371329f,0.2561471f,-0.2501843f,-0.9337004f,0.2561471f,0.0f,-0.9666378f,0.2561471f,0.2501843f,-0.9337004f,0.2561471f,0.5f,-0.8660254f,0.0f,0.7071068f,-0.7071068f,0.0f,0.8660254f,-0.5f,0.0f,0.9659258f,-0.258819f,0.0f,1.0f,-0.0f,0.0f,0.9659258f,0.258819f,0.0f,0.8660254f,0.5f,0.0f,0.7071068f,0.7071068f,0.0f,0.5f,0.8660254f,0.0f,0.258819f,0.9659258f,0.0f,-0.0f,1.0f,0.0f,-0.258819f,0.9659258f,0.0f,-0.5f,0.8660254f,0.0f,-0.7071068f,0.7071068f,0.0f,-0.8660254f,0.5f,0.0f,-0.9659258f,0.258819f,0.0f,-1.0f,-0.0f,0.0f,-0.9659258f,-0.258819f,0.0f,-0.8660254f,-0.5f,0.0f,-0.7071068f,-0.7071068f,0.0f,-0.5f,-0.8660254f,0.0f,-0.258819f,-0.9659258f,0.0f,0.0f,-1.0f,0.0f,0.258819f,-0.9659258f,0.0f,0.4833189f,-0.8371329f,-0.2561471f,0.6835162f,-0.6835162f,-0.2561471f,0.8371329f,-0.4833189f,-0.2561471f,0.9337004f,-0.2501843f,-0.2561471f,0.9666378f,-0.0f,-0.2561471f,0.9337004f,0.2501843f,-0.2561471f,0.8371329f,0.4833189f,-0.2561471f,0.6835162f,0.6835162f,-0.2561471f,0.4833189f,0.8371329f,-0.2561471f,0.2501843f,0.9337004f,-0.2561471f,-0.0f,0.9666378f,-0.2561471f,-0.2501843f,0.9337004f,-0.2561471f,-0.4833189f,0.8371329f,-0.2561471f,-0.6835162f,0.6835162f,-0.2561471f,-0.8371329f,0.4833189f,-0.2561471f,-0.9337004f,0.2501843f,-0.2561471f,-0.9666378f,-0.0f,-0.2561471f,-0.9337004f,-0.2501843f,-0.2561471f,-0.8371329f,-0.4833189f,-0.2561471f,-0.6835162f,-0.6835162f,-0.2561471f,-0.4833189f,-0.8371329f,-0.2561471f,-0.2501843f,-0.9337004f,-0.2561471f,0.0f,-0.9666378f,-0.2561471f,0.2501843f,-0.9337004f,-0.2561471f,0.4343447f,-0.7523071f,-0.4953571f,0.6142562f,-0.6142562f,-0.4953571f,0.7523071f,-0.4343447f,-0.4953571f,0.8390896f,-0.2248334f,-0.4953571f,0.8686895f,-0.0f,-0.4953571f,0.8390896f,0.2248334f,-0.4953571f,0.7523071f,0.4343447f,-0.4953571f,0.6142562f,0.6142562f,-0.4953571f,0.4343447f,0.7523071f,-0.4953571f,0.2248334f,0.8390896f,-0.4953571f,0.0f,0.8686895f,-0.4953571f,-0.2248334f,0.8390896f,-0.4953571f,-0.4343447f,0.7523071f,-0.4953571f,-0.6142562f,0.6142562f,-0.4953571f,-0.7523071f,0.4343447f,-0.4953571f,-0.8390896f,0.2248334f,-0.4953571f,-0.8686895f,-0.0f,-0.4953571f,-0.8390896f,-0.2248334f,-0.4953571f,-0.7523071f,-0.4343447f,-0.4953571f,-0.6142562f,-0.6142562f,-0.4953571f,-0.4343447f,-0.7523071f,-0.4953571f,-0.2248334f,-0.8390896f,-0.4953571f,-0.0f,-0.8686895f,-0.4953571f,0.2248334f,-0.8390896f,-0.4953571f,0.3562282f,-0.6170053f,-0.7017165f,0.5037827f,-0.5037827f,-0.7017165f,0.6170053f,-0.3562282f,-0.7017165f,0.6881799f,-0.1843973f,-0.7017165f,0.7124563f,0.0f,-0.7017165f,0.6881799f,0.1843973f,-0.7017165f,0.6170053f,0.3562282f,-0.7017165f,0.5037827f,0.5037827f,-0.7017165f,0.3562282f,0.6170053f,-0.7017165f,0.1843973f,0.6881799f,-0.7017165f,0.0f,0.7124563f,-0.7017165f,-0.1843973f,0.6881799f,-0.7017165f,-0.3562282f,0.6170053f,-0.7017165f,-0.5037827f,0.5037827f,-0.7017165f,-0.6170053f,0.3562282f,-0.7017165f,-0.6881799f,0.1843973f,-0.7017165f,-0.7124563f,-0.0f,-0.7017165f,-0.6881799f,-0.1843973f,-0.7017165f,-0.6170053f,-0.3562282f,-0.7017165f,-0.5037827f,-0.5037827f,-0.7017165f,-0.3562282f,-0.6170053f,-0.7017165f,-0.1843973f,-0.6881799f,-0.7017165f,-0.0f,-0.7124563f,-0.7017165f,0.1843973f,-0.6881799f,-0.7017165f,0.3592562f,-0.3592562f,-0.8613188f,0.2540325f,-0.4399971f,-0.8613188f,0.4399971f,-0.2540325f,-0.8613188f,0.490753f,-0.1314969f,-0.8613188f,0.5080649f,-0.0f,-0.8613188f,0.490753f,0.1314969f,-0.8613188f,0.4399971f,0.2540325f,-0.8613188f,0.3592562f,0.3592562f,-0.8613188f,0.2540325f,0.4399971f,-0.8613188f,0.1314969f,0.490753f,-0.8613188f,0.0f,0.5080649f,-0.8613188f,-0.1314969f,0.490753f,-0.8613188f,-0.2540325f,0.4399971f,-0.8613188f,-0.3592562f,0.3592562f,-0.8613188f,-0.4399971f,0.2540325f,-0.8613188f,-0.490753f,0.1314969f,-0.8613188f,-0.5080649f,-0.0f,-0.8613188f,-0.490753f,-0.1314969f,-0.8613188f,-0.4399971f,-0.2540325f,-0.8613188f,-0.3592562f,-0.3592562f,-0.8613188f,-0.2540325f,-0.4399971f,-0.8613188f,-0.1314969f,-0.490753f,-0.8613188f,-0.0f,-0.5080649f,-0.8613188f,0.1314969f,-0.490753f,-0.8613188f,0.2705981f,-0.2705981f,-0.9238795f,0.1913417f,-0.3314136f,-0.9238795f,0.3314136f,-0.1913417f,-0.9238795f,0.3696438f,-0.0990458f,-0.9238795f,0.3826834f,-0.0f,-0.9238795f,0.3696438f,0.0990458f,-0.9238795f,0.3314136f,0.1913417f,-0.9238795f,0.2705981f,0.2705981f,-0.9238795f,0.1913417f,0.3314136f,-0.9238795f,0.0990458f,0.3696438f,-0.9238795f,0.0f,0.3826834f,-0.9238795f,-0.0990458f,0.3696438f,-0.9238795f,-0.1913417f,0.3314136f,-0.9238795f,-0.2705981f,0.2705981f,-0.9238795f,-0.3314136f,0.1913417f,-0.9238795f,-0.3696438f,0.0990458f,-0.9238795f,-0.3826834f,-0.0f,-0.9238795f,-0.3696438f,-0.0990458f,-0.9238795f,-0.3314136f,-0.1913417f,-0.9238795f,-0.2705981f,-0.2705981f,-0.9238795f,-0.1913417f,-0.3314136f,-0.9238795f,-0.0990458f,-0.3696438f,-0.9238795f,-0.0f,-0.3826834f,-0.9238795f,0.0990458f,-0.3696438f,-0.9238795f,};
fbn = GLBuffers.newDirectFloatBuffer(normalsArray, 0);
gl.glNormalPointer(GL2.GL_FLOAT, 0, fbn);
gl.glEnableClientState(GL2.GL_NORMAL_ARRAY);
FloatBuffer fbt = null;
float[] texcoordArray = null;
{
gl.glEnable(GL2.GL_TEXTURE_2D);
gl.glEnable(GL2.GL_BLEND);
gl.glBlendFunc(GL2.GL_SRC_ALPHA, GL2.GL_ONE_MINUS_SRC_ALPHA);
ID143.bind(gl);
texcoordArray = new float[] {
0.2714051f,0.2994101f,0.270806f,0.301646f,0.2704959f,0.3016052f,0.2711161f,0.3016052f,0.2714051f,0.3014855f,0.2716533f,0.2996005f,0.2716533f,0.3012951f,0.2718437f,0.2998487f,0.2718437f,0.3010469f,0.2719634f,0.3001377f,0.2719634f,0.3007579f,0.2720042f,0.3004478f,0.2696486f,0.3001377f,0.2696486f,0.3007579f,0.2696078f,0.3004478f,0.2697683f,0.2998487f,0.2697683f,0.3010469f,0.2699587f,0.2996005f,0.2699587f,0.3012951f,0.2702069f,0.2994101f,0.2702069f,0.3014855f,0.2704959f,0.2992904f,0.270806f,0.2992496f,0.2711161f,0.2992904f,0.3961981f,0.4600751f,0.396638f,0.4612818f,0.3963253f,0.461277f,0.3966334f,0.4612444f,0.3968023f,0.4600844f,0.4024074f,0.3512458f,0.4027364f,0.3512753f,0.4024237f,0.3512803f,0.4022587f,0.350083f,0.4028629f,0.3500734f,0.3809084f,0.2578957f,0.3813669f,0.2590955f,0.3810541f,0.2590955f,0.3815127f,0.2578957f,0.3329226f,0.1711083f,0.3333811f,0.1723081f,0.3330683f,0.1723081f,0.3335269f,0.1711083f,0.2623738f,0.0999376f,0.2628323f,0.0987378f,0.2626866f,0.0999376f,0.262228f,0.0987378f,0.1737882f,0.0469159f,0.1742468f,0.0457162f,0.174101f,0.0469159f,0.1736425f,0.0457162f,0.0733486f,0.0168565f,0.0738072f,0.0156567f,0.0736614f,0.0168565f,0.0732029f,0.0156567f,-0.0321002f,0.0118078f,-0.0316417f,0.010608f,-0.0317874f,0.0118078f,-0.0322459f,0.010608f,-0.1353721f,0.0321138f,-0.1349136f,0.030914f,-0.1350593f,0.0321138f,-0.1355179f,0.030914f,-0.2232635f,0.0765346f,-0.2230986f,0.0753374f,-0.2232473f,0.0765001f,-0.2235763f,0.0765296f,-0.2237028f,0.0753277f,-0.3122265f,0.1503835f,-0.3122218f,0.1503461f,-0.3119137f,0.1503787f,-0.3123907f,0.1491861f,-0.3117865f,0.1491768f,-0.3650121f,0.22336f,-0.3654707f,0.2221602f,-0.3648664f,0.2221602f,-0.3653249f,0.22336f,-0.3975895f,0.3160365f,-0.398048f,0.3148367f,-0.3974437f,0.3148367f,-0.3979023f,0.3160365f,-0.4030611f,0.4133351f,-0.4035197f,0.4121354f,-0.4029154f,0.4121354f,-0.4033739f,0.4133351f,-0.3810541f,0.5086251f,-0.3815127f,0.5074253f,-0.3809084f,0.5074253f,-0.3813669f,0.5086251f,-0.3330683f,0.5954125f,-0.3335269f,0.5942127f,-0.3329226f,0.5942127f,-0.3333811f,0.5954125f,-0.262228f,0.6665832f,-0.2626866f,0.667783f,-0.2628323f,0.6665832f,-0.2623738f,0.667783f,-0.1736425f,0.7196049f,-0.174101f,0.7208046f,-0.1742468f,0.7196049f,-0.1737882f,0.7208046f,-0.0732029f,0.7496643f,-0.0736614f,0.7508641f,-0.0738072f,0.7496643f,-0.0733486f,0.7508641f,0.0322459f,0.754713f,0.0317874f,0.7559128f,0.0316417f,0.754713f,0.0321002f,0.7559128f,0.1355179f,0.734407f,0.1350593f,0.7356068f,0.1349136f,0.734407f,0.1353721f,0.7356068f,0.229575f,0.69013f,0.2291165f,0.6913298f,0.2289708f,0.69013f,0.2294293f,0.6913298f,0.3080077f,0.6248995f,0.3075491f,0.6260993f,0.3074034f,0.6248995f,0.3078619f,0.6260993f,0.3648664f,0.5431608f,0.3653249f,0.5443606f,0.3650121f,0.5443606f,0.3654707f,0.5431608f,0.3973186f,0.6660232f,0.398048f,0.6672252f,0.3974437f,0.6672252f,0.3981732f,0.6660232f,0.4027902f,0.5826324f,0.4035197f,0.5838345f,0.4029154f,0.5838345f,0.4036448f,0.5826324f,0.3807832f,0.5009631f,0.3815127f,0.5021652f,0.3809084f,0.5021652f,0.3816378f,0.5009631f,0.3327974f,0.426581f,0.3335269f,0.4277831f,0.3329226f,0.4277831f,0.333652f,0.426581f,0.262228f,0.3657572f,0.2629575f,0.3645552f,0.2628323f,0.3657572f,0.2621029f,0.3645552f,0.1736425f,0.3203145f,0.1743719f,0.3191124f,0.1742468f,0.3203145f,0.1735173f,0.3191124f,0.0732029f,0.2945517f,0.0739323f,0.2933497f,0.0738072f,0.2945517f,0.0730777f,0.2933497f,-0.0322459f,0.2902247f,-0.0315165f,0.2890226f,-0.0316417f,0.2902247f,-0.0323711f,0.2890226f,-0.1355179f,0.3076282f,-0.1347884f,0.3064261f,-0.1349136f,0.3076282f,-0.135643f,0.3064261f,-0.229575f,0.3455762f,-0.2288456f,0.3443741f,-0.2289708f,0.3455762f,-0.2297002f,0.3443741f,-0.3074034f,0.4014827f,-0.3081328f,0.4002806f,-0.3072782f,0.4002806f,-0.3080077f,0.4014827f,-0.3648664f,0.4715377f,-0.3655958f,0.4703356f,-0.3647412f,0.4703356f,-0.3654707f,0.4715377f,-0.3974437f,0.5509671f,-0.3981732f,0.549765f,-0.3973186f,0.549765f,-0.398048f,0.5509671f,-0.4029154f,0.6343579f,-0.4036448f,0.6331558f,-0.4027902f,0.6331558f,-0.4035197f,0.6343579f,-0.3809084f,0.7160271f,-0.3816378f,0.7148251f,-0.3807832f,0.7148251f,-0.3815127f,0.7160271f,-0.3329226f,0.7904092f,-0.333652f,0.7892071f,-0.3327974f,0.7892071f,-0.3335269f,0.7904092f,-0.2621029f,0.851233f,-0.2628323f,0.8524351f,-0.2629575f,0.851233f,-0.262228f,0.8524351f,-0.1735173f,0.8966758f,-0.1742468f,0.8978779f,-0.1743719f,0.8966758f,-0.1736425f,0.8978779f,-0.0730777f,0.9224385f,-0.0738072f,0.9236406f,-0.0739323f,0.9224385f,-0.0732029f,0.9236406f,0.0323711f,0.9267656f,0.0316417f,0.9279677f,0.0315165f,0.9267656f,0.0322459f,0.9279677f,0.135643f,0.9093621f,0.1349136f,0.9105642f,0.1347884f,0.9093621f,0.1355179f,0.9105642f,0.2297002f,0.8714141f,0.2289708f,0.8726161f,0.2288456f,0.8714141f,0.229575f,0.8726161f,0.3081328f,0.8155076f,0.3074034f,0.8167096f,0.3072782f,0.8155076f,0.3080077f,0.8167096f,0.3647412f,0.7454526f,0.3654707f,0.7466546f,0.3648664f,0.7466546f,0.3655958f,0.7454526f,0.3981732f,0.8363407f,0.3972225f,0.8351359f,0.3982692f,0.8351359f,0.3973186f,0.8363407f,0.4037408f,0.77129f,0.4027902f,0.7724948f,0.4026942f,0.77129f,0.4036448f,0.7724948f,0.3817339f,0.7087622f,0.3807832f,0.709967f,0.3806872f,0.7087622f,0.3816378f,0.709967f,0.333748f,0.6518136f,0.3327974f,0.6530184f,0.3327014f,0.6518136f,0.333652f,0.6530184f,0.2630535f,0.6043252f,0.2621029f,0.6055299f,0.2620068f,0.6043252f,0.2629575f,0.6055299f,0.1734213f,0.5695332f,0.1743719f,0.570738f,0.1735173f,0.570738f,0.1744679f,0.5695332f,0.0729817f,0.5498087f,0.0739323f,0.5510134f,0.0730777f,0.5510134f,0.0740284f,0.5498087f,-0.0315165f,0.5477005f,-0.0324671f,0.5464957f,-0.0314205f,0.5464957f,-0.0323711f,0.5477005f,-0.1347884f,0.561025f,-0.135739f,0.5598203f,-0.1346924f,0.5598203f,-0.135643f,0.561025f,-0.2288456f,0.5900789f,-0.2297962f,0.5888741f,-0.2287496f,0.5888741f,-0.2297002f,0.5900789f,-0.3072782f,0.6328822f,-0.3082288f,0.6316774f,-0.3071822f,0.6316774f,-0.3081328f,0.6328822f,-0.3647412f,0.6865179f,-0.3656918f,0.6853131f,-0.3646452f,0.6853131f,-0.3655958f,0.6865179f,-0.3973186f,0.7473308f,-0.3982692f,0.746126f,-0.3972225f,0.746126f,-0.3981732f,0.7473308f,-0.4036448f,0.8111767f,-0.4026942f,0.8099719f,-0.4027902f,0.8111767f,-0.4037408f,0.8099719f,-0.3816378f,0.8737045f,-0.3806872f,0.8724997f,-0.3807832f,0.8737045f,-0.3817339f,0.8724997f,-0.333652f,0.9306531f,-0.3327014f,0.9294483f,-0.3327974f,0.9306531f,-0.333748f,0.9294483f,-0.2621029f,0.9781415f,-0.2630535f,0.9769368f,-0.2620068f,0.9769368f,-0.2629575f,0.9781415f,-0.1735173f,1.0129335f,-0.1744679f,1.0117288f,-0.1734213f,1.0117288f,-0.1743719f,1.0129335f,-0.0730777f,1.0326581f,-0.0740284f,1.0314533f,-0.0729817f,1.0314533f,-0.0739323f,1.0326581f,0.0323711f,1.035971f,0.0314205f,1.0347662f,0.0324671f,1.0347662f,0.0315165f,1.035971f,0.135643f,1.0226464f,0.1346924f,1.0214417f,0.135739f,1.0214417f,0.1347884f,1.0226464f,0.2297002f,0.9935926f,0.2287496f,0.9923878f,0.2297962f,0.9923878f,0.2288456f,0.9935926f,0.3081328f,0.9507893f,0.3071822f,0.9495845f,0.3082288f,0.9495845f,0.3072782f,0.9507893f,0.3655958f,0.8971536f,0.3646452f,0.8959488f,0.3656918f,0.8959488f,0.3647412f,0.8971536f,0.3982692f,0.9481559f,0.3971622f,0.9469488f,0.3983296f,0.9469488f,0.3972225f,0.9481559f,0.4038012f,0.9068905f,0.4026942f,0.9080976f,0.4026338f,0.9068905f,0.4037408f,0.9080976f,0.3817942f,0.8676592f,0.3806872f,0.8688663f,0.3806268f,0.8676592f,0.3817339f,0.8688663f,0.3338084f,0.8319284f,0.3327014f,0.8331355f,0.332641f,0.8319284f,0.333748f,0.8331355f,0.2631139f,0.8021331f,0.2620068f,0.8033402f,0.2619465f,0.8021331f,0.2630535f,0.8033402f,0.1733609f,0.7803039f,0.1744679f,0.7815109f,0.1734213f,0.7815109f,0.1745283f,0.7803039f,0.0729213f,0.7679283f,0.0740284f,0.7691353f,0.0729817f,0.7691353f,0.0740887f,0.7679283f,-0.0314205f,0.7670567f,-0.0325275f,0.7658497f,-0.0313601f,0.7658497f,-0.0324671f,0.7670567f,-0.1346924f,0.7754168f,-0.1357994f,0.7742098f,-0.134632f,0.7742098f,-0.135739f,0.7754168f,-0.2287496f,0.7936459f,-0.2298566f,0.7924388f,-0.2286892f,0.7924388f,-0.2297962f,0.7936459f,-0.3071822f,0.8205016f,-0.3082892f,0.8192945f,-0.3071218f,0.8192945f,-0.3082288f,0.8205016f,-0.3646452f,0.8541538f,-0.3657522f,0.8529467f,-0.3645848f,0.8529467f,-0.3656918f,0.8541538f,-0.3972225f,0.8923092f,-0.3983296f,0.8911021f,-0.3971622f,0.8911021f,-0.3982692f,0.8923092f,-0.4037408f,0.9323674f,-0.4026338f,0.9311604f,-0.4026942f,0.9323674f,-0.4038012f,0.9311604f,-0.3817339f,0.9715988f,-0.3806268f,0.9703917f,-0.3806872f,0.9715988f,-0.3817942f,0.9703917f,-0.333748f,1.0073296f,-0.332641f,1.0061225f,-0.3327014f,1.0073296f,-0.3338084f,1.0061225f,-0.2620068f,1.0371248f,-0.2631139f,1.0359178f,-0.2619465f,1.0359178f,-0.2630535f,1.0371248f,-0.1734213f,1.0589541f,-0.1745283f,1.057747f,-0.1733609f,1.057747f,-0.1744679f,1.0589541f,-0.0729817f,1.0713297f,-0.0740887f,1.0701226f,-0.0729213f,1.0701226f,-0.0740284f,1.0713297f,0.0324671f,1.0734082f,0.0313601f,1.0722013f,0.0325275f,1.0722013f,0.0314205f,1.0734082f,0.135739f,1.0650482f,0.134632f,1.0638411f,0.1357994f,1.0638411f,0.1346924f,1.0650482f,0.2297962f,1.0468192f,0.2286892f,1.0456121f,0.2298566f,1.0456121f,0.2287496f,1.0468192f,0.3082288f,1.0199635f,0.3071218f,1.0187564f,0.3082892f,1.0187564f,0.3071822f,1.0199635f,0.3656918f,0.9863112f,0.3645848f,0.9851042f,0.3657522f,0.9851042f,0.3646452f,0.9863112f,0.3983296f,0.9958929f,0.3971416f,0.9946845f,0.3983502f,0.9946845f,0.3971622f,0.9958929f,0.4038218f,0.9810364f,0.4026338f,0.9822448f,0.4026132f,0.9810364f,0.4038012f,0.9822448f,0.3818148f,0.9676701f,0.3806268f,0.9688785f,0.3806063f,0.9676701f,0.3817942f,0.9688785f,0.333829f,0.9554965f,0.332641f,0.9567049f,0.3326204f,0.9554965f,0.3338084f,0.9567049f,0.2631344f,0.9453451f,0.2619465f,0.9465535f,0.2619259f,0.9453451f,0.2631139f,0.9465535f,0.1733403f,0.9379077f,0.1745283f,0.9391161f,0.1733609f,0.9391161f,0.1745489f,0.9379077f,0.0729007f,0.9336913f,0.0740887f,0.9348997f,0.0729213f,0.9348997f,0.0741093f,0.9336913f,-0.0313601f,0.9341915f,-0.0325481f,0.9329831f,-0.0313395f,0.9329831f,-0.0325275f,0.9341915f,-0.134632f,0.9370398f,-0.13582f,0.9358314f,-0.1346114f,0.9358314f,-0.1357994f,0.9370398f,-0.2286892f,0.9432506f,-0.2298772f,0.9420422f,-0.2286686f,0.9420422f,-0.2298566f,0.9432506f,-0.3071218f,0.9524004f,-0.3083098f,0.951192f,-0.3071012f,0.951192f,-0.3082892f,0.9524004f,-0.3645848f,0.9638659f,-0.3657728f,0.9626575f,-0.3645642f,0.9626575f,-0.3657522f,0.9638659f,-0.3971622f,0.9768656f,-0.3983502f,0.9756572f,-0.3971416f,0.9756572f,-0.3983296f,0.9768656f,-0.4038012f,0.9905137f,-0.4026132f,0.9893053f,-0.4026338f,0.9905137f,-0.4038218f,0.9893053f,-0.3817942f,1.00388f,-0.3806063f,1.0026716f,-0.3806268f,1.00388f,-0.3818148f,1.0026716f,-0.3338084f,1.0160537f,-0.3326204f,1.0148453f,-0.332641f,1.0160537f,-0.333829f,1.0148453f,-0.2619465f,1.0262051f,-0.2631344f,1.0249968f,-0.2619259f,1.0249968f,-0.2631139f,1.0262051f,-0.1733609f,1.0336424f,-0.1745489f,1.032434f,-0.1733403f,1.032434f,-0.1745283f,1.0336424f,-0.0729213f,1.0378588f,-0.0741093f,1.0366504f,-0.0729007f,1.0366504f,-0.0740887f,1.0378588f,0.0325275f,1.038567f,0.0313395f,1.0373586f,0.0325481f,1.0373586f,0.0313601f,1.038567f,0.1357994f,1.0357187f,0.1346114f,1.0345103f,0.13582f,1.0345103f,0.134632f,1.0357187f,0.2298566f,1.029508f,0.2286686f,1.0282996f,0.2298772f,1.0282996f,0.2286892f,1.029508f,0.3082892f,1.0203581f,0.3071012f,1.0191497f,0.3083098f,1.0191497f,0.3071218f,1.0203581f,0.3657522f,1.0088927f,0.3645642f,1.0076842f,0.3657728f,1.0076842f,0.3645848f,1.0088927f,0.3983502f,0.9768454f,0.3971622f,0.975637f,0.3983296f,0.975637f,0.3971416f,0.9768454f,0.4026338f,0.9892851f,0.4038218f,0.9904935f,0.4026132f,0.9904935f,0.4038012f,0.9892851f,0.3806268f,1.0026515f,0.3818148f,1.0038598f,0.3806063f,1.0038598f,0.3817942f,1.0026515f,0.332641f,1.014825f,0.333829f,1.0160334f,0.3326204f,1.0160334f,0.3338084f,1.014825f,0.2631139f,1.0249764f,0.2619259f,1.0261848f,0.2619465f,1.0249764f,0.2631344f,1.0261848f,0.1745283f,1.0324138f,0.1733403f,1.0336221f,0.1733609f,1.0324138f,0.1745489f,1.0336221f,0.0740887f,1.0366302f,0.0729007f,1.0378386f,0.0729213f,1.0366302f,0.0741093f,1.0378386f,-0.0313395f,1.0385468f,-0.0325275f,1.0373384f,-0.0313601f,1.0373384f,-0.0325481f,1.0385468f,-0.1346114f,1.0356985f,-0.1357994f,1.0344901f,-0.134632f,1.0344901f,-0.13582f,1.0356985f,-0.2286686f,1.0294877f,-0.2298566f,1.0282793f,-0.2286892f,1.0282793f,-0.2298772f,1.0294877f,-0.3071012f,1.0203379f,-0.3082892f,1.0191295f,-0.3071218f,1.0191295f,-0.3083098f,1.0203379f,-0.3645642f,1.0088724f,-0.3657522f,1.007664f,-0.3645848f,1.007664f,-0.3657728f,1.0088724f,-0.3971416f,0.9958727f,-0.3983296f,0.9946643f,-0.3971622f,0.9946643f,-0.3983502f,0.9958727f,-0.4026132f,0.9822246f,-0.4038012f,0.9810162f,-0.4026338f,0.9810162f,-0.4038218f,0.9822246f,-0.3806063f,0.9688583f,-0.3817942f,0.9676499f,-0.3806268f,0.9676499f,-0.3818148f,0.9688583f,-0.333829f,0.9566846f,-0.332641f,0.9554762f,-0.3326204f,0.9566846f,-0.3338084f,0.9554762f,-0.2631344f,0.9465332f,-0.2619465f,0.9453248f,-0.2619259f,0.9465332f,-0.2631139f,0.9453248f,-0.1745489f,0.9390959f,-0.1733609f,0.9378875f,-0.1733403f,0.9390959f,-0.1745283f,0.9378875f,-0.0741093f,0.9348795f,-0.0729213f,0.9336711f,-0.0729007f,0.9348795f,-0.0740887f,0.9336711f,0.0325481f,0.9341713f,0.0313601f,0.9329629f,0.0325275f,0.9329629f,0.0313395f,0.9341713f,0.13582f,0.9370196f,0.134632f,0.9358112f,0.1357994f,0.9358112f,0.1346114f,0.9370196f,0.2298772f,0.9432303f,0.2286892f,0.9420219f,0.2298566f,0.9420219f,0.2286686f,0.9432303f,0.3083098f,0.9523802f,0.3071218f,0.9511718f,0.3082892f,0.9511718f,0.3071012f,0.9523802f,0.3657728f,0.9638457f,0.3645848f,0.9626373f,0.3657522f,0.9626373f,0.3645642f,0.9638457f,0.3983296f,0.8922538f,0.3972225f,0.8910467f,0.3982692f,0.8910467f,0.3971622f,0.8922538f,0.4026942f,0.931105f,0.4038012f,0.9323121f,0.4026338f,0.9323121f,0.4037408f,0.931105f,0.3806872f,0.9703363f,0.3817942f,0.9715434f,0.3806268f,0.9715434f,0.3817339f,0.9703363f,0.3327014f,1.0060672f,0.3338084f,1.0072742f,0.332641f,1.0072742f,0.333748f,1.0060672f,0.2630535f,1.0358624f,0.2619465f,1.0370696f,0.2620068f,1.0358624f,0.2631139f,1.0370696f,0.1744679f,1.0576917f,0.1733609f,1.0588987f,0.1734213f,1.0576917f,0.1745283f,1.0588987f,0.0740284f,1.0700673f,0.0729213f,1.0712743f,0.0729817f,1.0700673f,0.0740887f,1.0712743f,-0.0313601f,1.0733529f,-0.0324671f,1.0721459f,-0.0314205f,1.0721459f,-0.0325275f,1.0733529f,-0.134632f,1.0649928f,-0.135739f,1.0637858f,-0.1346924f,1.0637858f,-0.1357994f,1.0649928f,-0.2286892f,1.0467638f,-0.2297962f,1.0455567f,-0.2287496f,1.0455567f,-0.2298566f,1.0467638f,-0.3071218f,1.0199081f,-0.3082288f,1.018701f,-0.3071822f,1.018701f,-0.3082892f,1.0199081f,-0.3645848f,0.9862559f,-0.3656918f,0.9850488f,-0.3646452f,0.9850488f,-0.3657522f,0.9862559f,-0.3971622f,0.9481005f,-0.3982692f,0.9468935f,-0.3972225f,0.9468935f,-0.3983296f,0.9481005f,-0.4026338f,0.9080422f,-0.4037408f,0.9068352f,-0.4026942f,0.9068352f,-0.4038012f,0.9080422f,-0.3806268f,0.8688109f,-0.3817339f,0.8676038f,-0.3806872f,0.8676038f,-0.3817942f,0.8688109f,-0.3338084f,0.8330801f,-0.3327014f,0.831873f,-0.332641f,0.8330801f,-0.333748f,0.831873f,-0.2631139f,0.8032848f,-0.2620068f,0.8020778f,-0.2619465f,0.8032848f,-0.2630535f,0.8020778f,-0.1745283f,0.7814556f,-0.1734213f,0.7802485f,-0.1733609f,0.7814556f,-0.1744679f,0.7802485f,-0.0740887f,0.76908f,-0.0729817f,0.7678729f,-0.0729213f,0.76908f,-0.0740284f,0.7678729f,0.0325275f,0.7670014f,0.0314205f,0.7657943f,0.0324671f,0.7657943f,0.0313601f,0.7670014f,0.1357994f,0.7753615f,0.1346924f,0.7741544f,0.135739f,0.7741544f,0.134632f,0.7753615f,0.2298566f,0.7935905f,0.2287496f,0.7923834f,0.2297962f,0.7923834f,0.2286892f,0.7935905f,0.3082892f,0.8204462f,0.3071822f,0.8192392f,0.3082288f,0.8192392f,0.3071218f,0.8204462f,0.3657522f,0.8540984f,0.3646452f,0.8528914f,0.3656918f,0.8528914f,0.3645848f,0.8540984f,0.3982692f,0.747255f,0.3973186f,0.7460503f,0.3981732f,0.7460503f,0.3972225f,0.747255f,0.4027902f,0.8098961f,0.4037408f,0.8111009f,0.4026942f,0.8111009f,0.4036448f,0.8098961f,0.3807832f,0.872424f,0.3817339f,0.8736287f,0.3806872f,0.8736287f,0.3816378f,0.872424f,0.3327974f,0.9293726f,0.333748f,0.9305773f,0.3327014f,0.9305773f,0.333652f,0.9293726f,0.2621029f,0.976861f,0.2630535f,0.9780657f,0.2620068f,0.9780657f,0.2629575f,0.976861f,0.1743719f,1.011653f,0.1734213f,1.0128577f,0.1735173f,1.011653f,0.1744679f,1.0128577f,0.0739323f,1.0313776f,0.0729817f,1.0325823f,0.0730777f,1.0313776f,0.0740284f,1.0325823f,-0.0314205f,1.0358952f,-0.0323711f,1.0346904f,-0.0315165f,1.0346904f,-0.0324671f,1.0358952f,-0.1346924f,1.0225707f,-0.135643f,1.0213659f,-0.1347884f,1.0213659f,-0.135739f,1.0225707f,-0.2287496f,0.9935168f,-0.2297002f,0.992312f,-0.2288456f,0.992312f,-0.2297962f,0.9935168f,-0.3071822f,0.9507135f,-0.3081328f,0.9495088f,-0.3072782f,0.9495088f,-0.3082288f,0.9507135f,-0.3646452f,0.8970778f,-0.3655958f,0.8958731f,-0.3647412f,0.8958731f,-0.3656918f,0.8970778f,-0.3972225f,0.8362649f,-0.3981732f,0.8350601f,-0.3973186f,0.8350601f,-0.3982692f,0.8362649f,-0.4026942f,0.772419f,-0.4036448f,0.7712143f,-0.4027902f,0.7712143f,-0.4037408f,0.772419f,-0.3806872f,0.7098912f,-0.3816378f,0.7086864f,-0.3807832f,0.7086864f,-0.3817339f,0.7098912f,-0.333748f,0.6529426f,-0.3327974f,0.6517378f,-0.3327014f,0.6529426f,-0.333652f,0.6517378f,-0.2630535f,0.6054542f,-0.2621029f,0.6042494f,-0.2620068f,0.6054542f,-0.2629575f,0.6042494f,-0.1744679f,0.5706622f,-0.1735173f,0.5694574f,-0.1734213f,0.5706622f,-0.1743719f,0.5694574f,-0.0740284f,0.5509376f,-0.0730777f,0.5497329f,-0.0729817f,0.5509376f,-0.0739323f,0.5497329f,0.0324671f,0.5476247f,0.0315165f,0.54642f,0.0323711f,0.54642f,0.0314205f,0.5476247f,0.135739f,0.5609492f,0.1347884f,0.5597445f,0.135643f,0.5597445f,0.1346924f,0.5609492f,0.2297962f,0.5900031f,0.2288456f,0.5887984f,0.2297002f,0.5887984f,0.2287496f,0.5900031f,0.3082288f,0.6328064f,0.3072782f,0.6316016f,0.3081328f,0.6316016f,0.3071822f,0.6328064f,0.3656918f,0.6864421f,0.3647412f,0.6852373f,0.3655958f,0.6852373f,0.3646452f,0.6864421f,0.398048f,0.5496891f,0.3973186f,0.5508912f,0.3974437f,0.5496891f,0.3981732f,0.5508912f,0.4035197f,0.6330799f,0.4027902f,0.6342819f,0.4029154f,0.6330799f,0.4036448f,0.6342819f,0.3815127f,0.7147491f,0.3807832f,0.7159512f,0.3809084f,0.7147491f,0.3816378f,0.7159512f,0.3335269f,0.7891312f,0.3327974f,0.7903333f,0.3329226f,0.7891312f,0.333652f,0.7903333f,0.2629575f,0.8523592f,0.262228f,0.8511571f,0.2628323f,0.8511571f,0.2621029f,0.8523592f,0.1743719f,0.8978019f,0.1736425f,0.8965998f,0.1742468f,0.8965998f,0.1735173f,0.8978019f,0.0739323f,0.9235647f,0.0732029f,0.9223626f,0.0738072f,0.9223626f,0.0730777f,0.9235647f,-0.0315165f,0.9278917f,-0.0322459f,0.9266897f,-0.0316417f,0.9266897f,-0.0323711f,0.9278917f,-0.1347884f,0.9104882f,-0.1355179f,0.9092862f,-0.1349136f,0.9092862f,-0.135643f,0.9104882f,-0.2297002f,0.8725402f,-0.2289708f,0.8713381f,-0.2288456f,0.8725402f,-0.229575f,0.8713381f,-0.3081328f,0.8166337f,-0.3074034f,0.8154316f,-0.3072782f,0.8166337f,-0.3080077f,0.8154316f,-0.3655958f,0.7465787f,-0.3648664f,0.7453766f,-0.3647412f,0.7465787f,-0.3654707f,0.7453766f,-0.3981732f,0.6671493f,-0.3974437f,0.6659472f,-0.3973186f,0.6671493f,-0.398048f,0.6659472f,-0.4036448f,0.5837585f,-0.4029154f,0.5825564f,-0.4027902f,0.5837585f,-0.4035197f,0.5825564f,-0.3816378f,0.5020893f,-0.3809084f,0.5008872f,-0.3807832f,0.5020893f,-0.3815127f,0.5008872f,-0.333652f,0.4277072f,-0.3329226f,0.4265051f,-0.3327974f,0.4277072f,-0.3335269f,0.4265051f,-0.2628323f,0.3644792f,-0.2621029f,0.3656813f,-0.2629575f,0.3656813f,-0.262228f,0.3644792f,-0.1742468f,0.3190365f,-0.1735173f,0.3202385f,-0.1743719f,0.3202385f,-0.1736425f,0.3190365f,-0.0738072f,0.2932737f,-0.0730777f,0.2944758f,-0.0739323f,0.2944758f,-0.0732029f,0.2932737f,0.0316417f,0.2889466f,0.0323711f,0.2901487f,0.0315165f,0.2901487f,0.0322459f,0.2889466f,0.1349136f,0.3063501f,0.135643f,0.3075522f,0.1347884f,0.3075522f,0.1355179f,0.3063501f,0.2289708f,0.3442982f,0.2297002f,0.3455003f,0.2288456f,0.3455003f,0.229575f,0.3442982f,0.3080077f,0.4002047f,0.3072782f,0.4014068f,0.3074034f,0.4002047f,0.3081328f,0.4014068f,0.3654707f,0.4702597f,0.3647412f,0.4714618f,0.3648664f,0.4702597f,0.3655958f,0.4714618f,0.3979023f,0.314781f,0.3974437f,0.3159808f,0.3975895f,0.314781f,0.398048f,0.3159808f,0.4033739f,0.4120797f,0.4029154f,0.4132794f,0.4030611f,0.4120797f,0.4035197f,0.4132794f,0.3813669f,0.5073696f,0.3809084f,0.5085694f,0.3810541f,0.5073696f,0.3815127f,0.5085694f,0.3333811f,0.594157f,0.3329226f,0.5953568f,0.3330683f,0.594157f,0.3335269f,0.5953568f,0.2628323f,0.6677273f,0.2623738f,0.6665275f,0.2626866f,0.6665275f,0.262228f,0.6677273f,0.1742468f,0.7207489f,0.1737882f,0.7195492f,0.174101f,0.7195492f,0.1736425f,0.7207489f,0.0738072f,0.7508084f,0.0733486f,0.7496086f,0.0736614f,0.7496086f,0.0732029f,0.7508084f,-0.0316417f,0.7558571f,-0.0321002f,0.7546573f,-0.0317874f,0.7546573f,-0.0322459f,0.7558571f,-0.1349136f,0.7355511f,-0.1353721f,0.7343513f,-0.1350593f,0.7343513f,-0.1355179f,0.7355511f,-0.229575f,0.6912741f,-0.2291165f,0.6900743f,-0.2289708f,0.6912741f,-0.2294293f,0.6900743f,-0.3080077f,0.6260436f,-0.3075491f,0.6248438f,-0.3074034f,0.6260436f,-0.3078619f,0.6248438f,-0.3654707f,0.5443049f,-0.3650121f,0.5431051f,-0.3648664f,0.5443049f,-0.3653249f,0.5431051f,-0.398048f,0.4516283f,-0.3975895f,0.4504286f,-0.3974437f,0.4516283f,-0.3979023f,0.4504286f,-0.4035197f,0.3543297f,-0.4030611f,0.35313f,-0.4029154f,0.3543297f,-0.4033739f,0.35313f,-0.3815127f,0.2590398f,-0.3810541f,0.25784f,-0.3809084f,0.2590398f,-0.3813669f,0.25784f,-0.3335269f,0.1722523f,-0.3330683f,0.1710526f,-0.3329226f,0.1722523f,-0.3333811f,0.1710526f,-0.2626866f,0.0986821f,-0.262228f,0.0998819f,-0.2628323f,0.0998819f,-0.2623738f,0.0986821f,-0.174101f,0.0456605f,-0.1736425f,0.0468602f,-0.1742468f,0.0468602f,-0.1737882f,0.0456605f,-0.0736614f,0.015601f,-0.0732029f,0.0168008f,-0.0738072f,0.0168008f,-0.0733486f,0.015601f,0.0317874f,0.0105523f,0.0322459f,0.011752f,0.0316417f,0.011752f,0.0321002f,0.0105523f,0.1350593f,0.0308583f,0.1355179f,0.0320581f,0.1349136f,0.0320581f,0.1353721f,0.0308583f,0.2291165f,0.0751353f,0.229575f,0.0763351f,0.2289708f,0.0763351f,0.2294293f,0.0751353f,0.3078619f,0.1403658f,0.3074034f,0.1415656f,0.3075491f,0.1403658f,0.3080077f,0.1415656f,0.3653249f,0.2221045f,0.3648664f,0.2233043f,0.3650121f,0.2221045f,0.3654707f,0.2233043f,};
fbt = GLBuffers.newDirectFloatBuffer(texcoordArray);
gl.glTexCoordPointer(2, GL2.GL_FLOAT, 0, fbt);
gl.glEnableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
int[] indices = {
0,0,1,1,2,2,1,1,0,0,3,3,3,3,0,0,4,4,4,4,0,0,5,5,4,4,5,5,6,6,6,6,5,5,7,7,6,6,7,7,8,8,8,8,7,7,9,9,8,8,9,9,10,10,10,10,9,9,11,11,12,12,13,13,14,14,13,13,12,12,15,15,13,13,15,15,16,16,16,16,15,15,17,17,16,16,17,17,18,18,18,18,17,17,19,19,18,18,19,19,20,20,20,20,19,19,21,21,20,20,21,21,2,2,2,2,21,21,22,22,2,2,22,22,0,0,0,0,22,22,23,23,24,24,5,25,0,26,5,25,24,24,25,27,25,27,24,24,26,28,25,29,7,30,5,31,7,30,25,29,26,32,7,30,26,32,27,33,27,34,9,35,7,36,9,35,27,34,28,37,28,38,11,39,9,40,11,39,28,38,29,41,11,42,30,43,10,44,30,43,11,42,29,45,10,46,31,47,8,48,31,47,10,46,30,49,8,50,32,51,6,52,32,51,8,50,31,53,6,54,33,55,4,56,33,55,6,54,32,57,4,58,34,59,3,60,34,59,4,58,33,61,1,62,35,63,36,64,35,63,1,62,3,65,35,63,3,65,34,66,1,67,36,68,2,69,2,69,35,70,37,71,35,70,2,69,36,68,20,72,37,73,38,74,37,73,20,72,2,75,18,76,38,77,39,78,38,77,18,76,20,79,16,80,39,81,40,82,39,81,16,80,18,83,13,84,40,85,41,86,40,85,13,84,16,87,14,88,41,89,42,90,41,89,14,88,13,91,43,92,14,93,42,94,14,93,43,92,12,95,44,96,12,97,43,98,12,97,44,96,15,99,45,100,15,101,44,102,15,101,45,100,17,103,46,104,17,105,45,106,17,105,46,104,19,107,47,108,19,109,46,110,19,109,47,108,21,111,48,112,21,113,47,114,21,113,48,112,22,115,49,116,22,117,48,118,22,117,49,116,23,119,49,120,0,121,23,122,0,121,49,120,24,123,50,124,26,125,24,126,26,125,50,124,51,127,51,128,27,129,26,130,27,129,51,128,52,131,52,132,28,133,27,134,28,133,52,132,53,135,53,136,29,137,28,138,29,137,53,136,54,139,29,140,55,141,30,142,55,141,29,140,54,143,30,144,56,145,31,146,56,145,30,144,55,147,31,148,57,149,32,150,57,149,31,148,56,151,32,152,58,153,33,154,58,153,32,152,57,155,33,156,59,157,34,158,59,157,33,156,58,159,34,160,60,161,35,162,60,161,34,160,59,163,37,164,60,165,61,166,60,165,37,164,35,167,38,168,61,169,62,170,61,169,38,168,37,171,39,172,62,173,63,174,62,173,39,172,38,175,40,176,63,177,64,178,63,177,40,176,39,179,41,180,64,181,65,182,64,181,41,180,40,183,42,184,65,185,66,186,65,185,42,184,41,187,67,188,42,189,66,190,42,189,67,188,43,191,68,192,43,193,67,194,43,193,68,192,44,195,69,196,44,197,68,198,44,197,69,196,45,199,70,200,45,201,69,202,45,201,70,200,46,203,71,204,46,205,70,206,46,205,71,204,47,207,72,208,47,209,71,210,47,209,72,208,48,211,73,212,48,213,72,214,48,213,73,212,49,215,73,216,24,217,49,218,24,217,73,216,50,219,51,220,74,221,75,222,74,221,51,220,50,223,76,224,51,225,75,226,51,225,76,224,52,227,77,228,52,229,76,230,52,229,77,228,53,231,78,232,53,233,77,234,53,233,78,232,54,235,79,236,54,237,78,238,54,237,79,236,55,239,79,240,56,241,55,242,56,241,79,240,80,243,80,244,57,245,56,246,57,245,80,244,81,247,58,248,81,249,82,250,81,249,58,248,57,251,59,252,82,253,83,254,82,253,59,252,58,255,60,256,83,257,84,258,83,257,60,256,59,259,61,260,84,261,85,262,84,261,61,260,60,263,62,264,85,265,86,266,85,265,62,264,61,267,63,268,86,269,87,270,86,269,63,268,62,271,63,272,88,273,64,274,88,273,63,272,87,275,64,276,89,277,65,278,89,277,64,276,88,279,65,280,90,281,66,282,90,281,65,280,89,283,67,284,90,285,91,286,90,285,67,284,66,287,68,288,91,289,92,290,91,289,68,288,67,291,69,292,92,293,93,294,92,293,69,292,68,295,70,296,93,297,94,298,93,297,70,296,69,299,71,300,94,301,95,302,94,301,71,300,70,303,72,304,95,305,96,306,95,305,72,304,71,307,73,308,96,309,97,310,96,309,73,308,72,311,50,312,97,313,74,314,97,313,50,312,73,315,75,316,98,317,99,318,98,317,75,316,74,319,100,320,75,321,99,322,75,321,100,320,76,323,101,324,76,325,100,326,76,325,101,324,77,327,102,328,77,329,101,330,77,329,102,328,78,331,103,332,78,333,102,334,78,333,103,332,79,335,103,336,80,337,79,338,80,337,103,336,104,339,104,340,81,341,80,342,81,341,104,340,105,343,82,344,105,345,106,346,105,345,82,344,81,347,83,348,106,349,107,350,106,349,83,348,82,351,84,352,107,353,108,354,107,353,84,352,83,355,85,356,108,357,109,358,108,357,85,356,84,359,86,360,109,361,110,362,109,361,86,360,85,363,87,364,110,365,111,366,110,365,87,364,86,367,87,368,112,369,88,370,112,369,87,368,111,371,88,372,113,373,89,374,113,373,88,372,112,375,89,376,114,377,90,378,114,377,89,376,113,379,91,380,114,381,115,382,114,381,91,380,90,383,92,384,115,385,116,386,115,385,92,384,91,387,93,388,116,389,117,390,116,389,93,388,92,391,94,392,117,393,118,394,117,393,94,392,93,395,95,396,118,397,119,398,118,397,95,396,94,399,96,400,119,401,120,402,119,401,96,400,95,403,97,404,120,405,121,406,120,405,97,404,96,407,74,408,121,409,98,410,121,409,74,408,97,411,99,412,122,413,123,414,122,413,99,412,98,415,124,416,99,417,123,418,99,417,124,416,100,419,125,420,100,421,124,422,100,421,125,420,101,423,126,424,101,425,125,426,101,425,126,424,102,427,127,428,102,429,126,430,102,429,127,428,103,431,127,432,104,433,103,434,104,433,127,432,128,435,128,436,105,437,104,438,105,437,128,436,129,439,106,440,129,441,130,442,129,441,106,440,105,443,107,444,130,445,131,446,130,445,107,444,106,447,108,448,131,449,132,450,131,449,108,448,107,451,109,452,132,453,133,454,132,453,109,452,108,455,110,456,133,457,134,458,133,457,110,456,109,459,111,460,134,461,135,462,134,461,111,460,110,463,111,464,136,465,112,466,136,465,111,464,135,467,112,468,137,469,113,470,137,469,112,468,136,471,113,472,138,473,114,474,138,473,113,472,137,475,115,476,138,477,139,478,138,477,115,476,114,479,116,480,139,481,140,482,139,481,116,480,115,483,117,484,140,485,141,486,140,485,117,484,116,487,118,488,141,489,142,490,141,489,118,488,117,491,119,492,142,493,143,494,142,493,119,492,118,495,120,496,143,497,144,498,143,497,120,496,119,499,121,500,144,501,145,502,144,501,121,500,120,503,98,504,145,505,122,506,145,505,98,504,121,507,123,508,146,509,147,510,146,509,123,508,122,511,147,512,124,513,123,514,124,513,147,512,148,515,148,516,125,517,124,518,125,517,148,516,149,519,149,520,126,521,125,522,126,521,149,520,150,523,151,524,126,525,150,526,126,525,151,524,127,527,152,528,127,529,151,530,127,529,152,528,128,531,153,532,128,533,152,534,128,533,153,532,129,535,130,536,153,537,154,538,153,537,130,536,129,539,131,540,154,541,155,542,154,541,131,540,130,543,132,544,155,545,156,546,155,545,132,544,131,547,133,548,156,549,157,550,156,549,133,548,132,551,134,552,157,553,158,554,157,553,134,552,133,555,135,556,158,557,159,558,158,557,135,556,134,559,136,560,159,561,160,562,159,561,136,560,135,563,137,564,160,565,161,566,160,565,137,564,136,567,137,568,162,569,138,570,162,569,137,568,161,571,138,572,163,573,139,574,163,573,138,572,162,575,139,576,164,577,140,578,164,577,139,576,163,579,140,580,165,581,141,582,165,581,140,580,164,583,142,584,165,585,166,586,165,585,142,584,141,587,143,588,166,589,167,590,166,589,143,588,142,591,144,592,167,593,168,594,167,593,144,592,143,595,145,596,168,597,169,598,168,597,145,596,144,599,122,600,169,601,146,602,169,601,122,600,145,603,147,604,170,605,171,606,170,605,147,604,146,607,171,608,148,609,147,610,148,609,171,608,172,611,172,612,149,613,148,614,149,613,172,612,173,615,173,616,150,617,149,618,150,617,173,616,174,619,175,620,150,621,174,622,150,621,175,620,151,623,176,624,151,625,175,626,151,625,176,624,152,627,177,628,152,629,176,630,152,629,177,628,153,631,154,632,177,633,178,634,177,633,154,632,153,635,155,636,178,637,179,638,178,637,155,636,154,639,156,640,179,641,180,642,179,641,156,640,155,643,157,644,180,645,181,646,180,645,157,644,156,647,158,648,181,649,182,650,181,649,158,648,157,651,159,652,182,653,183,654,182,653,159,652,158,655,160,656,183,657,184,658,183,657,160,656,159,659,161,660,184,661,185,662,184,661,161,660,160,663,161,664,186,665,162,666,186,665,161,664,185,667,162,668,187,669,163,670,187,669,162,668,186,671,163,672,188,673,164,674,188,673,163,672,187,675,164,676,189,677,165,678,189,677,164,676,188,679,166,680,189,681,190,682,189,681,166,680,165,683,167,684,190,685,191,686,190,685,167,684,166,687,168,688,191,689,192,690,191,689,168,688,167,691,169,692,192,693,193,694,192,693,169,692,168,695,146,696,193,697,170,698,193,697,146,696,169,699,171,700,194,701,195,702,194,701,171,700,170,703,195,704,172,705,171,706,172,705,195,704,196,707,196,708,173,709,172,710,173,709,196,708,197,711,197,712,174,713,173,714,174,713,197,712,198,715,198,716,175,717,174,718,175,717,198,716,199,719,200,720,175,721,199,722,175,721,200,720,176,723,201,724,176,725,200,726,176,725,201,724,177,727,178,728,201,729,202,730,201,729,178,728,177,731,179,732,202,733,203,734,202,733,179,732,178,735,180,736,203,737,204,738,203,737,180,736,179,739,181,740,204,741,205,742,204,741,181,740,180,743,182,744,205,745,206,746,205,745,182,744,181,747,183,748,206,749,207,750,206,749,183,748,182,751,184,752,207,753,208,754,207,753,184,752,183,755,185,756,208,757,209,758,208,757,185,756,184,759,185,760,210,761,186,762,210,761,185,760,209,763,186,764,211,765,187,766,211,765,186,764,210,767,187,768,212,769,188,770,212,769,187,768,211,771,188,772,213,773,189,774,213,773,188,772,212,775,190,776,213,777,214,778,213,777,190,776,189,779,191,780,214,781,215,782,214,781,191,780,190,783,192,784,215,785,216,786,215,785,192,784,191,787,193,788,216,789,217,790,216,789,193,788,192,791,170,792,217,793,194,794,217,793,170,792,193,795,218,796,194,797,219,798,194,797,218,796,195,799,220,800,195,801,218,802,195,801,220,800,196,803,221,804,196,805,220,806,196,805,221,804,197,807,222,808,197,809,221,810,197,809,222,808,198,811,199,812,222,813,223,814,222,813,199,812,198,815,200,816,223,817,224,818,223,817,200,816,199,819,201,820,224,821,225,822,224,821,201,820,200,823,202,824,225,825,226,826,225,825,202,824,201,827,203,828,226,829,227,830,226,829,203,828,202,831,203,832,228,833,204,834,228,833,203,832,227,835,204,836,229,837,205,838,229,837,204,836,228,839,205,840,230,841,206,842,230,841,205,840,229,843,206,844,231,845,207,846,231,845,206,844,230,847,207,848,232,849,208,850,232,849,207,848,231,851,208,852,233,853,209,854,233,853,208,852,232,855,209,856,234,857,210,858,234,857,209,856,233,859,234,860,211,861,210,862,211,861,234,860,235,863,235,864,212,865,211,866,212,865,235,864,236,867,236,868,213,869,212,870,213,869,236,868,237,871,237,872,214,873,213,874,214,873,237,872,238,875,238,876,215,877,214,878,215,877,238,876,239,879,239,880,216,881,215,882,216,881,239,880,240,883,241,884,216,885,240,886,216,885,241,884,217,887,219,888,217,889,241,890,217,889,219,888,194,891,242,892,219,893,243,894,219,893,242,892,218,895,244,896,218,897,242,898,218,897,244,896,220,899,245,900,220,901,244,902,220,901,245,900,221,903,246,904,221,905,245,906,221,905,246,904,222,907,223,908,246,909,247,910,246,909,223,908,222,911,224,912,247,913,248,914,247,913,224,912,223,915,225,916,248,917,249,918,248,917,225,916,224,919,226,920,249,921,250,922,249,921,226,920,225,923,227,924,250,925,251,926,250,925,227,924,226,927,227,928,252,929,228,930,252,929,227,928,251,931,228,932,253,933,229,934,253,933,228,932,252,935,229,936,254,937,230,938,254,937,229,936,253,939,230,940,255,941,231,942,255,941,230,940,254,943,231,944,256,945,232,946,256,945,231,944,255,947,232,948,257,949,233,950,257,949,232,948,256,951,233,952,258,953,234,954,258,953,233,952,257,955,258,956,235,957,234,958,235,957,258,956,259,959,259,960,236,961,235,962,236,961,259,960,260,963,260,964,237,965,236,966,237,965,260,964,261,967,261,968,238,969,237,970,238,969,261,968,262,971,262,972,239,973,238,974,239,973,262,972,263,975,263,976,240,977,239,978,240,977,263,976,264,979,265,980,240,981,264,982,240,981,265,980,241,983,243,984,241,985,265,986,241,985,243,984,219,987,};
IntBuffer fbi = GLBuffers.newDirectIntBuffer(indices, 0);
gl.glDisableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
gl.glBegin(GL2.GL_TRIANGLES);
	for (int i=0; i<indices.length-1; i+=2) {
		int vertexIndex = indices[i];
		int textureIndex = indices[i+1];
		try {
		gl.glTexCoord2f(texcoordArray[textureIndex*2], -(texcoordArray[textureIndex*2+1]));
		} catch (ArrayIndexOutOfBoundsException e) {
			System.out.println(e);
		}
		gl.glArrayElement(vertexIndex);
	}
gl.glEnd();
gl.glDisable(GL2.GL_TEXTURE_2D);
gl.glDisable(GL2.GL_BLEND);
}
gl.glDisableClientState(GL2.GL_VERTEX_ARRAY);
gl.glDisableClientState(GL2.GL_NORMAL_ARRAY);
gl.glDisableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
}
private void ID193(GL2 gl){
float[] positionsArray = {
14.572059f,16.251963f,54.215466f,14.690595f,16.251963f,54.174328f,14.572059f,16.251963f,54.174328f,14.690595f,16.251963f,54.215466f,14.572059f,16.202864f,54.174328f,14.572059f,16.202864f,54.215466f,14.690595f,16.251963f,54.215466f,14.572059f,16.202864f,54.215466f,14.572059f,16.251963f,54.215466f,14.690595f,16.202864f,54.215466f,14.690595f,16.202864f,54.215466f,14.690595f,16.202864f,54.174328f,};
FloatBuffer fbv = GLBuffers.newDirectFloatBuffer(positionsArray, 0);
gl.glVertexPointer(3, GL2.GL_FLOAT, 0, fbv);
gl.glEnableClientState(GL2.GL_VERTEX_ARRAY);
FloatBuffer fbn = null;
float[] normalsArray = {
-0.3015113f,0.3015113f,0.904534f,0.3015113f,0.3015113f,0.904534f,-0.3015113f,0.3015113f,0.904534f,0.3015113f,0.3015113f,0.904534f,-0.8241393f,-0.5118421f,0.2425122f,-0.3015113f,-0.3015113f,0.904534f,-0.3015113f,-0.3015113f,-0.904534f,0.3015113f,0.3015113f,-0.904534f,0.3015113f,-0.3015113f,-0.904534f,-0.3015113f,0.3015113f,-0.904534f,0.3015113f,-0.3015113f,0.904534f,0.8241393f,-0.5118421f,0.2425122f,};
fbn = GLBuffers.newDirectFloatBuffer(normalsArray, 0);
gl.glNormalPointer(GL2.GL_FLOAT, 0, fbn);
gl.glEnableClientState(GL2.GL_NORMAL_ARRAY);
FloatBuffer fbt = null;
float[] texcoordArray = null;
{
gl.glEnable(GL2.GL_TEXTURE_2D);
gl.glEnable(GL2.GL_BLEND);
gl.glBlendFunc(GL2.GL_SRC_ALPHA, GL2.GL_ONE_MINUS_SRC_ALPHA);
ID143.bind(gl);
texcoordArray = new float[] {
-0.2698529f,1.00399f,-0.272048f,1.0032283f,-0.2698529f,1.0032283f,-0.272048f,1.00399f,-0.3009623f,1.00399f,-0.300053f,1.0032283f,-0.300053f,1.00399f,-0.3009623f,1.0032283f,-0.272048f,0.300053f,-0.272048f,0.3009623f,-0.2698529f,0.300053f,-0.2698529f,0.3009623f,0.3009623f,1.0032283f,0.300053f,1.00399f,0.300053f,1.0032283f,0.3009623f,1.00399f,0.272048f,1.00399f,0.2698529f,1.0032283f,0.272048f,1.0032283f,0.2698529f,1.00399f,};
fbt = GLBuffers.newDirectFloatBuffer(texcoordArray);
gl.glTexCoordPointer(2, GL2.GL_FLOAT, 0, fbt);
gl.glEnableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
int[] indices = {
0,0,1,1,2,2,1,1,0,0,3,3,0,4,4,5,5,6,4,5,0,4,2,7,10,8,3,9,5,10,0,11,5,10,3,9,1,12,10,13,11,14,10,13,1,12,3,15,10,16,4,17,11,18,4,17,10,16,5,19,};
IntBuffer fbi = GLBuffers.newDirectIntBuffer(indices, 0);
gl.glDisableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
gl.glBegin(GL2.GL_TRIANGLES);
	for (int i=0; i<indices.length-1; i+=2) {
		int vertexIndex = indices[i];
		int textureIndex = indices[i+1];
		try {
		gl.glTexCoord2f(texcoordArray[textureIndex*2], -(texcoordArray[textureIndex*2+1]));
		} catch (ArrayIndexOutOfBoundsException e) {
			System.out.println(e);
		}
		gl.glArrayElement(vertexIndex);
	}
gl.glEnd();
gl.glDisable(GL2.GL_TEXTURE_2D);
gl.glDisable(GL2.GL_BLEND);
}
{
gl.glColor4d(1.0, 1.0, 1.0, 1.0);
int[] indices = {
6,7,8,7,6,9,};
IntBuffer fbi = GLBuffers.newDirectIntBuffer(indices, 0);
gl.glDrawElements(GL2.GL_TRIANGLES, 6, GL2.GL_UNSIGNED_INT, fbi);
gl.glDisable(GL2.GL_TEXTURE_2D);
gl.glDisable(GL2.GL_BLEND);
}
gl.glDisableClientState(GL2.GL_VERTEX_ARRAY);
gl.glDisableClientState(GL2.GL_NORMAL_ARRAY);
gl.glDisableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
}
private void ID201(GL2 gl){
float[] positionsArray = {
14.580432f,16.18836f,54.174328f,14.690595f,16.202864f,54.174328f,14.572059f,16.202864f,54.174328f,14.592274f,16.17652f,54.174328f,14.606776f,16.168146f,54.174328f,14.622952f,16.16381f,54.174328f,14.631327f,16.16381f,54.174328f,14.6397f,16.16381f,54.174328f,14.655876f,16.168146f,54.174328f,14.670379f,16.17652f,54.174328f,14.68222f,16.18836f,54.174328f,14.690595f,16.202864f,53.899353f,14.68222f,16.18836f,53.899353f,14.580432f,16.18836f,53.899353f,14.572059f,16.202864f,53.899353f,14.592274f,16.17652f,53.899353f,14.606776f,16.168146f,53.899353f,14.622952f,16.16381f,53.899353f,14.6397f,16.16381f,53.899353f,14.655876f,16.168146f,53.924328f,14.655876f,16.168146f,53.899353f,14.670379f,16.17652f,53.924328f,14.670379f,16.17652f,53.899353f,14.694929f,16.21904f,53.899353f,14.694929f,16.21904f,54.174328f,14.567724f,16.21904f,54.174328f,14.567724f,16.21904f,53.899353f,14.694929f,16.235786f,53.899353f,14.694929f,16.235786f,54.174328f,14.567724f,16.235786f,54.174328f,14.567724f,16.235786f,53.899353f,14.690595f,16.251963f,53.899353f,14.690595f,16.251963f,54.174328f,14.572059f,16.251963f,54.174328f,14.572059f,16.251963f,53.899353f,14.68222f,16.266466f,53.899353f,14.68222f,16.266466f,54.174328f,14.580432f,16.266466f,54.174328f,14.580432f,16.266466f,53.899353f,14.670379f,16.278309f,54.174328f,14.670379f,16.278309f,53.899353f,14.592274f,16.278309f,54.174328f,14.592274f,16.278309f,53.899353f,14.655876f,16.286682f,54.174328f,14.655876f,16.286682f,53.899353f,14.606776f,16.286682f,53.899353f,14.606776f,16.286682f,53.924328f,14.606776f,16.286682f,54.174328f,14.6397f,16.291016f,54.174328f,14.6397f,16.291016f,53.899353f,14.622952f,16.291016f,53.899353f,14.622952f,16.291016f,53.924328f,14.622952f,16.291016f,54.174328f,14.631327f,16.291016f,54.174328f,};
FloatBuffer fbv = GLBuffers.newDirectFloatBuffer(positionsArray, 0);
gl.glVertexPointer(3, GL2.GL_FLOAT, 0, fbv);
gl.glEnableClientState(GL2.GL_VERTEX_ARRAY);
FloatBuffer fbn = null;
float[] normalsArray = {
-0.5825232f,-0.4469858f,0.6788744f,0.8241393f,-0.5118421f,0.2425122f,-0.8241393f,-0.5118421f,0.2425122f,-0.4469858f,-0.5825232f,0.6788744f,-0.280987f,-0.6783626f,0.6788744f,-0.0958394f,-0.7279728f,0.6788744f,0.0f,-0.7071068f,0.7071068f,0.0958394f,-0.7279728f,0.6788744f,0.280987f,-0.6783626f,0.6788744f,0.4469858f,-0.5825232f,0.6788744f,0.5825232f,-0.4469858f,0.6788744f,0.6783626f,-0.280987f,-0.6788744f,0.5825232f,-0.4469858f,-0.6788744f,-0.5825232f,-0.4469858f,-0.6788744f,-0.6783626f,-0.280987f,-0.6788744f,-0.4469858f,-0.5825232f,-0.6788744f,-0.280987f,-0.6783626f,-0.6788744f,-0.0958394f,-0.7279728f,-0.6788744f,0.0958394f,-0.7279728f,-0.6788744f,0.3826834f,-0.9238795f,-0.0f,0.280987f,-0.6783626f,-0.6788744f,0.6087614f,-0.7933533f,-0.0f,0.4469858f,-0.5825232f,-0.6788744f,0.7279728f,-0.0958394f,-0.6788744f,0.7279728f,-0.0958394f,0.6788744f,-0.7279728f,-0.0958394f,0.6788744f,-0.7279728f,-0.0958394f,-0.6788744f,0.7279728f,0.0958394f,-0.6788744f,0.7279728f,0.0958394f,0.6788744f,-0.7279728f,0.0958394f,0.6788744f,-0.7279728f,0.0958394f,-0.6788744f,0.6783626f,0.280987f,-0.6788744f,0.6783626f,0.280987f,0.6788744f,-0.6783626f,0.280987f,0.6788744f,-0.6783626f,0.280987f,-0.6788744f,0.5825232f,0.4469858f,-0.6788744f,0.5825232f,0.4469858f,0.6788744f,-0.5825232f,0.4469858f,0.6788744f,-0.5825232f,0.4469858f,-0.6788744f,0.4469858f,0.5825232f,0.6788744f,0.4469858f,0.5825232f,-0.6788744f,-0.4469858f,0.5825232f,0.6788744f,-0.4469858f,0.5825232f,-0.6788744f,0.280987f,0.6783626f,0.6788744f,0.280987f,0.6783626f,-0.6788744f,-0.280987f,0.6783626f,-0.6788744f,-0.3826834f,0.9238795f,-0.0f,-0.280987f,0.6783626f,0.6788744f,0.0958394f,0.7279728f,0.6788744f,0.0958394f,0.7279728f,-0.6788744f,-0.0958394f,0.7279728f,-0.6788744f,-0.1305262f,0.9914449f,0.0f,-0.0958394f,0.7279728f,0.6788744f,-0.0f,0.7071068f,0.7071068f,};
fbn = GLBuffers.newDirectFloatBuffer(normalsArray, 0);
gl.glNormalPointer(GL2.GL_FLOAT, 0, fbn);
gl.glEnableClientState(GL2.GL_NORMAL_ARRAY);
FloatBuffer fbt = null;
float[] texcoordArray = null;
{
gl.glColor4d(0.1372549, 0.1372549, 0.1372549, 1.0);
int[] indices = {
0,1,2,1,0,3,1,3,4,1,4,5,1,5,6,1,6,7,1,7,8,1,8,9,1,9,10,11,10,12,10,11,1,2,13,0,13,2,14,0,15,3,15,0,13,4,15,16,15,4,3,5,16,17,16,5,4,7,17,18,17,7,5,5,7,6,19,18,20,18,19,7,7,19,8,21,20,22,20,21,19,19,21,9,19,9,8,10,22,12,22,10,21,21,10,9,23,1,11,1,23,24,25,14,2,14,25,26,27,24,23,24,27,28,29,26,25,26,29,30,31,28,27,28,31,32,33,30,29,30,33,34,35,32,31,32,35,36,37,34,33,34,37,38,39,35,40,35,39,36,41,38,37,38,41,42,43,40,44,40,43,39,41,45,42,45,41,46,46,41,47,48,44,49,44,48,43,46,50,45,50,46,51,51,46,47,51,47,52,51,49,50,49,51,48,48,51,52,48,52,53,};
IntBuffer fbi = GLBuffers.newDirectIntBuffer(indices, 0);
gl.glDrawElements(GL2.GL_TRIANGLES, 201, GL2.GL_UNSIGNED_INT, fbi);
gl.glDisable(GL2.GL_TEXTURE_2D);
gl.glDisable(GL2.GL_BLEND);
}
gl.glDisableClientState(GL2.GL_VERTEX_ARRAY);
gl.glDisableClientState(GL2.GL_NORMAL_ARRAY);
gl.glDisableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
}
private void ID207(GL2 gl){
float[] positionsArray = {
14.694929f,16.21904f,54.174328f,14.690595f,16.251963f,54.174328f,14.690595f,16.202864f,54.174328f,14.694929f,16.235786f,54.174328f,14.580432f,16.266466f,54.174328f,14.572059f,16.251963f,54.174328f,14.592274f,16.278309f,54.174328f,14.606776f,16.286682f,54.174328f,14.622952f,16.291016f,54.174328f,14.631327f,16.291016f,54.174328f,14.6397f,16.291016f,54.174328f,14.655876f,16.286682f,54.174328f,14.670379f,16.278309f,54.174328f,14.68222f,16.266466f,54.174328f,14.572059f,16.202864f,54.174328f,14.567724f,16.235786f,54.174328f,14.567724f,16.21904f,54.174328f,};
FloatBuffer fbv = GLBuffers.newDirectFloatBuffer(positionsArray, 0);
gl.glVertexPointer(3, GL2.GL_FLOAT, 0, fbv);
gl.glEnableClientState(GL2.GL_VERTEX_ARRAY);
FloatBuffer fbn = null;
float[] normalsArray = {
0.7279728f,-0.0958394f,0.6788744f,0.3015113f,0.3015113f,0.904534f,0.8241393f,-0.5118421f,0.2425122f,0.7279728f,0.0958394f,0.6788744f,-0.5825232f,0.4469858f,0.6788744f,-0.3015113f,0.3015113f,0.904534f,-0.4469858f,0.5825232f,0.6788744f,-0.280987f,0.6783626f,0.6788744f,-0.0958394f,0.7279728f,0.6788744f,-0.0f,0.7071068f,0.7071068f,0.0958394f,0.7279728f,0.6788744f,0.280987f,0.6783626f,0.6788744f,0.4469858f,0.5825232f,0.6788744f,0.5825232f,0.4469858f,0.6788744f,-0.8241393f,-0.5118421f,0.2425122f,-0.7279728f,0.0958394f,0.6788744f,-0.7279728f,-0.0958394f,0.6788744f,};
fbn = GLBuffers.newDirectFloatBuffer(normalsArray, 0);
gl.glNormalPointer(GL2.GL_FLOAT, 0, fbn);
gl.glEnableClientState(GL2.GL_NORMAL_ARRAY);
FloatBuffer fbt = null;
float[] texcoordArray = null;
{
gl.glColor4d(1.0, 1.0, 1.0, 1.0);
int[] indices = {
0,1,2,1,0,3,1,4,5,4,1,6,6,1,7,7,1,8,8,1,9,9,1,10,10,1,11,11,1,12,12,1,13,14,15,16,15,14,5,};
IntBuffer fbi = GLBuffers.newDirectIntBuffer(indices, 0);
gl.glDrawElements(GL2.GL_TRIANGLES, 39, GL2.GL_UNSIGNED_INT, fbi);
gl.glDisable(GL2.GL_TEXTURE_2D);
gl.glDisable(GL2.GL_BLEND);
}
gl.glDisableClientState(GL2.GL_VERTEX_ARRAY);
gl.glDisableClientState(GL2.GL_NORMAL_ARRAY);
gl.glDisableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
}
private void ID213(GL2 gl){
float[] positionsArray = {
14.977077f,15.870628f,53.74755f,14.873524f,15.791169f,53.682846f,14.977077f,15.870628f,53.682846f,14.873524f,15.791169f,53.74755f,15.056537f,15.974181f,53.682846f,15.056537f,15.974181f,53.74755f,14.14056f,16.094772f,53.74755f,14.14056f,16.353592f,53.74755f,14.123524f,16.224182f,53.74755f,14.190511f,15.974181f,53.74755f,14.190511f,16.474182f,53.74755f,14.26997f,15.870628f,53.74755f,14.26997f,16.577734f,53.74755f,14.373524f,15.791169f,53.74755f,14.373524f,16.657194f,53.74755f,14.494114f,15.741219f,53.74755f,14.494114f,16.707144f,53.74755f,14.623524f,15.724181f,53.74755f,14.623524f,16.724182f,53.74755f,14.752933f,15.741219f,53.74755f,14.752933f,16.707144f,53.74755f,14.873524f,16.657194f,53.74755f,14.977077f,16.577734f,53.74755f,15.056537f,16.474182f,53.74755f,15.106486f,16.094772f,53.74755f,15.106486f,16.353592f,53.74755f,15.123524f,16.224182f,53.74755f,14.752933f,15.741219f,53.682846f,15.106486f,16.094772f,53.682846f,14.623524f,15.724181f,53.682846f,15.123524f,16.224182f,53.682846f,15.106486f,16.353592f,53.682846f,15.056537f,16.474182f,53.682846f,14.977077f,16.577734f,53.682846f,14.873524f,16.657194f,53.682846f,14.752933f,16.707144f,53.682846f,14.623524f,16.724182f,53.682846f,14.494114f,16.707144f,53.682846f,14.373524f,16.657194f,53.682846f,14.26997f,16.577734f,53.682846f,14.190511f,16.474182f,53.682846f,14.14056f,16.353592f,53.682846f,14.123524f,16.224182f,53.682846f,14.14056f,16.094772f,53.682846f,14.190511f,15.974181f,53.682846f,14.26997f,15.870628f,53.682846f,14.373524f,15.791169f,53.682846f,14.494114f,15.741219f,53.682846f,};
FloatBuffer fbv = GLBuffers.newDirectFloatBuffer(positionsArray, 0);
gl.glVertexPointer(3, GL2.GL_FLOAT, 0, fbv);
gl.glEnableClientState(GL2.GL_VERTEX_ARRAY);
FloatBuffer fbn = null;
float[] normalsArray = {
0.5191963f,-0.5191963f,0.6788744f,0.5f,-0.8660254f,0.0f,0.7071068f,-0.7071068f,0.0f,0.3671272f,-0.635883f,0.6788744f,0.8660254f,-0.5f,0.0f,0.635883f,-0.3671272f,0.6788744f,-0.7092353f,-0.190039f,0.6788744f,-0.7092353f,0.190039f,0.6788744f,-0.7342544f,0.0f,0.6788744f,-0.635883f,-0.3671272f,0.6788744f,-0.635883f,0.3671272f,0.6788744f,-0.5191963f,-0.5191963f,0.6788744f,-0.5191963f,0.5191963f,0.6788744f,-0.3671272f,-0.635883f,0.6788744f,-0.3671272f,0.635883f,0.6788744f,-0.190039f,-0.7092353f,0.6788744f,-0.190039f,0.7092353f,0.6788744f,-0.0f,-0.7342544f,0.6788744f,-0.0f,0.7342544f,0.6788744f,0.190039f,-0.7092353f,0.6788744f,0.190039f,0.7092353f,0.6788744f,0.3671272f,0.635883f,0.6788744f,0.5191963f,0.5191963f,0.6788744f,0.635883f,0.3671272f,0.6788744f,0.7092353f,-0.190039f,0.6788744f,0.7092353f,0.190039f,0.6788744f,0.7342544f,0.0f,0.6788744f,0.258819f,-0.9659258f,0.0f,0.9659258f,-0.258819f,0.0f,-0.0f,-1.0f,0.0f,1.0f,0.0f,-0.0f,0.9659258f,0.258819f,0.0f,0.8660254f,0.5f,0.0f,0.7071068f,0.7071068f,0.0f,0.5f,0.8660254f,0.0f,0.258819f,0.9659258f,-0.0f,-0.0f,1.0f,-0.0f,-0.258819f,0.9659258f,-0.0f,-0.5f,0.8660254f,0.0f,-0.7071068f,0.7071068f,0.0f,-0.8660254f,0.5f,0.0f,-0.9659258f,0.258819f,-0.0f,-1.0f,0.0f,-0.0f,-0.9659258f,-0.258819f,-0.0f,-0.8660254f,-0.5f,0.0f,-0.7071068f,-0.7071068f,0.0f,-0.5f,-0.8660254f,0.0f,-0.258819f,-0.9659258f,0.0f,};
fbn = GLBuffers.newDirectFloatBuffer(normalsArray, 0);
gl.glNormalPointer(GL2.GL_FLOAT, 0, fbn);
gl.glEnableClientState(GL2.GL_NORMAL_ARRAY);
FloatBuffer fbt = null;
float[] texcoordArray = null;
{
gl.glColor4d(0.1372549, 0.1372549, 0.1372549, 1.0);
int[] indices = {
0,1,2,1,0,3,4,0,2,0,4,5,6,7,8,7,6,9,7,9,10,10,9,11,10,11,12,12,11,13,12,13,14,14,13,15,14,15,16,16,15,17,16,17,18,18,17,19,18,19,20,20,19,3,20,3,21,21,3,0,21,0,22,22,0,5,22,5,23,23,5,24,23,24,25,25,24,26,3,27,1,27,3,19,28,5,4,5,28,24,19,29,27,29,19,17,30,24,28,24,30,26,31,26,30,26,31,25,32,25,31,25,32,23,33,23,32,23,33,22,21,33,34,33,21,22,20,34,35,34,20,21,18,35,36,35,18,20,16,36,37,36,16,18,14,37,38,37,14,16,12,38,39,38,12,14,12,40,10,40,12,39,10,41,7,41,10,40,7,42,8,42,7,41,8,43,6,43,8,42,6,44,9,44,6,43,9,45,11,45,9,44,13,45,46,45,13,11,15,46,47,46,15,13,17,47,29,47,17,15,};
IntBuffer fbi = GLBuffers.newDirectIntBuffer(indices, 0);
gl.glDrawElements(GL2.GL_TRIANGLES, 210, GL2.GL_UNSIGNED_INT, fbi);
gl.glDisable(GL2.GL_TEXTURE_2D);
gl.glDisable(GL2.GL_BLEND);
}
gl.glDisableClientState(GL2.GL_VERTEX_ARRAY);
gl.glDisableClientState(GL2.GL_NORMAL_ARRAY);
gl.glDisableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
}
private void ID219(GL2 gl){
float[] positionsArray = {
14.572059f,16.251963f,53.899353f,14.567724f,16.21904f,53.899353f,14.567724f,16.235786f,53.899353f,14.572059f,16.202864f,53.899353f,14.580432f,16.266466f,53.899353f,14.580432f,16.18836f,53.899353f,14.592274f,16.278309f,53.899353f,14.592274f,16.17652f,53.899353f,14.606776f,16.286682f,53.899353f,14.606776f,16.168146f,53.899353f,14.622952f,16.291016f,53.899353f,14.622952f,16.16381f,53.899353f,14.6397f,16.291016f,53.899353f,14.6397f,16.16381f,53.899353f,14.655876f,16.286682f,53.899353f,14.655876f,16.168146f,53.899353f,14.670379f,16.278309f,53.899353f,14.670379f,16.17652f,53.899353f,14.68222f,16.266466f,53.899353f,14.68222f,16.18836f,53.899353f,14.690595f,16.251963f,53.899353f,14.690595f,16.202864f,53.899353f,14.694929f,16.235786f,53.899353f,14.694929f,16.21904f,53.899353f,};
FloatBuffer fbv = GLBuffers.newDirectFloatBuffer(positionsArray, 0);
gl.glVertexPointer(3, GL2.GL_FLOAT, 0, fbv);
gl.glEnableClientState(GL2.GL_VERTEX_ARRAY);
FloatBuffer fbn = null;
float[] normalsArray = {
-0.6783626f,0.280987f,-0.6788744f,-0.7279728f,-0.0958394f,-0.6788744f,-0.7279728f,0.0958394f,-0.6788744f,-0.6783626f,-0.280987f,-0.6788744f,-0.5825232f,0.4469858f,-0.6788744f,-0.5825232f,-0.4469858f,-0.6788744f,-0.4469858f,0.5825232f,-0.6788744f,-0.4469858f,-0.5825232f,-0.6788744f,-0.280987f,0.6783626f,-0.6788744f,-0.280987f,-0.6783626f,-0.6788744f,-0.0958394f,0.7279728f,-0.6788744f,-0.0958394f,-0.7279728f,-0.6788744f,0.0958394f,0.7279728f,-0.6788744f,0.0958394f,-0.7279728f,-0.6788744f,0.280987f,0.6783626f,-0.6788744f,0.280987f,-0.6783626f,-0.6788744f,0.4469858f,0.5825232f,-0.6788744f,0.4469858f,-0.5825232f,-0.6788744f,0.5825232f,0.4469858f,-0.6788744f,0.5825232f,-0.4469858f,-0.6788744f,0.6783626f,0.280987f,-0.6788744f,0.6783626f,-0.280987f,-0.6788744f,0.7279728f,0.0958394f,-0.6788744f,0.7279728f,-0.0958394f,-0.6788744f,};
fbn = GLBuffers.newDirectFloatBuffer(normalsArray, 0);
gl.glNormalPointer(GL2.GL_FLOAT, 0, fbn);
gl.glEnableClientState(GL2.GL_NORMAL_ARRAY);
FloatBuffer fbt = null;
float[] texcoordArray = null;
{
gl.glColor4d(1.0, 1.0, 1.0, 1.0);
int[] indices = {
0,1,2,1,0,3,3,0,4,3,4,5,5,4,6,5,6,7,7,6,8,7,8,9,9,8,10,9,10,11,11,10,12,11,12,13,13,12,14,13,14,15,15,14,16,15,16,17,17,16,18,17,18,19,19,18,20,19,20,21,21,20,22,21,22,23,};
IntBuffer fbi = GLBuffers.newDirectIntBuffer(indices, 0);
gl.glDrawElements(GL2.GL_TRIANGLES, 66, GL2.GL_UNSIGNED_INT, fbi);
gl.glDisable(GL2.GL_TEXTURE_2D);
gl.glDisable(GL2.GL_BLEND);
}
gl.glDisableClientState(GL2.GL_VERTEX_ARRAY);
gl.glDisableClientState(GL2.GL_NORMAL_ARRAY);
gl.glDisableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
}
}
