//Compiled from SwordHit by SketchupModelJAXB

package weapons;
import javax.media.opengl.GL2;
import javax.media.opengl.glu.GLU;

import game.Building;
import game.PlayerStats;

import java.nio.DoubleBuffer;
import java.nio.FloatBuffer;
import java.nio.IntBuffer;

import com.jogamp.opengl.util.GLBuffers;

import java.util.HashMap;
import java.util.Map;
public class SwordHit extends Projectile
{
private int displayList = -1;
private Map<String, com.jogamp.opengl.util.texture.Texture> imageMap = new HashMap<String, com.jogamp.opengl.util.texture.Texture>(); // map of ID's to textures
public SwordHit(float x, float y, float z, float angle, float y_angle,PlayerStats s){
	super(s);
	setProjX(x);
	setProjY(y);
	setProjZ(z);
	setProjAngle(angle);
    setProjYAngle(y_angle);
    
}
public void draw(GL2 gl, GLU glu) {
  gl.glCallList(displayList);
}
private com.jogamp.opengl.util.texture.Texture ID87;
private void generate(GL2 gl, GLU glu){
ID87 = Building.setupTexture(gl, "SwordHit/Metal_Corrogated_Shiny.jpg", "sketchupModels");

displayList = gl.glGenLists(1);
gl.glNewList(displayList, GL2.GL_COMPILE);
  gl.glPushAttrib(GL2.GL_POLYGON_BIT);
    gl.glFrontFace(GL2.GL_CCW);
    gl.glCullFace(GL2.GL_BACK);
    gl.glEnable(GL2.GL_CULL_FACE);
gl.glPushMatrix();
gl.glScaled(0.08333333333333333, 0.08333333333333333, 0.08333333333333333);
gl.glRotatef(-90,1,0,0);
ID2(gl);
ID10(gl);
ID20(gl);
ID26(gl);
ID32(gl);
ID38(gl);
ID46(gl);
ID52(gl);
ID60(gl);
ID66(gl);
ID72(gl);
ID78(gl);
ID84(gl);
ID97(gl);
ID103(gl);
ID109(gl);
ID115(gl);
ID121(gl);
ID127(gl);
ID133(gl);
ID139(gl);
ID147(gl);
ID153(gl);
ID159(gl);
ID163(gl);
       gl.glPopMatrix();
   gl.glPopAttrib();
gl.glEndList();
}
//Trailer


private void ID2(GL2 gl){
float[] positionsArray = {
144.101f,39.33021f,-2.453702f,144.101f,38.37651f,-1.5f,143.9797f,38.37651f,-2.421206f,144.2265f,39.33021f,-1.5f,143.9797f,38.37651f,-0.5787944f,144.101f,39.33021f,-0.5462977f,143.9797f,38.37651f,-2.421206f,143.7329f,37.4878f,-1.5f,143.6241f,37.4878f,-2.32593f,144.101f,38.37651f,-1.5f,143.7329f,39.33021f,-3.342411f,143.6241f,38.37651f,-3.279633f,143.9797f,40.28392f,-2.421206f,144.2265f,39.33021f,-1.5f,144.101f,39.33021f,-2.453702f,144.101f,40.28392f,-1.5f,143.6241f,38.37651f,0.2796327f,143.7329f,39.33021f,0.3424113f,143.6241f,37.4878f,-0.6740696f,143.9797f,38.37651f,-0.5787944f,144.101f,39.33021f,-0.5462977f,143.9797f,40.28392f,-0.5787944f,143.6241f,37.4878f,-2.32593f,143.1473f,36.72465f,-1.5f,143.0585f,36.72465f,-2.174369f,143.7329f,37.4878f,-1.5f,143.6241f,38.37651f,-3.279633f,143.3053f,37.4878f,-3.095575f,143.1473f,39.33021f,-4.105563f,143.0585f,38.37651f,-4.016781f,143.6241f,40.28392f,-3.279633f,143.7329f,39.33021f,-3.342411f,143.6241f,41.17263f,-2.32593f,144.101f,40.28392f,-1.5f,143.9797f,40.28392f,-2.421206f,143.7329f,41.17263f,-1.5f,143.0585f,38.37651f,1.016781f,143.1473f,39.33021f,1.105563f,143.3053f,37.4878f,0.09557499f,143.6241f,38.37651f,0.2796327f,143.7329f,39.33021f,0.3424113f,143.6241f,40.28392f,0.2796327f,143.0585f,36.72465f,-0.8256307f,143.6241f,37.4878f,-0.6740696f,143.9797f,40.28392f,-0.5787944f,143.6241f,41.17263f,-0.6740696f,143.1473f,36.72465f,-1.5f,142.3213f,36.13906f,-1.976851f,143.0585f,36.72465f,-2.174369f,142.3841f,36.13906f,-1.5f,143.3053f,37.4878f,-3.095575f,142.7982f,36.72465f,-2.802782f,143.0585f,38.37651f,-4.016781f,142.7982f,37.4878f,-3.756484f,142.3841f,39.33021f,-4.69115f,142.3213f,38.37651f,-4.582414f,143.0585f,40.28392f,-4.016781f,143.1473f,39.33021f,-4.105563f,143.3053f,41.17263f,-3.095575f,143.6241f,40.28392f,-3.279633f,143.0585f,41.93578f,-2.174369f,143.7329f,41.17263f,-1.5f,143.6241f,41.17263f,-2.32593f,143.1473f,41.93578f,-1.5f,142.3841f,39.33021f,1.69115f,142.3213f,38.37651f,1.582414f,142.7982f,37.4878f,0.7564838f,143.0585f,38.37651f,1.016781f,143.1473f,39.33021f,1.105563f,143.0585f,40.28392f,1.016781f,142.7982f,36.72465f,-0.1972185f,143.3053f,37.4878f,0.09557499f,143.6241f,40.28392f,0.2796327f,143.3053f,41.17263f,0.09557499f,143.0585f,36.72465f,-0.8256307f,142.3213f,36.13906f,-1.023149f,143.6241f,41.17263f,-0.6740696f,143.0585f,41.93578f,-0.8256307f,142.3841f,36.13906f,-1.5f,141.4629f,35.77095f,-1.746836f,142.3213f,36.13906f,-1.976851f,141.4954f,35.77095f,-1.5f,142.1373f,36.13906f,-2.421206f,142.7982f,36.72465f,-2.802782f,142.7982f,37.4878f,-3.756484f,142.3841f,36.72465f,-3.342411f,142.3213f,38.37651f,-4.582414f,142.1373f,37.4878f,-4.263617f,141.4954f,39.33021f,-5.059265f,141.4629f,38.37651f,-4.937986f,142.3841f,39.33021f,-4.69115f,142.3213f,40.28392f,-4.582414f,142.7982f,41.17263f,-3.756484f,143.0585f,40.28392f,-4.016781f,142.7982f,41.93578f,-2.802782f,143.3053f,41.17263f,-3.095575f,142.3213f,42.52136f,-1.976851f,143.1473f,41.93578f,-1.5f,143.0585f,41.93578f,-2.174369f,142.3841f,42.52136f,-1.5f,141.4954f,39.33021f,2.059265f,141.4629f,38.37651f,1.937986f,142.3213f,38.37651f,1.582414f,142.1373f,37.4878f,1.263617f,142.3841f,39.33021f,1.69115f,142.3213f,40.28392f,1.582414f,142.3841f,36.72465f,0.3424113f,142.7982f,37.4878f,0.7564838f,143.0585f,40.28392f,1.016781f,142.7982f,41.17263f,0.7564838f,142.1373f,36.13906f,-0.5787944f,142.7982f,36.72465f,-0.1972185f,143.3053f,41.17263f,0.09557499f,142.7982f,41.93578f,-0.1972185f,142.3213f,36.13906f,-1.023149f,141.4629f,35.77095f,-1.253164f,143.0585f,41.93578f,-0.8256307f,142.3213f,42.52136f,-1.023149f,140.5417f,35.64539f,-1.5f,141.4629f,35.77095f,-1.746836f,141.4954f,35.77095f,-1.5f,141.3676f,35.77095f,-1.976851f,142.1373f,36.13906f,-2.421206f,141.8445f,36.13906f,-2.802782f,142.3841f,36.72465f,-3.342411f,142.1373f,37.4878f,-4.263617f,141.8445f,36.72465f,-3.756484f,141.4629f,38.37651f,-4.937986f,141.3676f,37.4878f,-4.582414f,140.5417f,38.37651f,-5.059265f,140.5417f,39.33021f,-5.184823f,141.4954f,39.33021f,-5.059265f,141.4629f,40.28392f,-4.937986f,142.3213f,40.28392f,-4.582414f,142.1373f,41.17263f,-4.263617f,142.3841f,41.93578f,-3.342411f,142.7982f,41.17263f,-3.756484f,142.1373f,42.52136f,-2.421206f,142.7982f,41.93578f,-2.802782f,141.4629f,42.88948f,-1.746836f,142.3841f,42.52136f,-1.5f,142.3213f,42.52136f,-1.976851f,141.4954f,42.88948f,-1.5f,140.5417f,39.33021f,2.184823f,140.5417f,38.37651f,2.059265f,141.4629f,38.37651f,1.937986f,141.3676f,37.4878f,1.582414f,141.4954f,39.33021f,2.059265f,141.4629f,40.28392f,1.937986f,142.1373f,37.4878f,1.263617f,141.8445f,36.72465f,0.7564838f,142.3213f,40.28392f,1.582414f,142.1373f,41.17263f,1.263617f,141.8445f,36.13906f,-0.1972185f,142.3841f,36.72465f,0.3424113f,142.7982f,41.17263f,0.7564838f,142.3841f,41.93578f,0.3424113f,141.3676f,35.77095f,-1.023149f,142.1373f,36.13906f,-0.5787944f,142.1373f,42.52136f,-0.5787944f,142.7982f,41.93578f,-0.1972185f,141.4629f,35.77095f,-1.253164f,142.3213f,42.52136f,-1.023149f,141.4629f,42.88948f,-1.253164f,141.3676f,35.77095f,-1.976851f,141.2161f,35.77095f,-2.174369f,141.8445f,36.13906f,-2.802782f,141.4629f,36.13906f,-3.095575f,141.8445f,36.72465f,-3.756484f,141.3676f,37.4878f,-4.582414f,141.2161f,36.72465f,-4.016781f,140.5417f,37.4878f,-4.69115f,140.5417f,38.37651f,-5.059265f,139.6205f,38.37651f,-4.937986f,139.588f,39.33021f,-5.059265f,140.5417f,40.28392f,-5.059265f,140.5417f,39.33021f,-5.184823f,141.4629f,40.28392f,-4.937986f,141.3676f,41.17263f,-4.582414f,142.1373f,41.17263f,-4.263617f,141.8445f,41.93578f,-3.756484f,141.8445f,42.52136f,-2.802782f,142.3841f,41.93578f,-3.342411f,141.3676f,42.88948f,-1.976851f,142.1373f,42.52136f,-2.421206f,139.6205f,38.37651f,1.937986f,139.588f,39.33021f,2.059265f,140.5417f,38.37651f,2.059265f,140.5417f,37.4878f,1.69115f,140.5417f,39.33021f,2.184823f,140.5417f,40.28392f,2.059265f,141.3676f,37.4878f,1.582414f,141.2161f,36.72465f,1.016781f,141.4629f,40.28392f,1.937986f,141.3676f,41.17263f,1.582414f,141.4629f,36.13906f,0.09557499f,141.8445f,36.72465f,0.7564838f,142.1373f,41.17263f,1.263617f,141.8445f,41.93578f,0.7564838f,141.2161f,35.77095f,-0.8256307f,141.8445f,36.13906f,-0.1972185f,141.8445f,42.52136f,-0.1972185f,142.3841f,41.93578f,0.3424113f,141.3676f,35.77095f,-1.023149f,141.3676f,42.88948f,-1.023149f,142.1373f,42.52136f,-0.5787944f,141.2161f,35.77095f,-2.174369f,141.0186f,35.77095f,-2.32593f,141.4629f,36.13906f,-3.095575f,141.0186f,36.13906f,-3.279633f,141.2161f,36.72465f,-4.016781f,140.5417f,36.72465f,-4.105563f,140.5417f,37.4878f,-4.69115f,139.7158f,37.4878f,-4.582414f,139.6205f,38.37651f,-4.937986f,138.7621f,38.37651f,-4.582414f,138.6993f,39.33021f,-4.69115f,139.6205f,40.28392f,-4.937986f,139.588f,39.33021f,-5.059265f,140.5417f,41.17263f,-4.69115f,140.5417f,40.28392f,-5.059265f,141.3676f,41.17263f,-4.582414f,141.2161f,41.93578f,-4.016781f,141.4629f,42.52136f,-3.095575f,141.8445f,41.93578f,-3.756484f,141.2161f,42.88948f,-2.174369f,141.8445f,42.52136f,-2.802782f,138.7621f,38.37651f,1.582414f,138.6993f,39.33021f,1.69115f,139.7158f,37.4878f,1.582414f,139.6205f,38.37651f,1.937986f,139.6205f,40.28392f,1.937986f,139.588f,39.33021f,2.059265f,140.5417f,37.4878f,1.69115f,140.5417f,36.72465f,1.105563f,140.5417f,40.28392f,2.059265f,140.5417f,41.17263f,1.69115f,141.0186f,36.13906f,0.2796327f,141.2161f,36.72465f,1.016781f,141.3676f,41.17263f,1.582414f,141.2161f,41.93578f,1.016781f,141.0186f,35.77095f,-0.6740696f,141.4629f,36.13906f,0.09557499f,141.4629f,42.52136f,0.09557499f,141.8445f,41.93578f,0.7564838f,141.2161f,35.77095f,-0.8256307f,141.2161f,42.88948f,-0.8256307f,141.8445f,42.52136f,-0.1972185f,141.0186f,35.77095f,-2.32593f,140.7885f,35.77095f,-2.421206f,141.0186f,36.13906f,-3.279633f,140.5417f,36.13906f,-3.342411f,140.5417f,36.72465f,-4.105563f,139.8673f,36.72465f,-4.016781f,139.7158f,37.4878f,-4.582414f,138.9461f,37.4878f,-4.263617f,138.7621f,38.37651f,-4.582414f,138.0249f,38.37651f,-4.016781f,137.9361f,39.33021f,-4.105563f,138.7621f,40.28392f,-4.582414f,138.6993f,39.33021f,-4.69115f,139.7158f,41.17263f,-4.582414f,139.6205f,40.28392f,-4.937986f,140.5417f,41.93578f,-4.105563f,140.5417f,41.17263f,-4.69115f,141.0186f,42.52136f,-3.279633f,141.2161f,41.93578f,-4.016781f,141.0186f,42.88948f,-2.32593f,141.4629f,42.52136f,-3.095575f,138.0249f,38.37651f,1.016781f,137.9361f,39.33021f,1.105563f,138.9461f,37.4878f,1.263617f,138.7621f,38.37651f,1.582414f,138.7621f,40.28392f,1.582414f,138.6993f,39.33021f,1.69115f,139.8673f,36.72465f,1.016781f,139.7158f,37.4878f,1.582414f,139.7158f,41.17263f,1.582414f,139.6205f,40.28392f,1.937986f,140.5417f,36.13906f,0.3424113f,140.5417f,36.72465f,1.105563f,140.5417f,41.17263f,1.69115f,140.5417f,41.93578f,1.105563f,140.7885f,35.77095f,-0.5787943f,141.0186f,36.13906f,0.2796327f,141.0186f,42.52136f,0.2796327f,141.2161f,41.93578f,1.016781f,141.0186f,35.77095f,-0.6740696f,141.0186f,42.88948f,-0.6740696f,141.4629f,42.52136f,0.09557499f,140.7885f,35.77095f,-2.421206f,140.5417f,35.77095f,-2.453702f,140.5417f,36.13906f,-3.342411f,139.8673f,36.72465f,-4.016781f,140.0649f,36.13906f,-3.279633f,139.2389f,36.72465f,-3.756484f,138.9461f,37.4878f,-4.263617f,138.2852f,37.4878f,-3.756484f,138.0249f,38.37651f,-4.016781f,137.3506f,39.33021f,-3.342411f,137.4593f,38.37651f,-3.279633f,138.0249f,40.28392f,-4.016781f,137.9361f,39.33021f,-4.105563f,138.9461f,41.17263f,-4.263617f,138.7621f,40.28392f,-4.582414f,139.8673f,41.93578f,-4.016781f,139.7158f,41.17263f,-4.582414f,140.5417f,42.52136f,-3.342411f,140.5417f,41.93578f,-4.105563f,140.7885f,42.88948f,-2.421206f,141.0186f,42.52136f,-3.279633f,137.4593f,38.37651f,0.2796327f,137.3506f,39.33021f,0.3424113f,138.2852f,37.4878f,0.7564838f,138.0249f,38.37651f,1.016781f,138.0249f,40.28392f,1.016781f,137.9361f,39.33021f,1.105563f,139.2389f,36.72465f,0.7564838f,138.9461f,37.4878f,1.263617f,138.9461f,41.17263f,1.263617f,138.7621f,40.28392f,1.582414f,139.8673f,36.72465f,1.016781f,140.0649f,36.13906f,0.2796327f,139.8673f,41.93578f,1.016781f,139.7158f,41.17263f,1.582414f,140.5417f,35.77095f,-0.5462977f,140.5417f,36.13906f,0.3424113f,140.5417f,42.52136f,0.3424113f,140.5417f,41.93578f,1.105563f,140.7885f,35.77095f,-0.5787943f,140.7885f,42.88948f,-0.5787943f,141.0186f,42.52136f,0.2796327f,140.5417f,35.77095f,-2.453702f,140.0649f,36.13906f,-3.279633f,140.2949f,35.77095f,-2.421206f,139.2389f,36.72465f,-3.756484f,139.6205f,36.13906f,-3.095575f,138.6993f,36.72465f,-3.342411f,138.2852f,37.4878f,-3.756484f,137.4593f,38.37651f,-3.279633f,137.7781f,37.4878f,-3.095575f,136.9824f,39.33021f,-2.453702f,137.1037f,38.37651f,-2.421206f,137.4593f,40.28392f,-3.279633f,137.3506f,39.33021f,-3.342411f,138.2852f,41.17263f,-3.756484f,138.0249f,40.28392f,-4.016781f,139.2389f,41.93578f,-3.756484f,138.9461f,41.17263f,-4.263617f,139.8673f,41.93578f,-4.016781f,140.0649f,42.52136f,-3.279633f,140.5417f,42.88948f,-2.453702f,140.5417f,42.52136f,-3.342411f,137.1037f,38.37651f,-0.5787943f,136.9824f,39.33021f,-0.5462977f,137.7781f,37.4878f,0.09557503f,137.4593f,38.37651f,0.2796327f,137.3506f,39.33021f,0.3424113f,137.4593f,40.28392f,0.2796327f,138.6993f,36.72465f,0.3424113f,138.2852f,37.4878f,0.7564838f,138.2852f,41.17263f,0.7564838f,138.0249f,40.28392f,1.016781f,139.2389f,36.72465f,0.7564838f,139.6205f,36.13906f,0.095575f,139.2389f,41.93578f,0.7564838f,138.9461f,41.17263f,1.263617f,140.0649f,36.13906f,0.2796327f,140.2949f,35.77095f,-0.5787943f,139.8673f,41.93578f,1.016781f,140.0649f,42.52136f,0.2796327f,140.5417f,35.77095f,-0.5462977f,140.5417f,42.88948f,-0.5462977f,140.5417f,42.52136f,0.3424113f,140.2949f,35.77095f,-2.421206f,139.6205f,36.13906f,-3.095575f,140.0649f,35.77095f,-2.32593f,138.6993f,36.72465f,-3.342411f,139.2389f,36.13906f,-2.802782f,137.7781f,37.4878f,-3.095575f,138.2852f,36.72465f,-2.802782f,137.1037f,38.37651f,-2.421206f,137.4593f,37.4878f,-2.32593f,136.8569f,39.33021f,-1.5f,136.9824f,38.37651f,-1.5f,137.1037f,40.28392f,-2.421206f,136.9824f,39.33021f,-2.453702f,137.7781f,41.17263f,-3.095575f,137.4593f,40.28392f,-3.279633f,138.6993f,41.93578f,-3.342411f,138.2852f,41.17263f,-3.756484f,139.2389f,41.93578f,-3.756484f,139.6205f,42.52136f,-3.095575f,140.0649f,42.52136f,-3.279633f,140.2949f,42.88948f,-2.421206f,137.4593f,37.4878f,-0.6740696f,137.1037f,38.37651f,-0.5787943f,136.9824f,39.33021f,-0.5462977f,137.1037f,40.28392f,-0.5787943f,138.2852f,36.72465f,-0.1972184f,137.7781f,37.4878f,0.09557503f,137.4593f,40.28392f,0.2796327f,137.7781f,41.17263f,0.09557503f,138.6993f,36.72465f,0.3424113f,139.2389f,36.13906f,-0.1972185f,138.6993f,41.93578f,0.3424113f,138.2852f,41.17263f,0.7564838f,139.6205f,36.13906f,0.095575f,140.0649f,35.77095f,-0.6740696f,139.2389f,41.93578f,0.7564838f,139.6205f,42.52136f,0.095575f,140.2949f,35.77095f,-0.5787943f,140.0649f,42.52136f,0.2796327f,140.2949f,42.88948f,-0.5787943f,140.0649f,35.77095f,-2.32593f,139.2389f,36.13906f,-2.802782f,139.8673f,35.77095f,-2.174369f,138.2852f,36.72465f,-2.802782f,138.9461f,36.13906f,-2.421206f,137.4593f,37.4878f,-2.32593f,138.0249f,36.72465f,-2.174369f,136.9824f,38.37651f,-1.5f,137.3506f,37.4878f,-1.5f,136.9824f,40.28392f,-1.5f,136.8569f,39.33021f,-1.5f,137.4593f,41.17263f,-2.32593f,137.1037f,40.28392f,-2.421206f,138.2852f,41.93578f,-2.802782f,137.7781f,41.17263f,-3.095575f,138.6993f,41.93578f,-3.342411f,139.2389f,42.52136f,-2.802782f,139.6205f,42.52136f,-3.095575f,140.0649f,42.88948f,-2.32593f,138.0249f,36.72465f,-0.8256306f,137.4593f,37.4878f,-0.6740696f,137.1037f,40.28392f,-0.5787943f,137.4593f,41.17263f,-0.6740696f,138.2852f,36.72465f,-0.1972184f,138.9461f,36.13906f,-0.5787943f,137.7781f,41.17263f,0.09557503f,138.2852f,41.93578f,-0.1972184f,139.2389f,36.13906f,-0.1972185f,139.8673f,35.77095f,-0.8256306f,138.6993f,41.93578f,0.3424113f,139.2389f,42.52136f,-0.1972185f,140.0649f,35.77095f,-0.6740696f,139.6205f,42.52136f,0.095575f,140.0649f,42.88948f,-0.6740696f,139.8673f,35.77095f,-2.174369f,138.9461f,36.13906f,-2.421206f,139.7158f,35.77095f,-1.976851f,138.0249f,36.72465f,-2.174369f,138.7621f,36.13906f,-1.976851f,137.3506f,37.4878f,-1.5f,137.9361f,36.72465f,-1.5f,137.3506f,41.17263f,-1.5f,136.9824f,40.28392f,-1.5f,138.0249f,41.93578f,-2.174369f,137.4593f,41.17263f,-2.32593f,138.2852f,41.93578f,-2.802782f,138.9461f,42.52136f,-2.421206f,139.2389f,42.52136f,-2.802782f,139.8673f,42.88948f,-2.174369f,138.0249f,36.72465f,-0.8256306f,138.7621f,36.13906f,-1.023149f,137.4593f,41.17263f,-0.6740696f,138.0249f,41.93578f,-0.8256306f,138.9461f,36.13906f,-0.5787943f,139.7158f,35.77095f,-1.023149f,138.2852f,41.93578f,-0.1972184f,138.9461f,42.52136f,-0.5787943f,139.8673f,35.77095f,-0.8256306f,139.2389f,42.52136f,-0.1972185f,139.8673f,42.88948f,-0.8256306f,139.7158f,35.77095f,-1.976851f,138.7621f,36.13906f,-1.976851f,139.6205f,35.77095f,-1.746836f,137.9361f,36.72465f,-1.5f,138.6993f,36.13906f,-1.5f,137.9361f,41.93578f,-1.5f,137.3506f,41.17263f,-1.5f,138.0249f,41.93578f,-2.174369f,138.7621f,42.52136f,-1.976851f,138.9461f,42.52136f,-2.421206f,139.7158f,42.88948f,-1.976851f,138.7621f,36.13906f,-1.023149f,139.6205f,35.77095f,-1.253164f,138.0249f,41.93578f,-0.8256306f,138.7621f,42.52136f,-1.023149f,139.7158f,35.77095f,-1.023149f,138.9461f,42.52136f,-0.5787943f,139.7158f,42.88948f,-1.023149f,139.6205f,35.77095f,-1.746836f,138.6993f,36.13906f,-1.5f,139.588f,35.77095f,-1.5f,137.9361f,41.93578f,-1.5f,138.6993f,42.52136f,-1.5f,138.7621f,42.52136f,-1.976851f,139.6205f,42.88948f,-1.746836f,139.6205f,35.77095f,-1.253164f,138.7621f,42.52136f,-1.023149f,139.6205f,42.88948f,-1.253164f,139.588f,35.77095f,-1.5f,138.6993f,42.52136f,-1.5f,139.588f,42.88948f,-1.5f,};
FloatBuffer fbv = GLBuffers.newDirectFloatBuffer(positionsArray, 0);
gl.glVertexPointer(3, GL2.GL_FLOAT, 0, fbv);
gl.glEnableClientState(GL2.GL_VERTEX_ARRAY);
FloatBuffer fbn = null;
FloatBuffer fbt = null;
float[] texcoordArray = null;
{
gl.glColor4d(1.0, 0.7490196, 0.0, 1.0);
int[] indices = {
0,1,2,1,0,3,3,4,1,4,3,5,6,7,8,7,6,9,10,2,11,2,10,0,12,13,14,13,12,15,5,16,4,16,5,17,9,18,7,18,9,19,15,20,13,20,15,21,22,23,24,23,22,25,26,8,27,8,26,6,28,11,29,11,28,10,30,14,31,14,30,12,32,33,34,33,32,35,17,36,16,36,17,37,19,38,18,38,19,39,21,40,20,40,21,41,25,42,23,42,25,43,35,44,33,44,35,45,46,47,48,47,46,49,50,24,51,24,50,22,52,27,53,27,52,26,54,29,55,29,54,28,56,31,57,31,56,30,58,34,59,34,58,32,60,61,62,61,60,63,36,64,65,64,36,37,39,66,38,66,39,67,41,68,40,68,41,69,43,70,42,70,43,71,45,72,44,72,45,73,74,49,46,49,74,75,63,76,61,76,63,77,78,79,80,79,78,81,48,82,83,82,48,47,84,51,85,51,84,50,86,53,87,53,86,52,88,55,89,55,88,54,56,90,91,90,56,57,92,59,93,59,92,58,94,62,95,62,94,60,96,97,98,97,96,99,65,100,101,100,65,64,66,102,103,102,66,67,104,69,105,69,104,68,71,106,70,106,71,107,73,108,72,108,73,109,74,110,75,110,74,111,77,112,76,112,77,113,114,81,78,81,114,115,99,116,97,116,99,117,118,119,120,80,121,122,121,80,79,83,123,124,123,83,82,125,85,126,85,125,84,127,87,128,87,127,86,88,129,130,129,88,89,91,131,132,131,91,90,92,133,134,133,92,93,135,95,136,95,135,94,137,98,138,98,137,96,139,140,141,140,139,142,101,143,144,143,101,100,103,145,146,145,103,102,147,105,148,105,147,104,106,149,150,149,106,107,151,109,152,109,151,108,111,153,110,153,111,154,113,155,112,155,113,156,114,157,115,157,114,158,159,116,117,116,159,160,161,118,120,142,162,140,162,142,163,118,164,119,122,165,166,165,122,121,124,167,168,167,124,123,169,126,170,126,169,125,127,171,172,171,127,128,130,173,174,173,130,129,175,131,176,131,175,132,134,177,178,177,134,133,135,179,180,179,135,136,181,138,182,138,181,137,183,141,184,141,183,139,185,143,186,143,185,144,146,187,188,187,146,145,189,148,190,148,189,147,150,191,192,191,150,149,193,152,194,152,193,151,154,195,153,195,154,196,197,156,198,156,197,155,158,199,157,199,158,200,201,160,159,160,201,202,203,118,161,204,162,163,162,204,205,118,206,164,166,207,208,207,166,165,168,209,210,209,168,167,169,211,212,211,169,170,172,213,214,213,172,171,174,215,216,215,174,173,217,176,218,176,217,175,219,177,220,177,219,178,180,221,222,221,180,179,223,182,224,182,223,181,225,184,226,184,225,183,227,186,228,186,227,185,229,187,230,187,229,188,189,231,232,231,189,190,192,233,234,233,192,191,235,194,236,194,235,193,196,237,195,237,196,238,239,198,240,198,239,197,200,241,199,241,200,242,243,202,201,202,243,244,245,118,203,246,205,204,205,246,247,118,248,206,208,249,250,249,208,207,210,251,252,251,210,209,212,253,254,253,212,211,214,255,256,255,214,213,216,257,258,257,216,215,259,218,260,218,259,217,261,220,262,220,261,219,263,221,264,221,263,222,265,224,266,224,265,223,267,226,268,226,267,225,269,228,270,228,269,227,271,230,272,230,271,229,232,273,274,273,232,231,275,233,276,233,275,234,235,277,278,277,235,236,238,279,237,279,238,280,281,240,282,240,281,239,242,283,241,283,242,284,285,244,243,244,285,286,287,118,245,288,247,246,247,288,289,118,290,248,250,291,292,291,250,249,251,293,252,293,251,294,254,295,296,295,254,253,256,297,298,297,256,255,299,257,300,257,299,258,301,260,302,260,301,259,303,262,304,262,303,261,305,264,306,264,305,263,307,266,308,266,307,265,309,268,310,268,309,267,270,311,269,311,270,312,313,272,314,272,313,271,274,315,316,315,274,273,317,276,318,276,317,275,278,319,320,319,278,277,279,321,322,321,279,280,281,323,324,323,281,282,284,325,283,325,284,326,327,286,285,286,327,328,329,118,287,330,289,288,289,330,331,118,332,290,291,333,292,333,291,334,294,335,293,335,294,336,296,337,338,337,296,295,339,297,340,297,339,298,341,300,342,300,341,299,343,302,344,302,343,301,345,304,346,304,345,303,347,306,348,306,347,305,349,307,308,307,349,350,351,310,352,310,351,309,312,353,311,353,312,354,314,355,313,355,314,356,315,357,316,357,315,358,359,318,360,318,359,317,320,361,362,361,320,319,322,363,364,363,322,321,324,365,366,365,324,323,325,367,368,367,325,326,369,327,370,327,369,328,371,118,329,372,331,330,331,372,373,118,374,332,334,375,333,375,334,376,336,377,335,377,336,378,379,337,380,337,379,338,381,340,382,340,381,339,383,342,384,342,383,341,385,344,386,344,385,343,387,346,388,346,387,345,389,348,390,348,389,347,391,350,349,350,391,392,393,351,352,351,393,394,354,384,353,384,354,383,356,395,355,395,356,396,358,397,357,397,358,398,360,399,359,399,360,400,361,401,362,401,361,402,364,403,404,403,364,363,366,405,406,405,366,365,368,407,408,407,368,367,409,370,410,370,409,369,371,411,118,412,372,413,372,412,373,118,414,374,376,415,375,415,376,416,378,417,377,417,378,418,419,380,420,380,419,379,421,382,422,382,421,381,423,386,424,386,423,385,425,388,426,388,425,387,427,390,428,390,427,389,429,392,391,392,429,430,431,394,393,394,431,432,396,422,395,422,396,421,398,424,397,424,398,423,400,433,399,433,400,434,402,435,401,435,402,436,404,437,438,437,404,403,405,439,406,439,405,440,408,441,442,441,408,407,443,410,444,410,443,409,411,445,118,446,413,447,413,446,412,118,448,414,416,449,415,449,416,450,418,451,417,451,418,452,453,420,454,420,453,419,455,426,456,426,455,425,457,428,458,428,457,427,459,430,429,430,459,460,461,432,431,432,461,462,434,454,433,454,434,453,436,456,435,456,436,455,438,463,464,463,438,437,440,465,439,465,440,466,442,467,468,467,442,441,469,444,470,444,469,443,445,471,118,472,447,473,447,472,446,118,474,448,450,475,449,475,450,476,452,477,451,477,452,478,479,458,480,458,479,457,481,460,459,460,481,482,483,462,461,462,483,484,464,477,478,477,464,463,466,480,465,480,466,479,468,485,486,485,468,467,487,470,488,470,487,469,471,489,118,490,473,491,473,490,472,118,492,474,476,493,475,493,476,494,495,482,481,482,495,496,497,484,483,484,497,498,486,493,494,493,486,485,495,488,496,488,495,487,489,499,118,500,491,501,491,500,490,118,502,492,503,498,497,498,503,504,499,502,118,503,501,504,501,503,500,};
IntBuffer fbi = GLBuffers.newDirectIntBuffer(indices, 0);
gl.glDrawElements(GL2.GL_TRIANGLES, 1512, GL2.GL_UNSIGNED_INT, fbi);
gl.glDisable(GL2.GL_TEXTURE_2D);
gl.glDisable(GL2.GL_BLEND);
}
gl.glDisableClientState(GL2.GL_VERTEX_ARRAY);
gl.glDisableClientState(GL2.GL_NORMAL_ARRAY);
gl.glDisableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
}
private void ID10(GL2 gl){
float[] positionsArray = {
142.0417f,63.69043f,-1.5f,141.9906f,43.01504f,-1.888229f,142.0417f,43.01504f,-1.5f,141.9906f,63.69043f,-1.888229f,141.9906f,63.69043f,-1.888229f,142.0417f,63.69043f,-1.5f,141.9906f,43.01504f,-1.888229f,142.0417f,43.01504f,-1.5f,141.9906f,63.69043f,-1.111771f,142.0417f,43.01504f,-1.5f,141.9906f,43.01504f,-1.111771f,142.0417f,63.69043f,-1.5f,142.0417f,63.69043f,-1.5f,141.9906f,63.69043f,-1.111771f,142.0417f,43.01504f,-1.5f,141.9906f,43.01504f,-1.111771f,141.8407f,43.01504f,-2.25f,141.8407f,63.69043f,-2.25f,141.8407f,63.69043f,-2.25f,141.8407f,43.01504f,-2.25f,141.8407f,63.69043f,-0.75f,141.8407f,43.01504f,-0.75f,141.8407f,63.69043f,-0.75f,141.8407f,43.01504f,-0.75f,141.6024f,43.01504f,-2.56066f,141.6024f,63.69043f,-2.56066f,141.6024f,63.69043f,-2.56066f,141.6024f,43.01504f,-2.56066f,141.6024f,63.69043f,-0.4393398f,141.6024f,43.01504f,-0.4393398f,141.6024f,63.69043f,-0.4393398f,141.6024f,43.01504f,-0.4393398f,141.2917f,63.69043f,-2.799038f,141.2917f,43.01504f,-2.799038f,141.2917f,63.69043f,-2.799038f,141.2917f,43.01504f,-2.799038f,141.2917f,43.01504f,-0.2009619f,141.2917f,63.69043f,-0.2009619f,141.2917f,43.01504f,-0.2009619f,141.2917f,63.69043f,-0.2009619f,140.9299f,63.69043f,-2.948889f,140.9299f,43.01504f,-2.948889f,140.9299f,63.69043f,-2.948889f,140.9299f,43.01504f,-2.948889f,140.9299f,43.01504f,-0.05111126f,140.9299f,63.69043f,-0.05111126f,140.9299f,43.01504f,-0.05111126f,140.9299f,63.69043f,-0.05111126f,140.5417f,62.00852f,-3.0f,140.5417f,43.01504f,-3.0f,140.5417f,63.69043f,-3.0f,140.5417f,63.69043f,-3.0f,140.5417f,62.00852f,-3.0f,140.5417f,43.01504f,-3.0f,140.5417f,62.00852f,0.0f,140.5417f,63.69043f,0.0f,140.5417f,43.01504f,0.0f,140.5417f,43.01504f,0.0f,140.5417f,62.00852f,0.0f,140.5417f,63.69043f,0.0f,140.5417f,43.01504f,-3.0f,140.1535f,63.69043f,-2.948889f,140.1535f,43.01504f,-2.948889f,140.5417f,63.69043f,-3.0f,140.5417f,62.00852f,-3.0f,140.5417f,62.00852f,-3.0f,140.5417f,43.01504f,-3.0f,140.5417f,63.69043f,-3.0f,140.1535f,63.69043f,-2.948889f,140.1535f,43.01504f,-2.948889f,140.5417f,63.69043f,0.0f,140.1535f,43.01504f,-0.05111126f,140.1535f,63.69043f,-0.05111126f,140.5417f,43.01504f,0.0f,140.5417f,62.00852f,0.0f,140.5417f,62.00852f,0.0f,140.5417f,63.69043f,0.0f,140.5417f,43.01504f,0.0f,140.1535f,43.01504f,-0.05111126f,140.1535f,63.69043f,-0.05111126f,139.7917f,63.69043f,-2.799038f,139.7917f,43.01504f,-2.799038f,139.7917f,63.69043f,-2.799038f,139.7917f,43.01504f,-2.799038f,139.7917f,43.01504f,-0.2009619f,139.7917f,63.69043f,-0.2009619f,139.7917f,43.01504f,-0.2009619f,139.7917f,63.69043f,-0.2009619f,139.481f,63.69043f,-2.56066f,139.481f,43.01504f,-2.56066f,139.481f,63.69043f,-2.56066f,139.481f,43.01504f,-2.56066f,139.481f,43.01504f,-0.4393398f,139.481f,63.69043f,-0.4393398f,139.481f,43.01504f,-0.4393398f,139.481f,63.69043f,-0.4393398f,139.2427f,43.01504f,-2.25f,139.2427f,63.69043f,-2.25f,139.2427f,63.69043f,-2.25f,139.2427f,43.01504f,-2.25f,139.2427f,63.69043f,-0.75f,139.2427f,43.01504f,-0.75f,139.2427f,63.69043f,-0.75f,139.2427f,43.01504f,-0.75f,139.0928f,43.01504f,-1.888229f,139.0928f,63.69043f,-1.888229f,139.0928f,63.69043f,-1.888229f,139.0928f,43.01504f,-1.888229f,139.0928f,63.69043f,-1.111771f,139.0928f,43.01504f,-1.111771f,139.0928f,63.69043f,-1.111771f,139.0928f,43.01504f,-1.111771f,139.0417f,43.01504f,-1.5f,139.0417f,63.69043f,-1.5f,139.0417f,63.69043f,-1.5f,139.0417f,43.01504f,-1.5f,139.0417f,63.69043f,-1.5f,139.0417f,43.01504f,-1.5f,139.0417f,63.69043f,-1.5f,139.0417f,43.01504f,-1.5f,};
FloatBuffer fbv = GLBuffers.newDirectFloatBuffer(positionsArray, 0);
gl.glVertexPointer(3, GL2.GL_FLOAT, 0, fbv);
gl.glEnableClientState(GL2.GL_VERTEX_ARRAY);
FloatBuffer fbn = null;
FloatBuffer fbt = null;
float[] texcoordArray = null;
{
gl.glColor4d(1.0, 1.0, 1.0, 1.0);
int[] indices = {
0,1,2,1,0,3,8,9,10,9,8,11,3,16,1,16,3,17,20,10,21,10,20,8,17,24,16,24,17,25,28,21,29,21,28,20,24,32,33,32,24,25,28,36,37,36,28,29,33,40,41,40,33,32,37,44,45,44,37,36,41,48,49,48,41,50,50,41,40,45,54,55,54,45,56,56,45,44,60,61,62,61,60,63,63,60,64,70,71,72,71,70,73,73,70,74,62,80,81,80,62,61,72,84,85,84,72,71,81,88,89,88,81,80,85,92,93,92,85,84,88,96,89,96,88,97,100,92,101,92,100,93,97,104,96,104,97,105,108,101,109,101,108,100,105,112,104,112,105,113,116,109,117,109,116,108,};
IntBuffer fbi = GLBuffers.newDirectIntBuffer(indices, 0);
gl.glDrawElements(GL2.GL_TRIANGLES, 156, GL2.GL_UNSIGNED_INT, fbi);
gl.glDisable(GL2.GL_TEXTURE_2D);
gl.glDisable(GL2.GL_BLEND);
}
{
gl.glColor4d(0.2, 0.1764706, 0.1568627, 1.0);
int[] indices = {
4,5,6,7,6,5,12,13,14,15,14,13,18,4,19,6,19,4,13,22,15,23,15,22,26,18,27,19,27,18,22,30,23,31,23,30,26,27,34,35,34,27,31,30,38,39,38,30,34,35,42,43,42,35,38,39,46,47,46,39,42,43,51,51,43,52,53,52,43,46,47,57,57,47,58,59,58,47,65,66,67,67,66,68,69,68,66,75,76,77,77,76,78,79,78,76,68,69,82,83,82,69,78,79,86,87,86,79,82,83,90,91,90,83,86,87,94,95,94,87,98,90,99,91,99,90,95,102,94,103,94,102,106,98,107,99,107,98,102,110,103,111,103,110,114,106,115,107,115,106,110,118,111,119,111,118,};
IntBuffer fbi = GLBuffers.newDirectIntBuffer(indices, 0);
gl.glDrawElements(GL2.GL_TRIANGLES, 156, GL2.GL_UNSIGNED_INT, fbi);
gl.glDisable(GL2.GL_TEXTURE_2D);
gl.glDisable(GL2.GL_BLEND);
}
gl.glDisableClientState(GL2.GL_VERTEX_ARRAY);
gl.glDisableClientState(GL2.GL_NORMAL_ARRAY);
gl.glDisableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
}
private void ID20(GL2 gl){
float[] positionsArray = {
140.5417f,62.00852f,-3.0f,140.5417f,43.01504f,-1.5f,140.5417f,43.01504f,-3.0f,140.5417f,43.01504f,0.0f,140.5417f,62.00852f,0.0f,140.5417f,43.01504f,-1.5f,140.1535f,43.01504f,-2.948889f,140.5417f,43.01504f,-3.0f,139.7917f,43.01504f,-2.799038f,139.481f,43.01504f,-2.56066f,139.2427f,43.01504f,-2.25f,139.0928f,43.01504f,-1.888229f,139.0417f,43.01504f,-1.5f,140.9299f,43.01504f,-2.948889f,141.2917f,43.01504f,-2.799038f,141.6024f,43.01504f,-2.56066f,141.8407f,43.01504f,-2.25f,141.9906f,43.01504f,-1.888229f,142.0417f,43.01504f,-1.5f,140.5417f,63.69043f,-3.0f,140.5417f,63.69043f,0.0f,138.448f,71.56598f,-3.0f,140.5417f,62.00852f,0.0f,140.5417f,62.00852f,-3.0f,138.448f,71.56598f,0.0f,138.448f,71.56598f,-1.5f,146.4339f,69.20757f,-3.0f,140.5417f,62.00852f,0.0f,140.5417f,62.00852f,-3.0f,140.6678f,62.16262f,0.0f,146.4339f,69.20757f,0.0f,144.0706f,70.4899f,-3.0f,140.5417f,62.00852f,0.0f,140.5417f,62.00852f,-3.0f,144.0706f,70.4899f,0.0f,137.0128f,70.4899f,-3.0f,140.5417f,62.00852f,0.0f,140.5417f,62.00852f,-3.0f,137.0128f,70.4899f,0.0f,142.6355f,71.56598f,-3.0f,140.5417f,62.00852f,0.0f,140.5417f,62.00852f,-3.0f,142.6355f,71.56598f,0.0f,142.6355f,71.56598f,-1.5f,141.9906f,43.01504f,-1.111771f,140.5417f,43.01504f,0.0f,141.8407f,43.01504f,-0.75f,141.6024f,43.01504f,-0.4393398f,141.2917f,43.01504f,-0.2009619f,140.9299f,43.01504f,-0.05111126f,139.0928f,43.01504f,-1.111771f,139.2427f,43.01504f,-0.75f,139.481f,43.01504f,-0.4393398f,139.7917f,43.01504f,-0.2009619f,140.1535f,43.01504f,-0.05111126f,140.5417f,63.69043f,0.0f,140.1535f,63.69043f,-2.948889f,140.5417f,63.69043f,-3.0f,139.7917f,63.69043f,-2.799038f,139.481f,63.69043f,-2.56066f,139.2427f,63.69043f,-2.25f,139.0928f,63.69043f,-1.888229f,139.0417f,63.69043f,-1.5f,139.0928f,63.69043f,-1.111771f,139.2427f,63.69043f,-0.75f,139.481f,63.69043f,-0.4393398f,139.7917f,63.69043f,-0.2009619f,140.1535f,63.69043f,-0.05111126f,140.9299f,63.69043f,-2.948889f,141.2917f,63.69043f,-2.799038f,141.6024f,63.69043f,-2.56066f,141.8407f,63.69043f,-2.25f,141.9906f,63.69043f,-1.888229f,142.0417f,63.69043f,-1.5f,141.9906f,63.69043f,-1.111771f,141.8407f,63.69043f,-0.75f,141.6024f,63.69043f,-0.4393398f,141.2917f,63.69043f,-0.2009619f,140.9299f,63.69043f,-0.05111126f,140.5417f,71.56598f,-3.0f,140.5417f,71.56598f,0.0f,140.5417f,71.56598f,-1.5f,};
FloatBuffer fbv = GLBuffers.newDirectFloatBuffer(positionsArray, 0);
gl.glVertexPointer(3, GL2.GL_FLOAT, 0, fbv);
gl.glEnableClientState(GL2.GL_VERTEX_ARRAY);
FloatBuffer fbn = null;
FloatBuffer fbt = null;
float[] texcoordArray = null;
{
gl.glColor4d(1.0, 1.0, 1.0, 1.0);
int[] indices = {
0,1,2,1,0,3,3,0,4,5,6,7,6,5,8,8,5,9,9,5,10,10,5,11,11,5,12,13,5,7,5,13,14,5,14,15,5,15,16,5,16,17,5,17,18,19,4,0,4,19,20,21,22,23,22,21,24,24,21,25,26,27,28,27,26,29,29,26,30,31,32,33,32,31,34,35,36,37,36,35,38,39,40,41,40,39,42,42,39,43,44,5,18,5,44,45,45,44,46,45,46,47,45,47,48,45,48,49,5,50,12,50,5,45,50,45,51,51,45,52,52,45,53,53,45,54,55,56,57,56,55,58,58,55,59,59,55,60,60,55,61,61,55,62,62,55,63,63,55,64,64,55,65,65,55,66,66,55,67,68,55,57,55,68,69,55,69,70,55,70,71,55,71,72,55,72,73,55,73,74,55,74,75,55,75,76,55,76,77,55,77,78,79,20,19,20,79,80,80,79,81,};
IntBuffer fbi = GLBuffers.newDirectIntBuffer(indices, 0);
gl.glDrawElements(GL2.GL_TRIANGLES, 201, GL2.GL_UNSIGNED_INT, fbi);
gl.glDisable(GL2.GL_TEXTURE_2D);
gl.glDisable(GL2.GL_BLEND);
}
gl.glDisableClientState(GL2.GL_VERTEX_ARRAY);
gl.glDisableClientState(GL2.GL_NORMAL_ARRAY);
gl.glDisableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
}
private void ID26(GL2 gl){
float[] positionsArray = {
141.4954f,42.88948f,-1.5f,141.4629f,42.88948f,-1.746836f,140.5417f,43.01504f,-1.5f,141.4629f,42.88948f,-1.253164f,141.3676f,42.88948f,-1.976851f,141.3676f,42.88948f,-1.023149f,141.2161f,42.88948f,-2.174369f,141.2161f,42.88948f,-0.8256307f,141.0186f,42.88948f,-2.32593f,141.0186f,42.88948f,-0.6740696f,140.7885f,42.88948f,-2.421206f,140.7885f,42.88948f,-0.5787943f,140.5417f,42.88948f,-2.453702f,140.5417f,42.88948f,-0.5462977f,140.2949f,42.88948f,-2.421206f,140.2949f,42.88948f,-0.5787943f,140.0649f,42.88948f,-2.32593f,140.0649f,42.88948f,-0.6740696f,139.8673f,42.88948f,-2.174369f,139.8673f,42.88948f,-0.8256306f,139.7158f,42.88948f,-1.976851f,139.7158f,42.88948f,-1.023149f,139.6205f,42.88948f,-1.746836f,139.6205f,42.88948f,-1.253164f,139.588f,42.88948f,-1.5f,};
FloatBuffer fbv = GLBuffers.newDirectFloatBuffer(positionsArray, 0);
gl.glVertexPointer(3, GL2.GL_FLOAT, 0, fbv);
gl.glEnableClientState(GL2.GL_VERTEX_ARRAY);
FloatBuffer fbn = null;
FloatBuffer fbt = null;
float[] texcoordArray = null;
{
gl.glColor4d(1.0, 1.0, 1.0, 1.0);
int[] indices = {
0,1,2,3,0,2,2,1,4,5,3,2,2,4,6,7,5,2,2,6,8,9,7,2,2,8,10,11,9,2,2,10,12,13,11,2,2,12,14,13,2,15,2,14,16,15,2,17,2,16,18,17,2,19,2,18,20,19,2,21,2,20,22,21,2,23,2,22,24,23,2,24,};
IntBuffer fbi = GLBuffers.newDirectIntBuffer(indices, 0);
gl.glDrawElements(GL2.GL_TRIANGLES, 72, GL2.GL_UNSIGNED_INT, fbi);
gl.glDisable(GL2.GL_TEXTURE_2D);
gl.glDisable(GL2.GL_BLEND);
}
gl.glDisableClientState(GL2.GL_VERTEX_ARRAY);
gl.glDisableClientState(GL2.GL_NORMAL_ARRAY);
gl.glDisableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
}
private void ID32(GL2 gl){
float[] positionsArray = {
141.4954f,39.33021f,-5.059265f,139.588f,39.33021f,-5.059265f,140.5417f,39.33021f,-5.184823f,142.3841f,39.33021f,-4.69115f,138.6993f,39.33021f,-4.69115f,143.1473f,39.33021f,-4.105563f,137.9361f,39.33021f,-4.105563f,143.7329f,39.33021f,-3.342411f,137.3506f,39.33021f,-3.342411f,144.101f,39.33021f,-2.453702f,136.9824f,39.33021f,-2.453702f,144.2265f,39.33021f,-1.5f,136.8569f,39.33021f,-1.5f,144.101f,39.33021f,-0.5462977f,136.9824f,39.33021f,-0.5462977f,143.7329f,39.33021f,0.3424113f,137.3506f,39.33021f,0.3424113f,143.1473f,39.33021f,1.105563f,137.9361f,39.33021f,1.105563f,142.3841f,39.33021f,1.69115f,138.6993f,39.33021f,1.69115f,141.4954f,39.33021f,2.059265f,139.588f,39.33021f,2.059265f,140.5417f,39.33021f,2.184823f,};
FloatBuffer fbv = GLBuffers.newDirectFloatBuffer(positionsArray, 0);
gl.glVertexPointer(3, GL2.GL_FLOAT, 0, fbv);
gl.glEnableClientState(GL2.GL_VERTEX_ARRAY);
FloatBuffer fbn = null;
FloatBuffer fbt = null;
float[] texcoordArray = null;
{
gl.glColor4d(1.0, 1.0, 1.0, 1.0);
int[] indices = {
0,1,2,1,0,3,1,3,4,4,3,5,4,5,6,6,5,7,6,7,8,8,7,9,8,9,10,10,9,11,10,11,12,12,11,13,12,13,14,14,13,15,14,15,16,16,15,17,16,17,18,18,17,19,18,19,20,20,19,21,20,21,22,22,21,23,};
IntBuffer fbi = GLBuffers.newDirectIntBuffer(indices, 0);
gl.glDrawElements(GL2.GL_TRIANGLES, 66, GL2.GL_UNSIGNED_INT, fbi);
gl.glDisable(GL2.GL_TEXTURE_2D);
gl.glDisable(GL2.GL_BLEND);
}
gl.glDisableClientState(GL2.GL_VERTEX_ARRAY);
gl.glDisableClientState(GL2.GL_NORMAL_ARRAY);
gl.glDisableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
}
private void ID38(GL2 gl){
float[] positionsArray = {
141.278f,62.89886f,-3.0f,140.5417f,62.00852f,0.0f,140.5417f,62.00852f,-3.0f,141.278f,62.89886f,0.0f,140.6678f,62.16262f,0.0f,141.278f,62.89886f,0.0f,140.5417f,62.00852f,0.0f,146.4339f,69.20757f,0.0f,142.0417f,63.69043f,0.0f,142.0802f,63.73032f,0.0f,142.9436f,64.49803f,0.0f,143.8631f,65.19751f,0.0f,144.8335f,65.82466f,0.0f,145.8489f,66.37581f,0.0f,146.9034f,66.84775f,0.0f,147.2671f,68.87461f,0.0f,147.991f,67.23769f,0.0f,148.1184f,68.59092f,0.0f,149.1052f,67.54338f,0.0f,148.9847f,68.35748f,0.0f,149.8633f,68.17508f,0.0f,150.2394f,67.76301f,0.0f,150.751f,68.04435f,0.0f,151.3872f,67.89531f,0.0f,151.6448f,67.96573f,0.0f,152.5417f,67.93949f,0.0f,152.5417f,67.93949f,0.0f,151.6448f,67.96573f,0.0f,151.3872f,67.89531f,0.0f,150.751f,68.04435f,0.0f,150.2394f,67.76301f,0.0f,149.8633f,68.17508f,0.0f,149.1052f,67.54338f,0.0f,148.9847f,68.35748f,0.0f,148.1184f,68.59092f,0.0f,147.991f,67.23769f,0.0f,147.2671f,68.87461f,0.0f,146.9034f,66.84775f,0.0f,146.4339f,69.20757f,0.0f,145.8489f,66.37581f,0.0f,144.8335f,65.82466f,0.0f,143.8631f,65.19751f,0.0f,142.9436f,64.49803f,0.0f,142.0802f,63.73032f,0.0f,142.0417f,63.69043f,0.0f,141.278f,62.89886f,0.0f,140.6678f,62.16262f,0.0f,140.5417f,62.00852f,0.0f,139.8054f,62.89886f,0.0f,140.5417f,62.00852f,-3.0f,140.5417f,62.00852f,0.0f,139.8054f,62.89886f,-3.0f,146.4339f,69.20757f,-3.0f,141.278f,62.89886f,-3.0f,140.5417f,62.00852f,-3.0f,142.0417f,63.69043f,-3.0f,142.0802f,63.73032f,-3.0f,142.9436f,64.49803f,-3.0f,143.8631f,65.19751f,-3.0f,144.8335f,65.82466f,-3.0f,145.8489f,66.37581f,-3.0f,146.9034f,66.84775f,-3.0f,147.2671f,68.87461f,-3.0f,147.991f,67.23769f,-3.0f,148.1184f,68.59092f,-3.0f,149.1052f,67.54338f,-3.0f,148.9847f,68.35748f,-3.0f,149.8633f,68.17508f,-3.0f,150.2394f,67.76301f,-3.0f,150.751f,68.04435f,-3.0f,151.3872f,67.89531f,-3.0f,151.6448f,67.96573f,-3.0f,152.5417f,67.93949f,-3.0f,142.0417f,63.69043f,-3.0f,142.0417f,63.69043f,0.0f,142.0802f,63.73032f,-3.0f,142.0802f,63.73032f,0.0f,146.4339f,69.20757f,0.0f,147.2671f,68.87461f,-3.0f,146.4339f,69.20757f,-3.0f,147.2671f,68.87461f,0.0f,148.1184f,68.59092f,-3.0f,148.1184f,68.59092f,0.0f,148.9847f,68.35748f,-3.0f,148.9847f,68.35748f,0.0f,149.8633f,68.17508f,-3.0f,149.8633f,68.17508f,0.0f,150.751f,68.04435f,-3.0f,150.751f,68.04435f,0.0f,151.6448f,67.96573f,-3.0f,151.6448f,67.96573f,0.0f,152.5417f,67.93949f,-3.0f,152.5417f,67.93949f,0.0f,152.5417f,67.93949f,0.0f,151.3872f,67.89531f,-3.0f,152.5417f,67.93949f,-3.0f,151.3872f,67.89531f,0.0f,150.2394f,67.76301f,-3.0f,150.2394f,67.76301f,0.0f,149.1052f,67.54338f,-3.0f,149.1052f,67.54338f,0.0f,147.991f,67.23769f,-3.0f,147.991f,67.23769f,0.0f,146.9034f,66.84775f,-3.0f,146.9034f,66.84775f,0.0f,145.8489f,66.37581f,-3.0f,145.8489f,66.37581f,0.0f,144.8335f,65.82466f,-3.0f,144.8335f,65.82466f,0.0f,143.8631f,65.19751f,-3.0f,143.8631f,65.19751f,0.0f,142.9436f,64.49803f,-3.0f,142.9436f,64.49803f,0.0f,139.0417f,63.69043f,0.0f,139.0417f,63.69043f,-3.0f,139.0032f,63.73032f,0.0f,139.0032f,63.73032f,-3.0f,129.4386f,67.96573f,-3.0f,129.6962f,67.89531f,-3.0f,128.5417f,67.93949f,-3.0f,130.3324f,68.04435f,-3.0f,130.844f,67.76301f,-3.0f,131.2201f,68.17508f,-3.0f,131.9782f,67.54338f,-3.0f,132.0987f,68.35748f,-3.0f,133.0924f,67.23769f,-3.0f,132.965f,68.59092f,-3.0f,133.8163f,68.87461f,-3.0f,134.18f,66.84775f,-3.0f,134.6495f,69.20757f,-3.0f,135.2345f,66.37581f,-3.0f,135.1852f,68.55311f,-3.0f,135.7208f,67.89865f,-3.0f,136.25f,65.82466f,-3.0f,136.2565f,67.24419f,-3.0f,137.2203f,65.19751f,-3.0f,136.7921f,66.58973f,-3.0f,137.3278f,65.93527f,-3.0f,138.1398f,64.49803f,-3.0f,137.8634f,65.28081f,-3.0f,138.3991f,64.62635f,-3.0f,139.0032f,63.73032f,-3.0f,138.9347f,63.97189f,-3.0f,139.4704f,63.31743f,-3.0f,139.0417f,63.69043f,-3.0f,139.8054f,62.89886f,-3.0f,140.0061f,62.66298f,-3.0f,129.4386f,67.96573f,0.0f,129.6962f,67.89531f,0.0f,128.5417f,67.93949f,0.0f,130.3324f,68.04435f,0.0f,130.844f,67.76301f,0.0f,131.2201f,68.17508f,0.0f,131.9782f,67.54338f,0.0f,132.0987f,68.35748f,0.0f,133.0924f,67.23769f,0.0f,132.965f,68.59092f,0.0f,133.8163f,68.87461f,0.0f,134.18f,66.84775f,0.0f,134.6034f,69.18916f,0.0f,135.2345f,66.37581f,0.0f,136.25f,65.82466f,0.0f,137.2203f,65.19751f,0.0f,138.1398f,64.49803f,0.0f,139.0032f,63.73032f,0.0f,139.0417f,63.69043f,0.0f,139.8054f,62.89886f,0.0f,139.8054f,62.89886f,0.0f,134.6034f,69.18916f,0.0f,139.0417f,63.69043f,0.0f,139.0032f,63.73032f,0.0f,138.1398f,64.49803f,0.0f,137.2203f,65.19751f,0.0f,136.25f,65.82466f,0.0f,135.2345f,66.37581f,0.0f,134.18f,66.84775f,0.0f,133.8163f,68.87461f,0.0f,133.0924f,67.23769f,0.0f,132.965f,68.59092f,0.0f,132.0987f,68.35748f,0.0f,131.9782f,67.54338f,0.0f,131.2201f,68.17508f,0.0f,130.844f,67.76301f,0.0f,130.3324f,68.04435f,0.0f,129.6962f,67.89531f,0.0f,129.4386f,67.96573f,0.0f,128.5417f,67.93949f,0.0f,138.1398f,64.49803f,-3.0f,138.1398f,64.49803f,0.0f,133.8163f,68.87461f,0.0f,134.6495f,69.20757f,-3.0f,133.8163f,68.87461f,-3.0f,134.6495f,69.20757f,0.0f,134.6034f,69.18916f,0.0f,137.2203f,65.19751f,-3.0f,137.2203f,65.19751f,0.0f,136.25f,65.82466f,-3.0f,136.25f,65.82466f,0.0f,135.2345f,66.37581f,-3.0f,135.2345f,66.37581f,0.0f,134.18f,66.84775f,-3.0f,134.18f,66.84775f,0.0f,133.0924f,67.23769f,-3.0f,133.0924f,67.23769f,0.0f,131.9782f,67.54338f,-3.0f,131.9782f,67.54338f,0.0f,130.844f,67.76301f,-3.0f,130.844f,67.76301f,0.0f,129.6962f,67.89531f,-3.0f,129.6962f,67.89531f,0.0f,128.5417f,67.93949f,-3.0f,128.5417f,67.93949f,0.0f,128.5417f,67.93949f,0.0f,129.4386f,67.96573f,-3.0f,128.5417f,67.93949f,-3.0f,129.4386f,67.96573f,0.0f,130.3324f,68.04435f,-3.0f,130.3324f,68.04435f,0.0f,131.2201f,68.17508f,-3.0f,131.2201f,68.17508f,0.0f,132.0987f,68.35748f,-3.0f,132.0987f,68.35748f,0.0f,132.965f,68.59092f,-3.0f,132.965f,68.59092f,0.0f,};
FloatBuffer fbv = GLBuffers.newDirectFloatBuffer(positionsArray, 0);
gl.glVertexPointer(3, GL2.GL_FLOAT, 0, fbv);
gl.glEnableClientState(GL2.GL_VERTEX_ARRAY);
FloatBuffer fbn = null;
FloatBuffer fbt = null;
float[] texcoordArray = null;
{
gl.glColor4d(1.0, 0.0, 0.0, 1.0);
int[] indices = {
0,1,2,1,0,3,26,27,28,27,29,28,28,29,30,29,31,30,30,31,32,31,33,32,33,34,32,32,34,35,34,36,35,35,36,37,36,38,37,37,38,39,39,38,40,40,38,41,41,38,42,42,38,43,43,38,44,44,38,45,38,46,45,47,45,46,48,49,50,49,48,51,52,53,54,53,52,55,55,52,56,56,52,57,57,52,58,58,52,59,59,52,60,60,52,61,61,52,62,61,62,63,63,62,64,63,64,65,65,64,66,65,66,67,65,67,68,68,67,69,68,69,70,70,69,71,70,71,72,73,3,0,3,73,74,74,73,75,74,75,76,77,78,79,78,77,80,80,81,78,81,80,82,82,83,81,83,82,84,84,85,83,85,84,86,86,87,85,87,86,88,88,89,87,89,88,90,90,91,89,91,90,92,93,94,95,94,93,96,96,97,94,97,96,98,98,99,97,99,98,100,100,101,99,101,100,102,102,103,101,103,102,104,104,105,103,105,104,106,106,107,105,107,106,108,108,109,107,109,108,110,110,111,109,111,110,112,112,75,111,75,112,76,113,51,48,51,113,114,114,113,115,114,115,116,117,118,119,118,117,120,118,120,121,121,120,122,121,122,123,123,122,124,123,124,125,125,124,126,125,126,127,125,127,128,128,127,129,128,129,130,130,129,131,130,131,132,130,132,133,133,132,134,133,134,135,135,134,136,135,136,137,135,137,138,138,137,139,138,139,140,138,140,141,141,140,142,141,142,143,141,143,144,144,143,145,145,143,146,145,146,54,167,168,169,169,168,170,170,168,171,171,168,172,172,168,173,173,168,174,174,168,175,168,176,175,175,176,177,176,178,177,178,179,177,177,179,180,179,181,180,180,181,182,181,183,182,182,183,184,183,185,184,186,184,185,115,187,116,187,115,188,189,190,191,190,189,192,192,189,193,188,194,187,194,188,195,195,196,194,196,195,197,197,198,196,198,197,199,199,200,198,200,199,201,201,202,200,202,201,203,203,204,202,204,203,205,205,206,204,206,205,207,207,208,206,208,207,209,209,210,208,210,209,211,212,213,214,213,212,215,215,216,213,216,215,217,217,218,216,218,217,219,219,220,218,220,219,221,221,222,220,222,221,223,223,191,222,191,223,189,};
IntBuffer fbi = GLBuffers.newDirectIntBuffer(indices, 0);
gl.glDrawElements(GL2.GL_TRIANGLES, 501, GL2.GL_UNSIGNED_INT, fbi);
gl.glDisable(GL2.GL_TEXTURE_2D);
gl.glDisable(GL2.GL_BLEND);
}
{
gl.glColor4d(1.0, 1.0, 1.0, 1.0);
int[] indices = {
4,5,6,5,4,7,5,7,8,8,7,9,9,7,10,10,7,11,11,7,12,12,7,13,13,7,14,14,7,15,14,15,16,16,15,17,16,17,18,18,17,19,18,19,20,18,20,21,21,20,22,21,22,23,23,22,24,23,24,25,147,148,149,148,147,150,148,150,151,151,150,152,151,152,153,153,152,154,153,154,155,155,154,156,155,156,157,155,157,158,158,157,159,158,159,160,160,159,161,161,159,162,162,159,163,163,159,164,164,159,165,165,159,166,};
IntBuffer fbi = GLBuffers.newDirectIntBuffer(indices, 0);
gl.glDrawElements(GL2.GL_TRIANGLES, 114, GL2.GL_UNSIGNED_INT, fbi);
gl.glDisable(GL2.GL_TEXTURE_2D);
gl.glDisable(GL2.GL_BLEND);
}
gl.glDisableClientState(GL2.GL_VERTEX_ARRAY);
gl.glDisableClientState(GL2.GL_NORMAL_ARRAY);
gl.glDisableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
}
private void ID46(GL2 gl){
float[] positionsArray = {
139.0866f,71.56598f,-3.0f,140.5417f,62.00852f,-3.0f,138.448f,71.56598f,-3.0f,140.5417f,71.56598f,-3.0f,140.5417f,63.69043f,-3.0f,138.448f,71.56598f,-3.0f,139.0612f,71.56598f,-2.980505f,139.0866f,71.56598f,-3.0f,138.7285f,71.56598f,-2.546875f,138.5193f,71.56598f,-2.041902f,138.448f,71.56598f,-1.5f,141.9968f,71.56598f,-3.0f,142.6355f,71.56598f,-3.0f,142.0222f,71.56598f,-2.980505f,142.6355f,71.56598f,-3.0f,141.9968f,71.56598f,-3.0f,142.3549f,71.56598f,-2.546875f,142.5641f,71.56598f,-2.041902f,142.6355f,71.56598f,-1.5f,};
FloatBuffer fbv = GLBuffers.newDirectFloatBuffer(positionsArray, 0);
gl.glVertexPointer(3, GL2.GL_FLOAT, 0, fbv);
gl.glEnableClientState(GL2.GL_VERTEX_ARRAY);
FloatBuffer fbn = null;
FloatBuffer fbt = null;
float[] texcoordArray = null;
{
gl.glColor4d(1.0, 0.7490196, 0.0, 1.0);
int[] indices = {
0,1,2,1,0,3,1,3,4,5,6,7,6,5,8,8,5,9,9,5,10,11,4,3,4,11,1,1,11,12,13,14,15,14,13,16,14,16,17,14,17,18,};
IntBuffer fbi = GLBuffers.newDirectIntBuffer(indices, 0);
gl.glDrawElements(GL2.GL_TRIANGLES, 42, GL2.GL_UNSIGNED_INT, fbi);
gl.glDisable(GL2.GL_TEXTURE_2D);
gl.glDisable(GL2.GL_BLEND);
}
gl.glDisableClientState(GL2.GL_VERTEX_ARRAY);
gl.glDisableClientState(GL2.GL_NORMAL_ARRAY);
gl.glDisableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
}
private void ID52(GL2 gl){
float[] positionsArray = {
134.6495f,69.20757f,0.0f,135.4618f,69.58867f,-3.0f,134.6495f,69.20757f,-3.0f,135.4618f,69.58867f,0.0f,134.6495f,69.20757f,0.0f,139.8054f,62.89886f,0.0f,134.6034f,69.18916f,0.0f,135.4618f,69.58867f,0.0f,136.2505f,70.0166f,0.0f,137.0128f,70.4899f,0.0f,140.5417f,62.00852f,0.0f,140.5417f,62.00852f,0.0f,137.0128f,70.4899f,0.0f,139.8054f,62.89886f,0.0f,136.2505f,70.0166f,0.0f,135.4618f,69.58867f,0.0f,134.6495f,69.20757f,0.0f,134.6034f,69.18916f,0.0f,136.2505f,70.0166f,-3.0f,136.2505f,70.0166f,0.0f,135.4618f,69.58867f,-3.0f,135.1852f,68.55311f,-3.0f,134.6495f,69.20757f,-3.0f,135.7208f,67.89865f,-3.0f,136.2505f,70.0166f,-3.0f,136.2565f,67.24419f,-3.0f,137.0128f,70.4899f,-3.0f,136.7921f,66.58973f,-3.0f,137.3278f,65.93527f,-3.0f,138.9347f,63.97189f,-3.0f,140.5417f,62.00852f,-3.0f,137.8634f,65.28081f,-3.0f,138.3991f,64.62635f,-3.0f,140.0061f,62.66298f,-3.0f,139.4704f,63.31743f,-3.0f,137.0128f,70.4899f,-3.0f,137.0128f,70.4899f,0.0f,};
FloatBuffer fbv = GLBuffers.newDirectFloatBuffer(positionsArray, 0);
gl.glVertexPointer(3, GL2.GL_FLOAT, 0, fbv);
gl.glEnableClientState(GL2.GL_VERTEX_ARRAY);
FloatBuffer fbn = null;
FloatBuffer fbt = null;
float[] texcoordArray = null;
{
gl.glColor4d(0.0, 0.0, 1.0, 1.0);
int[] indices = {
0,1,2,1,0,3,11,12,13,12,14,13,14,15,13,15,16,13,17,13,16,3,18,1,18,3,19,20,21,22,21,20,23,23,20,24,23,24,25,25,24,26,25,26,27,27,26,28,28,26,29,29,26,30,28,29,31,31,29,32,29,30,33,29,33,34,19,35,18,35,19,36,};
IntBuffer fbi = GLBuffers.newDirectIntBuffer(indices, 0);
gl.glDrawElements(GL2.GL_TRIANGLES, 72, GL2.GL_UNSIGNED_INT, fbi);
gl.glDisable(GL2.GL_TEXTURE_2D);
gl.glDisable(GL2.GL_BLEND);
}
{
gl.glColor4d(1.0, 1.0, 1.0, 1.0);
int[] indices = {
4,5,6,5,4,7,5,7,8,5,8,9,5,9,10,};
IntBuffer fbi = GLBuffers.newDirectIntBuffer(indices, 0);
gl.glDrawElements(GL2.GL_TRIANGLES, 15, GL2.GL_UNSIGNED_INT, fbi);
gl.glDisable(GL2.GL_TEXTURE_2D);
gl.glDisable(GL2.GL_BLEND);
}
gl.glDisableClientState(GL2.GL_VERTEX_ARRAY);
gl.glDisableClientState(GL2.GL_NORMAL_ARRAY);
gl.glDisableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
}
private void ID60(GL2 gl){
float[] positionsArray = {
137.0128f,70.4899f,0.0f,137.7461f,71.00694f,-3.0f,137.0128f,70.4899f,-3.0f,137.7461f,71.00694f,0.0f,137.7461f,71.00694f,0.0f,140.5417f,62.00852f,0.0f,137.0128f,70.4899f,0.0f,138.448f,71.56598f,0.0f,138.448f,71.56598f,0.0f,137.7461f,71.00694f,0.0f,140.5417f,62.00852f,0.0f,137.0128f,70.4899f,0.0f,138.448f,71.56598f,-3.0f,138.448f,71.56598f,-1.5f,138.448f,71.56598f,0.0f,137.7461f,71.00694f,-3.0f,140.5417f,62.00852f,-3.0f,137.0128f,70.4899f,-3.0f,138.448f,71.56598f,-3.0f,};
FloatBuffer fbv = GLBuffers.newDirectFloatBuffer(positionsArray, 0);
gl.glVertexPointer(3, GL2.GL_FLOAT, 0, fbv);
gl.glEnableClientState(GL2.GL_VERTEX_ARRAY);
FloatBuffer fbn = null;
FloatBuffer fbt = null;
float[] texcoordArray = null;
{
gl.glColor4d(1.0, 0.0, 0.0, 1.0);
int[] indices = {
0,1,2,1,0,3,8,9,10,11,10,9,3,12,1,12,3,13,13,3,14,15,16,17,16,15,18,};
IntBuffer fbi = GLBuffers.newDirectIntBuffer(indices, 0);
gl.glDrawElements(GL2.GL_TRIANGLES, 27, GL2.GL_UNSIGNED_INT, fbi);
gl.glDisable(GL2.GL_TEXTURE_2D);
gl.glDisable(GL2.GL_BLEND);
}
{
gl.glColor4d(1.0, 1.0, 1.0, 1.0);
int[] indices = {
4,5,6,5,4,7,};
IntBuffer fbi = GLBuffers.newDirectIntBuffer(indices, 0);
gl.glDrawElements(GL2.GL_TRIANGLES, 6, GL2.GL_UNSIGNED_INT, fbi);
gl.glDisable(GL2.GL_TEXTURE_2D);
gl.glDisable(GL2.GL_BLEND);
}
gl.glDisableClientState(GL2.GL_VERTEX_ARRAY);
gl.glDisableClientState(GL2.GL_NORMAL_ARRAY);
gl.glDisableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
}
private void ID66(GL2 gl){
float[] positionsArray = {
138.0639f,74.9486f,-0.8360817f,137.8362f,74.52448f,-1.5f,137.9284f,74.52448f,-0.7997632f,137.9765f,74.9486f,-1.5f,137.9284f,74.52448f,-2.200237f,138.0639f,74.9486f,-2.163918f,137.7524f,74.08567f,-1.5f,137.8475f,74.08567f,-0.7780784f,138.3202f,74.9486f,-0.2174084f,138.1987f,74.52448f,-0.1472463f,138.2518f,75.35078f,-0.8864131f,138.171f,75.35078f,-1.5f,138.1987f,74.52448f,-2.852754f,138.3202f,74.9486f,-2.782592f,137.8475f,74.08567f,-2.221922f,138.2518f,75.35078f,-2.113587f,137.7453f,73.96275f,-1.5f,137.8406f,73.96275f,-0.7762371f,138.1261f,74.08567f,-0.1053545f,138.7278f,74.9486f,0.3138584f,138.6286f,74.52448f,0.4130826f,138.4886f,75.35078f,-0.314641f,138.4887f,75.72415f,-0.9498965f,138.4163f,75.72415f,-1.5f,138.6286f,74.52448f,-3.413083f,138.7278f,74.9486f,-3.313858f,138.1261f,74.08567f,-2.894645f,138.4886f,75.35078f,-2.685359f,137.8406f,73.96275f,-2.223763f,138.4887f,75.72415f,-2.050103f,141.2655f,73.96275f,-4.20112f,139.8179f,73.96275f,-4.20112f,140.5417f,73.96275f,-4.296405f,141.9399f,73.96275f,-3.921758f,139.1435f,73.96275f,-3.921758f,142.5191f,73.96275f,-3.477357f,138.5643f,73.96275f,-3.477357f,142.9635f,73.96275f,-2.898202f,138.1199f,73.96275f,-2.898202f,143.2428f,73.96275f,-2.223763f,137.8406f,73.96275f,-2.223763f,143.3381f,73.96275f,-1.5f,137.7453f,73.96275f,-1.5f,143.2428f,73.96275f,-0.7762371f,137.8406f,73.96275f,-0.7762371f,142.9635f,73.96275f,-0.1017975f,138.1199f,73.96275f,-0.1017975f,142.5191f,73.96275f,0.4773569f,138.5643f,73.96275f,0.4773569f,141.9399f,73.96275f,0.9217577f,139.1435f,73.96275f,0.9217577f,141.2655f,73.96275f,1.20112f,139.8179f,73.96275f,1.20112f,140.5417f,73.96275f,1.296405f,138.1199f,73.96275f,-0.1017975f,138.5694f,74.08567f,0.4723265f,139.189f,74.52448f,0.8430381f,139.2591f,74.9486f,0.7215138f,138.8654f,75.35078f,0.1763507f,138.701f,75.72415f,-0.4372817f,138.7706f,76.06232f,-1.025447f,138.7082f,76.06232f,-1.5f,139.189f,74.52448f,-3.843038f,139.2591f,74.9486f,-3.721514f,138.5694f,74.08567f,-3.472327f,138.8654f,75.35078f,-3.176351f,138.1199f,73.96275f,-2.898202f,138.701f,75.72415f,-2.562718f,138.7706f,76.06232f,-1.974553f,138.5643f,73.96275f,-3.477357f,139.1435f,73.96275f,-3.921758f,139.1471f,74.08567f,-3.915597f,139.8179f,73.96275f,-4.20112f,139.8198f,74.08567f,-4.194248f,140.5417f,73.96275f,-4.296405f,140.5417f,74.08567f,-4.289291f,141.2636f,74.08567f,-4.194248f,141.2655f,73.96275f,-4.20112f,141.9364f,74.08567f,-3.915597f,141.9399f,73.96275f,-3.921758f,142.514f,74.08567f,-3.472327f,142.5191f,73.96275f,-3.477357f,142.9635f,73.96275f,-2.898202f,142.9573f,74.08567f,-2.894645f,143.2428f,73.96275f,-2.223763f,143.236f,74.08567f,-2.221922f,143.3381f,73.96275f,-1.5f,143.331f,74.08567f,-1.5f,143.331f,74.08567f,-1.5f,143.2428f,73.96275f,-0.7762371f,143.3381f,73.96275f,-1.5f,143.236f,74.08567f,-0.7780784f,142.9635f,73.96275f,-0.1017975f,142.9573f,74.08567f,-0.1053545f,142.5191f,73.96275f,0.4773569f,142.514f,74.08567f,0.4723265f,141.9399f,73.96275f,0.9217577f,141.9364f,74.08567f,0.9155968f,141.2655f,73.96275f,1.20112f,141.2636f,74.08567f,1.194248f,140.5417f,74.08567f,1.289291f,140.5417f,73.96275f,1.296405f,139.8198f,74.08567f,1.194248f,139.8179f,73.96275f,1.20112f,139.1471f,74.08567f,0.9155968f,139.1435f,73.96275f,0.9217577f,138.5643f,73.96275f,0.4773569f,139.8415f,74.52448f,1.113319f,139.8778f,74.9486f,0.9777767f,139.3563f,75.35078f,0.5531019f,139.0388f,75.72415f,0.002910698f,138.9538f,76.06232f,-0.5832332f,139.0417f,76.35952f,-1.5f,139.0928f,76.35952f,-1.111771f,139.8415f,74.52448f,-4.113319f,139.8778f,74.9486f,-3.977777f,139.3563f,75.35078f,-3.553102f,139.0388f,75.72415f,-3.002911f,138.9538f,76.06232f,-2.416767f,139.0928f,76.35952f,-1.888229f,140.5417f,74.52448f,-4.205507f,141.2419f,74.52448f,-4.113319f,141.8945f,74.52448f,-3.843038f,142.4548f,74.52448f,-3.413083f,142.8847f,74.52448f,-2.852754f,143.155f,74.52448f,-2.200237f,143.2472f,74.52448f,-1.5f,143.2472f,74.52448f,-1.5f,143.155f,74.52448f,-0.7997632f,142.8847f,74.52448f,-0.1472463f,142.4548f,74.52448f,0.4130826f,141.8945f,74.52448f,0.8430381f,141.2419f,74.52448f,1.113319f,140.5417f,74.52448f,1.205507f,140.5417f,74.9486f,1.065183f,139.9281f,75.35078f,0.7899377f,139.479f,75.72415f,0.3406822f,139.2452f,76.06232f,-0.2034959f,139.2427f,76.35952f,-0.75f,139.0928f,76.35952f,-1.111771f,139.1809f,76.35952f,-1.472893f,139.0417f,76.35952f,-1.5f,139.3186f,76.35952f,-1.438955f,139.4544f,76.35952f,-1.398271f,139.5881f,76.35952f,-1.350938f,139.7193f,76.35952f,-1.297072f,139.8476f,76.35952f,-1.236803f,139.9728f,76.35952f,-1.170279f,140.0946f,76.35952f,-1.097662f,139.2427f,76.35952f,-0.75f,140.2127f,76.35952f,-1.019127f,140.3268f,76.35952f,-0.9348663f,140.4365f,76.35952f,-0.8450845f,140.5417f,76.35952f,-0.75f,141.9025f,76.35952f,-1.472893f,141.9906f,76.35952f,-1.111771f,142.0417f,76.35952f,-1.5f,141.7648f,76.35952f,-1.438955f,141.629f,76.35952f,-1.398271f,141.4953f,76.35952f,-1.350938f,141.3642f,76.35952f,-1.297072f,141.2358f,76.35952f,-1.236803f,141.1106f,76.35952f,-1.170279f,140.9888f,76.35952f,-1.097662f,141.8407f,76.35952f,-0.75f,140.8707f,76.35952f,-1.019127f,140.7567f,76.35952f,-0.9348663f,140.6469f,76.35952f,-0.8450845f,141.6024f,76.35952f,-0.4393398f,139.481f,76.35952f,-0.4393398f,139.7917f,76.35952f,-0.2009619f,141.2917f,76.35952f,-0.2009619f,140.9299f,76.35952f,-0.05111126f,140.1535f,76.35952f,-0.05111126f,140.5417f,76.35952f,-2.563227E-14f,140.5417f,74.9486f,-4.065183f,139.9281f,75.35078f,-3.789938f,139.479f,75.72415f,-3.340682f,139.2452f,76.06232f,-2.796504f,139.2427f,76.35952f,-2.25f,139.0928f,76.35952f,-1.888229f,140.5417f,76.35952f,-2.25f,139.2427f,76.35952f,-2.25f,140.4365f,76.35952f,-2.154916f,140.3268f,76.35952f,-2.065134f,140.2127f,76.35952f,-1.980873f,140.0946f,76.35952f,-1.902338f,139.9728f,76.35952f,-1.829721f,139.8476f,76.35952f,-1.763197f,139.7193f,76.35952f,-1.702928f,139.5881f,76.35952f,-1.649062f,139.4544f,76.35952f,-1.601729f,139.3186f,76.35952f,-1.561045f,139.1809f,76.35952f,-1.527107f,140.1535f,76.35952f,-2.948889f,140.9299f,76.35952f,-2.948889f,140.5417f,76.35952f,-3.0f,141.2917f,76.35952f,-2.799038f,139.7917f,76.35952f,-2.799038f,141.6024f,76.35952f,-2.56066f,139.481f,76.35952f,-2.56066f,141.8407f,76.35952f,-2.25f,141.9906f,76.35952f,-1.888229f,140.6469f,76.35952f,-2.154916f,140.7567f,76.35952f,-2.065134f,140.8707f,76.35952f,-1.980873f,140.9888f,76.35952f,-1.902338f,141.1106f,76.35952f,-1.829721f,141.2358f,76.35952f,-1.763197f,141.3642f,76.35952f,-1.702928f,141.4953f,76.35952f,-1.649062f,141.629f,76.35952f,-1.601729f,141.7648f,76.35952f,-1.561045f,141.9025f,76.35952f,-1.527107f,141.2056f,74.9486f,-3.977777f,141.8243f,74.9486f,-3.721514f,142.3556f,74.9486f,-3.313858f,142.7632f,74.9486f,-2.782592f,143.0195f,74.9486f,-2.163918f,143.1069f,74.9486f,-1.5f,143.1069f,74.9486f,-1.5f,143.0195f,74.9486f,-0.8360817f,142.7632f,74.9486f,-0.2174084f,142.3556f,74.9486f,0.3138584f,141.8243f,74.9486f,0.7215138f,141.2056f,74.9486f,0.9777767f,140.5417f,75.35078f,0.8707179f,139.9916f,75.72415f,0.5530142f,139.6249f,76.06232f,0.08788669f,139.481f,76.35952f,-0.4393398f,141.9906f,76.35952f,-1.111771f,142.3752f,76.06232f,-1.5f,142.0417f,76.35952f,-1.5f,142.3128f,76.06232f,-1.025447f,139.7917f,76.35952f,-0.2009619f,140.1535f,76.35952f,-0.05111126f,140.0672f,76.06232f,0.2710575f,140.5417f,76.35952f,-2.563227E-14f,140.5417f,76.06232f,0.3335336f,141.0163f,76.06232f,0.2710575f,140.9299f,76.35952f,-0.05111126f,141.4585f,76.06232f,0.08788669f,141.2917f,76.35952f,-0.2009619f,141.8382f,76.06232f,-0.2034959f,141.6024f,76.35952f,-0.4393398f,142.1296f,76.06232f,-0.5832332f,141.8407f,76.35952f,-0.75f,140.5417f,75.35078f,-3.870718f,139.9916f,75.72415f,-3.553014f,139.6249f,76.06232f,-3.087887f,139.481f,76.35952f,-2.56066f,141.9906f,76.35952f,-1.888229f,142.3752f,76.06232f,-1.5f,142.3128f,76.06232f,-1.974553f,142.0417f,76.35952f,-1.5f,141.8407f,76.35952f,-2.25f,142.1296f,76.06232f,-2.416767f,141.6024f,76.35952f,-2.56066f,141.8382f,76.06232f,-2.796504f,141.2917f,76.35952f,-2.799038f,141.4585f,76.06232f,-3.087887f,140.9299f,76.35952f,-2.948889f,141.0163f,76.06232f,-3.271057f,140.5417f,76.35952f,-3.0f,140.5417f,76.06232f,-3.333534f,140.0672f,76.06232f,-3.271057f,140.1535f,76.35952f,-2.948889f,139.7917f,76.35952f,-2.799038f,141.1553f,75.35078f,-3.789938f,141.7271f,75.35078f,-3.553102f,142.2181f,75.35078f,-3.176351f,142.5948f,75.35078f,-2.685359f,142.8316f,75.35078f,-2.113587f,142.9124f,75.35078f,-1.5f,142.9124f,75.35078f,-1.5f,142.8316f,75.35078f,-0.8864131f,142.5948f,75.35078f,-0.314641f,142.2181f,75.35078f,0.1763507f,141.7271f,75.35078f,0.5531019f,141.1553f,75.35078f,0.7899377f,140.5417f,75.72415f,0.6254367f,142.5947f,75.72415f,-0.9498965f,142.6671f,75.72415f,-1.5f,141.0918f,75.72415f,0.5530142f,141.6044f,75.72415f,0.3406822f,142.0446f,75.72415f,0.002910698f,142.3824f,75.72415f,-0.4372817f,140.5417f,75.72415f,-3.625437f,142.6671f,75.72415f,-1.5f,142.5947f,75.72415f,-2.050103f,142.3824f,75.72415f,-2.562718f,142.0446f,75.72415f,-3.002911f,141.6044f,75.72415f,-3.340682f,141.0918f,75.72415f,-3.553014f,};
FloatBuffer fbv = GLBuffers.newDirectFloatBuffer(positionsArray, 0);
gl.glVertexPointer(3, GL2.GL_FLOAT, 0, fbv);
gl.glEnableClientState(GL2.GL_VERTEX_ARRAY);
FloatBuffer fbn = null;
FloatBuffer fbt = null;
float[] texcoordArray = null;
{
gl.glColor4d(1.0, 0.7490196, 0.0, 1.0);
int[] indices = {
0,1,2,1,0,3,3,4,1,4,3,5,2,6,7,6,2,1,8,2,9,2,8,0,10,3,0,3,10,11,5,12,4,12,5,13,1,14,6,14,1,4,11,5,3,5,11,15,7,16,17,16,7,6,9,7,18,7,9,2,19,9,20,9,19,8,21,0,8,0,21,10,22,11,10,11,22,23,13,24,12,24,13,25,4,26,14,26,4,12,15,13,5,13,15,27,6,28,16,28,6,14,23,15,11,15,23,29,30,31,32,31,30,33,31,33,34,34,33,35,34,35,36,36,35,37,36,37,38,38,37,39,38,39,40,40,39,41,40,41,42,42,41,43,42,43,44,44,43,45,44,45,46,46,45,47,46,47,48,48,47,49,48,49,50,50,49,51,50,51,52,52,51,53,18,17,54,17,18,7,20,18,55,18,20,9,56,19,20,19,56,57,58,8,19,8,58,21,59,10,21,10,59,22,60,23,22,23,60,61,25,62,24,62,25,63,12,64,26,64,12,24,27,25,13,25,27,65,14,66,28,66,14,26,29,27,15,27,29,67,61,29,23,29,61,68,26,69,66,69,26,64,64,70,69,70,64,71,71,72,70,72,71,73,73,74,72,74,73,75,76,74,75,74,76,77,78,77,76,77,78,79,80,79,78,79,80,81,80,82,81,82,80,83,83,84,82,84,83,85,85,86,84,86,85,87,88,89,90,89,88,91,91,92,89,92,91,93,93,94,92,94,93,95,96,95,97,95,96,94,98,97,99,97,98,96,98,100,101,100,98,99,101,102,103,102,101,100,103,104,105,104,103,102,105,55,106,55,105,104,55,54,106,54,55,18,104,20,55,20,104,56,107,57,56,57,107,108,57,58,19,58,57,109,110,21,58,21,110,59,111,22,59,22,111,60,60,112,61,112,60,113,63,114,62,114,63,115,24,71,64,71,24,62,65,63,25,63,65,116,67,65,27,65,67,117,68,67,29,67,68,118,61,119,68,119,61,112,62,73,71,73,62,114,114,75,73,75,114,120,121,75,120,75,121,76,122,76,121,76,122,78,123,78,122,78,123,80,123,83,80,83,123,124,124,85,83,85,124,125,125,87,85,87,125,126,127,91,88,91,127,128,128,93,91,93,128,129,129,95,93,95,129,130,97,130,131,130,97,95,99,131,132,131,99,97,99,133,100,133,99,132,100,107,102,107,100,133,102,56,104,56,102,107,133,108,107,108,133,134,108,109,57,109,108,135,109,110,58,110,109,136,59,137,111,137,59,110,60,138,113,138,60,111,139,140,141,140,139,142,142,139,143,143,139,144,144,139,145,145,139,146,146,139,147,147,139,148,148,139,149,148,149,150,150,149,151,151,149,152,152,149,153,154,155,156,155,154,157,155,157,158,155,158,159,155,159,160,155,160,161,155,161,162,155,162,163,155,163,164,164,163,165,164,165,166,164,166,167,164,167,153,164,153,168,168,153,149,168,149,169,168,169,170,168,170,171,171,170,172,172,170,173,172,173,174,115,120,114,120,115,175,116,115,63,115,116,176,117,116,65,116,117,177,67,178,117,178,67,118,68,179,118,179,68,119,180,181,182,181,180,183,183,180,184,184,180,185,185,180,186,186,180,187,187,180,141,187,141,188,188,141,189,189,141,190,190,141,191,191,141,192,192,141,193,194,195,196,195,194,197,197,194,198,197,198,199,199,198,200,199,200,201,201,200,182,201,182,181,201,181,202,202,181,203,202,203,204,202,204,205,202,205,206,202,206,207,202,207,156,156,207,208,156,208,209,156,209,210,156,210,211,156,211,212,156,212,213,214,120,175,120,214,121,215,121,214,121,215,122,216,122,215,122,216,123,216,124,123,124,216,217,217,125,124,125,217,218,218,126,125,126,218,219,220,128,127,128,220,221,221,129,128,129,221,222,222,130,129,130,222,223,131,223,224,223,131,130,132,224,225,224,132,131,132,134,133,134,132,225,134,135,108,135,134,226,135,136,109,136,135,227,110,228,137,228,110,136,111,229,138,229,111,137,230,231,232,231,230,233,137,234,229,234,137,228,228,235,234,235,228,236,236,237,235,237,236,238,237,239,240,239,237,238,240,241,242,241,240,239,242,243,244,243,242,241,244,245,246,245,244,243,246,233,230,233,246,245,176,175,115,175,176,247,177,176,116,176,177,248,117,249,177,249,117,178,118,250,178,250,118,179,251,252,253,252,251,254,255,253,256,253,255,251,257,256,258,256,257,255,259,258,260,258,259,257,261,260,262,260,261,259,263,262,264,262,263,261,265,263,264,263,265,266,249,266,265,266,249,267,178,267,249,267,178,250,247,214,175,214,247,268,269,214,268,214,269,215,270,215,269,215,270,216,270,217,216,217,270,271,271,218,217,218,271,272,272,219,218,219,272,273,274,221,220,221,274,275,275,222,221,222,275,276,276,223,222,223,276,277,224,277,278,277,224,223,225,278,279,278,225,224,225,226,134,226,225,279,226,227,135,227,226,280,227,228,136,228,227,236,231,281,282,281,231,233,280,236,227,236,280,238,280,239,238,239,280,283,283,241,239,241,283,284,241,285,243,285,241,284,243,286,245,286,243,285,233,286,281,286,233,245,248,247,176,247,248,287,249,248,177,248,249,265,253,288,289,288,253,252,256,289,290,289,256,253,258,290,291,290,258,256,260,291,292,291,260,258,260,293,262,293,260,292,264,293,287,293,264,262,265,287,248,287,265,264,293,247,287,247,293,268,292,268,293,268,292,269,291,269,292,269,291,270,291,271,270,271,291,290,290,272,271,272,290,289,289,273,272,273,289,288,282,275,274,275,282,281,281,276,275,276,281,286,286,277,276,277,286,285,278,285,284,285,278,277,279,284,283,284,279,278,279,280,226,280,279,283,};
IntBuffer fbi = GLBuffers.newDirectIntBuffer(indices, 0);
gl.glDrawElements(GL2.GL_TRIANGLES, 1278, GL2.GL_UNSIGNED_INT, fbi);
gl.glDisable(GL2.GL_TEXTURE_2D);
gl.glDisable(GL2.GL_BLEND);
}
gl.glDisableClientState(GL2.GL_VERTEX_ARRAY);
gl.glDisableClientState(GL2.GL_NORMAL_ARRAY);
gl.glDisableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
}
private void ID72(GL2 gl){
float[] positionsArray = {
137.854f,73.19415f,-0.7798367f,137.8497f,72.75667f,-1.5f,137.9414f,72.75667f,-0.8032498f,137.7592f,73.19415f,-1.5f,137.7592f,73.19415f,-1.5f,137.854f,73.19415f,-0.7798367f,137.8497f,72.75667f,-1.5f,137.9414f,72.75667f,-0.8032498f,137.9414f,72.75667f,-2.19675f,137.854f,73.19415f,-2.220163f,137.854f,73.19415f,-2.220163f,137.9414f,72.75667f,-2.19675f,137.9964f,72.33474f,-1.5f,138.0832f,72.33474f,-0.841237f,137.9964f,72.33474f,-1.5f,138.0832f,72.33474f,-0.841237f,138.132f,73.19415f,-0.1087514f,138.2103f,72.75667f,-0.153982f,138.132f,73.19415f,-0.1087514f,138.2103f,72.75667f,-0.153982f,137.8225f,73.63969f,-0.7713982f,137.7266f,73.63969f,-1.5f,137.7266f,73.63969f,-1.5f,137.8225f,73.63969f,-0.7713982f,138.2103f,72.75667f,-2.846018f,138.132f,73.19415f,-2.891249f,138.132f,73.19415f,-2.891249f,138.2103f,72.75667f,-2.846018f,138.0832f,72.33474f,-2.158763f,138.0832f,72.33474f,-2.158763f,137.8225f,73.63969f,-2.228602f,137.8225f,73.63969f,-2.228602f,138.197f,71.93557f,-1.5f,138.2769f,71.93557f,-0.8931488f,138.197f,71.93557f,-1.5f,138.2769f,71.93557f,-0.8931488f,138.3374f,72.33474f,-0.2273676f,138.3374f,72.33474f,-0.2273676f,138.5742f,73.19415f,0.4675227f,138.6381f,72.75667f,0.403557f,138.5742f,73.19415f,0.4675227f,138.6381f,72.75667f,0.403557f,138.1038f,73.63969f,-0.09244933f,138.1038f,73.63969f,-0.09244933f,137.8406f,73.96275f,-0.7762371f,137.7453f,73.96275f,-1.5f,137.7453f,73.96275f,-1.5f,137.8406f,73.96275f,-0.7762371f,138.6381f,72.75667f,-3.403557f,138.5742f,73.19415f,-3.467523f,138.5742f,73.19415f,-3.467523f,138.6381f,72.75667f,-3.403557f,138.3374f,72.33474f,-2.772632f,138.3374f,72.33474f,-2.772632f,138.1038f,73.63969f,-2.907551f,138.1038f,73.63969f,-2.907551f,138.2769f,71.93557f,-2.106851f,138.2769f,71.93557f,-2.106851f,137.8406f,73.96275f,-2.223763f,137.8406f,73.96275f,-2.223763f,138.448f,71.56598f,-1.5f,138.5193f,71.56598f,-0.9580976f,138.448f,71.56598f,-1.5f,138.5193f,71.56598f,-0.9580976f,138.5111f,71.93557f,-0.3276536f,138.5111f,71.93557f,-0.3276536f,138.7419f,72.33474f,0.299774f,138.7419f,72.33474f,0.299774f,139.1505f,73.19415f,0.9097133f,139.1957f,72.75667f,0.8313716f,139.1957f,72.75667f,0.8313716f,139.1505f,73.19415f,0.9097133f,138.5511f,73.63969f,0.4905773f,138.5511f,73.63969f,0.4905773f,138.1199f,73.96275f,-0.1017975f,138.1199f,73.96275f,-0.1017975f,139.1505f,73.19415f,-3.909713f,139.1957f,72.75667f,-3.831372f,139.1957f,72.75667f,-3.831372f,139.1505f,73.19415f,-3.909713f,138.7419f,72.33474f,-3.299774f,138.7419f,72.33474f,-3.299774f,138.5511f,73.63969f,-3.490577f,138.5511f,73.63969f,-3.490577f,138.5111f,71.93557f,-2.672346f,138.5111f,71.93557f,-2.672346f,138.1199f,73.96275f,-2.898202f,138.1199f,73.96275f,-2.898202f,138.5193f,71.56598f,-2.041902f,138.5193f,71.56598f,-2.041902f,138.7285f,71.56598f,-0.453125f,138.7285f,71.56598f,-0.453125f,138.8838f,71.93557f,0.1579482f,138.8838f,71.93557f,0.1579482f,139.2691f,72.33474f,0.7042639f,139.2691f,72.33474f,0.7042639f,139.8215f,73.19415f,1.187686f,139.845f,72.75667f,1.100307f,139.845f,72.75667f,1.100307f,139.8215f,73.19415f,1.187686f,139.1342f,73.63969f,0.9379493f,139.1342f,73.63969f,0.9379493f,138.5643f,73.96275f,0.4773569f,138.5643f,73.96275f,0.4773569f,139.8215f,73.19415f,-4.187686f,139.845f,72.75667f,-4.100307f,139.845f,72.75667f,-4.100307f,139.8215f,73.19415f,-4.187686f,139.2691f,72.33474f,-3.704264f,139.2691f,72.33474f,-3.704264f,139.1342f,73.63969f,-3.937949f,139.1342f,73.63969f,-3.937949f,138.8838f,71.93557f,-3.157948f,138.8838f,71.93557f,-3.157948f,138.5643f,73.96275f,-3.477357f,138.5643f,73.96275f,-3.477357f,138.7285f,71.56598f,-2.546875f,138.7285f,71.56598f,-2.546875f,139.0612f,71.56598f,-0.01949518f,139.0612f,71.56598f,-0.01949518f,139.3694f,71.93557f,0.5305636f,139.3694f,71.93557f,0.5305636f,139.8829f,72.33474f,0.9585369f,139.8829f,72.33474f,0.9585369f,140.5417f,73.19415f,1.282497f,140.5417f,72.75667f,1.192036f,140.5417f,72.75667f,1.192036f,140.5417f,73.19415f,1.282497f,139.8131f,73.63969f,1.219179f,139.8131f,73.63969f,1.219179f,139.1435f,73.96275f,0.9217577f,139.1435f,73.96275f,0.9217577f,140.5417f,73.19415f,-4.282497f,140.5417f,72.75667f,-4.192036f,140.5417f,72.75667f,-4.192036f,140.5417f,73.19415f,-4.282497f,139.8829f,72.33474f,-3.958537f,139.8829f,72.33474f,-3.958537f,139.8131f,73.63969f,-4.219179f,139.8131f,73.63969f,-4.219179f,139.3694f,71.93557f,-3.530564f,139.3694f,71.93557f,-3.530564f,139.1435f,73.96275f,-3.921758f,139.1435f,73.96275f,-3.921758f,139.0612f,71.56598f,-2.980505f,139.0612f,71.56598f,-2.980505f,139.0866f,71.56598f,2.775558E-17f,139.4948f,71.56598f,0.3132407f,139.4948f,71.56598f,0.3132407f,139.0866f,71.56598f,2.775558E-17f,139.9349f,71.93557f,0.7647994f,139.9349f,71.93557f,0.7647994f,140.5417f,72.33474f,1.045265f,140.5417f,72.33474f,1.045265f,141.2385f,72.75667f,1.100307f,141.2619f,73.19415f,1.187686f,141.2619f,73.19415f,1.187686f,141.2385f,72.75667f,1.100307f,140.5417f,73.63969f,1.315101f,140.5417f,73.63969f,1.315101f,139.8179f,73.96275f,1.20112f,139.8179f,73.96275f,1.20112f,141.2619f,73.19415f,-4.187686f,141.2385f,72.75667f,-4.100307f,141.2385f,72.75667f,-4.100307f,141.2619f,73.19415f,-4.187686f,140.5417f,72.33474f,-4.045265f,140.5417f,72.33474f,-4.045265f,140.5417f,73.63969f,-4.315101f,140.5417f,73.63969f,-4.315101f,139.9349f,71.93557f,-3.764799f,139.9349f,71.93557f,-3.764799f,139.8179f,73.96275f,-4.20112f,139.8179f,73.96275f,-4.20112f,139.0866f,71.56598f,-3.0f,139.4948f,71.56598f,-3.313241f,139.4948f,71.56598f,-3.313241f,139.0866f,71.56598f,-3.0f,139.9998f,71.56598f,0.5224072f,139.9998f,71.56598f,0.5224072f,140.5417f,71.93557f,0.8446928f,140.5417f,71.93557f,0.8446928f,141.2005f,72.33474f,0.9585369f,141.2005f,72.33474f,0.9585369f,141.8877f,72.75667f,0.8313716f,141.933f,73.19415f,0.9097133f,141.933f,73.19415f,0.9097133f,141.8877f,72.75667f,0.8313716f,141.2703f,73.63969f,1.219179f,141.2703f,73.63969f,1.219179f,140.5417f,73.96275f,1.296405f,140.5417f,73.96275f,1.296405f,141.8877f,72.75667f,-3.831372f,141.933f,73.19415f,-3.909713f,141.933f,73.19415f,-3.909713f,141.8877f,72.75667f,-3.831372f,141.2005f,72.33474f,-3.958537f,141.2005f,72.33474f,-3.958537f,141.2703f,73.63969f,-4.219179f,141.2703f,73.63969f,-4.219179f,140.5417f,71.93557f,-3.844693f,140.5417f,71.93557f,-3.844693f,140.5417f,73.96275f,-4.296405f,140.5417f,73.96275f,-4.296405f,139.9998f,71.56598f,-3.522407f,139.9998f,71.56598f,-3.522407f,140.5417f,71.56598f,0.59375f,140.5417f,71.56598f,0.59375f,141.1486f,71.93557f,0.7647994f,141.1486f,71.93557f,0.7647994f,141.8143f,72.33474f,0.7042639f,141.8143f,72.33474f,0.7042639f,142.4453f,72.75667f,0.403557f,142.5092f,73.19415f,0.4675227f,142.5092f,73.19415f,0.4675227f,142.4453f,72.75667f,0.403557f,141.9493f,73.63969f,0.9379493f,141.9493f,73.63969f,0.9379493f,141.2655f,73.96275f,1.20112f,141.2655f,73.96275f,1.20112f,142.4453f,72.75667f,-3.403557f,142.5092f,73.19415f,-3.467523f,142.5092f,73.19415f,-3.467523f,142.4453f,72.75667f,-3.403557f,141.8143f,72.33474f,-3.704264f,141.8143f,72.33474f,-3.704264f,141.9493f,73.63969f,-3.937949f,141.9493f,73.63969f,-3.937949f,141.1486f,71.93557f,-3.764799f,141.1486f,71.93557f,-3.764799f,141.2655f,73.96275f,-4.20112f,141.2655f,73.96275f,-4.20112f,140.5417f,71.56598f,-3.59375f,140.5417f,71.56598f,-3.59375f,141.0836f,71.56598f,0.5224072f,141.0836f,71.56598f,0.5224072f,141.7141f,71.93557f,0.5305636f,141.7141f,71.93557f,0.5305636f,142.3415f,72.33474f,0.299774f,142.3415f,72.33474f,0.299774f,142.9514f,73.19415f,-0.1087514f,142.8731f,72.75667f,-0.153982f,142.9514f,73.19415f,-0.1087514f,142.8731f,72.75667f,-0.153982f,142.5323f,73.63969f,0.4905773f,142.5323f,73.63969f,0.4905773f,141.9399f,73.96275f,0.9217577f,141.9399f,73.96275f,0.9217577f,142.8731f,72.75667f,-2.846018f,142.9514f,73.19415f,-2.891249f,142.9514f,73.19415f,-2.891249f,142.8731f,72.75667f,-2.846018f,142.3415f,72.33474f,-3.299774f,142.3415f,72.33474f,-3.299774f,142.5323f,73.63969f,-3.490577f,142.5323f,73.63969f,-3.490577f,141.7141f,71.93557f,-3.530564f,141.7141f,71.93557f,-3.530564f,141.9399f,73.96275f,-3.921758f,141.9399f,73.96275f,-3.921758f,141.0836f,71.56598f,-3.522407f,141.0836f,71.56598f,-3.522407f,141.5886f,71.56598f,0.3132407f,141.5886f,71.56598f,0.3132407f,142.1997f,71.93557f,0.1579482f,142.1997f,71.93557f,0.1579482f,142.746f,72.33474f,-0.2273676f,142.746f,72.33474f,-0.2273676f,143.2294f,73.19415f,-0.7798367f,143.142f,72.75667f,-0.8032498f,143.2294f,73.19415f,-0.7798367f,143.142f,72.75667f,-0.8032498f,142.9797f,73.63969f,-0.09244933f,142.9797f,73.63969f,-0.09244933f,142.5191f,73.96275f,0.4773569f,142.5191f,73.96275f,0.4773569f,143.142f,72.75667f,-2.19675f,143.2294f,73.19415f,-2.220163f,143.2294f,73.19415f,-2.220163f,143.142f,72.75667f,-2.19675f,142.746f,72.33474f,-2.772632f,142.746f,72.33474f,-2.772632f,142.9797f,73.63969f,-2.907551f,142.9797f,73.63969f,-2.907551f,142.1997f,71.93557f,-3.157948f,142.1997f,71.93557f,-3.157948f,142.5191f,73.96275f,-3.477357f,142.5191f,73.96275f,-3.477357f,141.5886f,71.56598f,-3.313241f,141.5886f,71.56598f,-3.313241f,141.9968f,71.56598f,0.0f,142.0222f,71.56598f,-0.01949518f,142.0222f,71.56598f,-0.01949518f,141.9968f,71.56598f,0.0f,142.5723f,71.93557f,-0.3276536f,142.5723f,71.93557f,-0.3276536f,143.0002f,72.33474f,-0.841237f,143.0002f,72.33474f,-0.841237f,143.2337f,72.75667f,-1.5f,143.3242f,73.19415f,-1.5f,143.3242f,73.19415f,-1.5f,143.2337f,72.75667f,-1.5f,143.2609f,73.63969f,-0.7713982f,143.2609f,73.63969f,-0.7713982f,142.9635f,73.96275f,-0.1017975f,142.9635f,73.96275f,-0.1017975f,143.2337f,72.75667f,-1.5f,143.3242f,73.19415f,-1.5f,143.3242f,73.19415f,-1.5f,143.2337f,72.75667f,-1.5f,143.0002f,72.33474f,-2.158763f,143.0002f,72.33474f,-2.158763f,143.2609f,73.63969f,-2.228602f,143.2609f,73.63969f,-2.228602f,142.5723f,71.93557f,-2.672346f,142.5723f,71.93557f,-2.672346f,142.9635f,73.96275f,-2.898202f,142.9635f,73.96275f,-2.898202f,141.9968f,71.56598f,-3.0f,142.0222f,71.56598f,-2.980505f,142.0222f,71.56598f,-2.980505f,141.9968f,71.56598f,-3.0f,142.3549f,71.56598f,-0.453125f,142.3549f,71.56598f,-0.453125f,142.8065f,71.93557f,-0.8931488f,142.8065f,71.93557f,-0.8931488f,143.087f,72.33474f,-1.5f,143.087f,72.33474f,-1.5f,142.0417f,76.35952f,-1.5f,140.5417f,71.56598f,-1.5f,140.5417f,76.35952f,-1.5f,142.6355f,71.56598f,-1.5f,142.3752f,76.06232f,-1.5f,142.6671f,75.72415f,-1.5f,142.8864f,71.93557f,-1.5f,142.9124f,75.35078f,-1.5f,143.087f,72.33474f,-1.5f,143.1069f,74.9486f,-1.5f,143.2337f,72.75667f,-1.5f,143.2472f,74.52448f,-1.5f,143.3242f,73.19415f,-1.5f,143.331f,74.08567f,-1.5f,143.3568f,73.63969f,-1.5f,143.3381f,73.96275f,-1.5f,143.3381f,73.96275f,-1.5f,143.331f,74.08567f,-1.5f,143.3568f,73.63969f,-1.5f,143.3242f,73.19415f,-1.5f,143.2472f,74.52448f,-1.5f,143.2337f,72.75667f,-1.5f,143.1069f,74.9486f,-1.5f,143.087f,72.33474f,-1.5f,142.9124f,75.35078f,-1.5f,142.8864f,71.93557f,-1.5f,142.6671f,75.72415f,-1.5f,142.6355f,71.56598f,-1.5f,142.3752f,76.06232f,-1.5f,142.0417f,76.35952f,-1.5f,140.5417f,71.56598f,-1.5f,140.5417f,76.35952f,-1.5f,143.3568f,73.63969f,-1.5f,143.3568f,73.63969f,-1.5f,143.2428f,73.96275f,-0.7762371f,143.2428f,73.96275f,-0.7762371f,143.087f,72.33474f,-1.5f,143.087f,72.33474f,-1.5f,143.3568f,73.63969f,-1.5f,143.3568f,73.63969f,-1.5f,142.8065f,71.93557f,-2.106851f,142.8065f,71.93557f,-2.106851f,143.2428f,73.96275f,-2.223763f,143.2428f,73.96275f,-2.223763f,142.3549f,71.56598f,-2.546875f,142.3549f,71.56598f,-2.546875f,142.5641f,71.56598f,-0.9580976f,142.5641f,71.56598f,-0.9580976f,142.8864f,71.93557f,-1.5f,142.8864f,71.93557f,-1.5f,143.3381f,73.96275f,-1.5f,143.3381f,73.96275f,-1.5f,143.3381f,73.96275f,-1.5f,143.3381f,73.96275f,-1.5f,142.8864f,71.93557f,-1.5f,142.8864f,71.93557f,-1.5f,142.6355f,71.56598f,-1.5f,142.5641f,71.56598f,-2.041902f,142.6355f,71.56598f,-1.5f,142.5641f,71.56598f,-2.041902f,142.6355f,71.56598f,-1.5f,142.6355f,71.56598f,-1.5f,};
FloatBuffer fbv = GLBuffers.newDirectFloatBuffer(positionsArray, 0);
gl.glVertexPointer(3, GL2.GL_FLOAT, 0, fbv);
gl.glEnableClientState(GL2.GL_VERTEX_ARRAY);
FloatBuffer fbn = null;
FloatBuffer fbt = null;
float[] texcoordArray = null;
{
gl.glColor4d(1.0, 0.7490196, 0.0, 1.0);
int[] indices = {
0,1,2,1,0,3,4,5,6,7,6,5,3,8,1,8,3,9,10,4,11,6,11,4,2,12,13,12,2,1,6,7,14,15,14,7,16,2,17,2,16,0,5,18,7,19,7,18,20,3,0,3,20,21,22,23,4,5,4,23,9,24,8,24,9,25,26,10,27,11,27,10,1,28,12,28,1,8,11,6,29,14,29,6,21,9,3,9,21,30,31,22,10,4,10,22,13,32,33,32,13,12,14,15,34,35,34,15,17,13,36,13,17,2,7,19,15,37,15,19,38,17,39,17,38,16,18,40,19,41,19,40,42,0,16,0,42,20,23,43,5,18,5,43,44,21,20,21,44,45,46,47,22,23,22,47,25,48,24,48,25,49,50,26,51,27,51,26,8,52,28,52,8,24,27,11,53,29,53,11,30,25,9,25,30,54,55,31,26,10,26,31,12,56,32,56,12,28,29,14,57,34,57,14,45,30,21,30,45,58,59,46,31,22,31,46,33,60,61,60,33,32,34,35,62,63,62,35,36,33,64,33,36,13,15,37,35,65,35,37,39,36,66,36,39,17,19,41,37,67,37,41,39,68,38,68,39,69,70,41,71,40,71,41,72,16,38,16,72,42,43,73,18,40,18,73,74,20,42,20,74,44,47,75,23,43,23,75,76,48,49,48,76,77,78,79,51,50,51,79,24,80,52,80,24,48,51,27,81,53,81,27,54,49,25,49,54,82,83,55,50,26,50,55,28,84,56,84,28,52,53,29,85,57,85,29,58,54,30,54,58,86,87,59,55,31,55,59,32,88,60,88,32,56,57,34,89,62,89,34,64,61,90,61,64,33,35,65,63,91,63,65,66,64,92,64,66,36,37,67,65,93,65,67,66,69,39,69,66,94,95,67,70,41,70,67,69,96,68,96,69,97,98,70,99,71,99,70,38,100,72,100,38,68,71,40,101,73,101,40,102,42,72,42,102,74,75,103,43,73,43,103,104,77,76,77,104,105,106,107,78,79,78,107,77,80,48,80,77,108,109,78,81,51,81,78,110,49,82,49,110,76,79,111,50,83,50,111,52,112,84,112,52,80,81,53,113,85,113,53,86,82,54,82,86,114,115,87,83,55,83,87,56,116,88,116,56,84,85,57,117,89,117,57,92,90,118,90,92,64,65,93,91,119,91,93,92,94,66,94,92,120,121,93,95,67,95,93,94,97,69,97,94,122,123,95,98,70,98,95,97,124,96,124,97,125,126,98,127,99,127,98,68,128,100,128,68,96,99,71,129,101,129,71,100,102,72,102,100,130,131,101,103,73,103,101,132,105,104,105,132,133,134,135,106,107,106,135,105,108,77,108,105,136,137,106,109,78,109,106,138,76,110,76,138,104,107,139,79,111,79,139,108,112,80,112,108,140,141,109,113,81,113,109,114,110,82,110,114,142,143,115,111,83,111,115,84,144,116,144,84,112,113,85,145,117,145,85,118,120,92,120,118,146,120,146,147,148,149,121,149,119,121,93,121,119,120,122,94,122,120,150,151,121,123,95,123,121,122,125,97,125,122,152,153,123,126,98,126,123,154,124,125,124,154,155,156,157,127,126,127,157,96,158,128,158,96,124,127,99,159,129,159,99,128,130,100,130,128,160,161,129,131,101,131,129,162,133,132,133,162,163,164,165,134,135,134,165,133,136,105,136,133,166,167,134,137,106,137,134,168,104,138,104,168,132,135,169,107,139,107,169,136,140,108,140,136,170,171,137,141,109,141,137,142,138,110,138,142,172,173,143,139,111,139,143,140,144,112,144,140,174,174,140,175,176,141,177,177,141,145,113,145,141,147,150,120,150,147,178,179,148,151,121,151,148,150,152,122,152,150,180,181,151,153,123,153,151,152,154,125,154,152,182,183,153,157,126,157,153,184,155,154,155,184,185,186,187,156,157,156,187,124,188,158,188,124,155,156,127,189,159,189,127,158,160,128,160,158,190,191,159,161,129,161,159,162,192,163,192,162,193,194,165,195,164,195,165,133,196,166,196,133,163,164,134,197,167,197,134,198,132,168,132,198,162,165,199,135,169,135,199,166,170,136,170,166,200,201,167,171,137,171,167,172,168,138,168,172,202,203,173,169,139,169,173,170,175,140,175,170,204,205,171,176,141,176,171,178,180,150,180,178,206,207,179,181,151,181,179,208,152,180,152,208,182,183,209,153,181,153,209,210,154,182,154,210,184,187,211,157,183,157,211,212,185,184,185,212,213,214,215,186,187,186,215,185,188,155,188,185,216,217,186,189,156,189,186,188,190,158,190,188,218,219,189,191,159,191,189,193,220,192,220,193,221,222,194,223,195,223,194,163,224,196,224,163,192,195,164,225,197,225,164,198,193,162,193,198,226,227,199,194,165,194,199,196,200,166,200,196,228,229,197,201,167,201,197,202,198,168,198,202,230,231,203,199,169,199,203,200,204,170,204,200,232,233,201,205,171,205,201,234,180,206,180,234,208,209,235,181,207,181,235,236,182,208,182,236,210,211,237,183,209,183,237,238,184,210,184,238,212,215,239,187,211,187,239,240,212,241,212,240,213,214,242,215,243,215,242,213,216,185,216,213,244,245,214,217,186,217,214,188,246,218,246,188,216,217,189,247,219,247,189,221,248,220,248,221,249,250,222,251,223,251,222,192,252,224,252,192,220,223,195,253,225,253,195,226,221,193,221,226,254,255,227,222,194,222,227,196,256,228,256,196,224,225,197,257,229,257,197,258,198,230,198,258,226,227,259,199,231,199,259,200,260,232,260,200,228,229,201,261,233,261,201,262,208,234,208,262,236,237,263,209,235,209,263,264,210,236,210,264,238,239,265,211,237,211,265,241,238,266,238,241,212,215,243,239,267,239,243,268,241,269,241,268,240,242,270,243,271,243,270,272,213,240,213,272,244,245,273,214,242,214,273,216,274,246,274,216,244,245,217,275,247,275,217,249,276,248,276,249,277,278,250,279,251,279,250,220,280,252,280,220,248,251,223,281,253,281,223,254,249,221,249,254,282,283,255,250,222,250,255,224,284,256,284,224,252,253,225,285,257,285,225,286,226,258,226,286,254,255,287,227,259,227,287,228,288,260,288,228,256,257,229,289,261,289,229,290,236,262,236,290,264,264,290,291,292,293,265,265,293,237,263,237,293,266,264,294,264,266,238,239,267,265,295,265,267,269,266,296,266,269,241,243,271,267,297,267,271,298,268,269,268,298,299,300,301,270,271,270,301,302,240,268,240,302,272,273,303,242,270,242,303,304,244,272,244,304,274,275,305,245,273,245,305,277,306,276,306,277,307,308,278,309,279,309,278,248,310,280,310,248,276,279,251,311,281,311,251,282,277,249,277,282,312,313,283,278,250,278,283,252,314,284,314,252,280,281,253,315,285,315,253,286,282,254,282,286,316,317,287,283,255,283,287,256,318,288,318,256,284,318,284,319,320,285,321,285,257,321,289,321,257,294,291,322,291,294,264,265,295,292,323,292,295,296,294,324,294,296,266,267,297,295,325,295,297,298,296,326,296,298,269,271,301,297,327,297,301,328,329,330,329,328,331,331,328,332,331,332,333,331,333,334,334,333,335,334,335,336,336,335,337,336,337,338,338,337,339,338,339,340,340,339,341,340,341,342,342,341,343,344,345,346,346,345,347,345,348,347,347,348,349,348,350,349,349,350,351,350,352,351,351,352,353,352,354,353,353,354,355,354,356,355,356,357,355,355,357,358,359,358,357,360,268,299,268,360,302,303,361,270,300,270,361,362,272,302,272,362,304,305,363,273,303,273,363,276,364,310,364,276,306,309,279,365,311,365,279,312,307,277,307,312,366,367,313,308,278,308,313,280,368,314,368,280,310,311,281,369,315,369,281,316,312,282,312,316,370,371,317,313,283,313,317,284,372,319,372,284,314,315,285,373,320,373,285,324,322,374,322,324,294,295,325,323,375,323,325,326,324,376,324,326,296,297,327,325,377,325,327,370,366,312,366,370,378,379,371,367,313,367,371,380,302,360,302,380,362,363,381,303,361,303,381,310,382,368,382,310,364,365,311,383,369,383,311,368,384,385,384,368,382,383,369,386,387,386,369,376,374,388,374,376,324,325,377,375,389,375,377,314,385,372,385,314,368,369,315,387,373,387,315,};
IntBuffer fbi = GLBuffers.newDirectIntBuffer(indices, 0);
gl.glDrawElements(GL2.GL_TRIANGLES, 1836, GL2.GL_UNSIGNED_INT, fbi);
gl.glDisable(GL2.GL_TEXTURE_2D);
gl.glDisable(GL2.GL_BLEND);
}
gl.glDisableClientState(GL2.GL_VERTEX_ARRAY);
gl.glDisableClientState(GL2.GL_NORMAL_ARRAY);
gl.glDisableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
}
private void ID78(GL2 gl){
float[] positionsArray = {
139.0866f,71.56598f,2.775558E-17f,140.5417f,62.00852f,0.0f,138.448f,71.56598f,0.0f,140.5417f,71.56598f,0.0f,140.5417f,63.69043f,0.0f,140.5417f,63.69043f,0.0f,140.5417f,71.56598f,0.0f,140.5417f,62.00852f,0.0f,139.0866f,71.56598f,2.775558E-17f,138.448f,71.56598f,0.0f,141.9968f,71.56598f,0.0f,140.5417f,63.69043f,0.0f,140.5417f,71.56598f,0.0f,140.5417f,62.00852f,0.0f,142.6355f,71.56598f,0.0f,142.6355f,71.56598f,0.0f,141.9968f,71.56598f,0.0f,140.5417f,62.00852f,0.0f,140.5417f,63.69043f,0.0f,140.5417f,71.56598f,0.0f,138.5193f,71.56598f,-0.9580976f,138.448f,71.56598f,0.0f,138.448f,71.56598f,-1.5f,138.7285f,71.56598f,-0.453125f,139.0612f,71.56598f,-0.01949518f,139.0866f,71.56598f,2.775558E-17f,139.0866f,71.56598f,2.775558E-17f,139.0612f,71.56598f,-0.01949518f,138.448f,71.56598f,0.0f,138.7285f,71.56598f,-0.453125f,138.5193f,71.56598f,-0.9580976f,138.448f,71.56598f,-1.5f,142.5641f,71.56598f,-0.9580976f,142.6355f,71.56598f,0.0f,142.6355f,71.56598f,-1.5f,142.3549f,71.56598f,-0.453125f,142.0222f,71.56598f,-0.01949518f,141.9968f,71.56598f,0.0f,};
FloatBuffer fbv = GLBuffers.newDirectFloatBuffer(positionsArray, 0);
gl.glVertexPointer(3, GL2.GL_FLOAT, 0, fbv);
gl.glEnableClientState(GL2.GL_VERTEX_ARRAY);
FloatBuffer fbn = null;
FloatBuffer fbt = null;
float[] texcoordArray = null;
{
gl.glColor4d(1.0, 1.0, 1.0, 1.0);
int[] indices = {
0,1,2,1,0,3,1,3,4,10,11,12,11,10,13,13,10,14,20,21,22,21,20,23,21,23,24,21,24,25,};
IntBuffer fbi = GLBuffers.newDirectIntBuffer(indices, 0);
gl.glDrawElements(GL2.GL_TRIANGLES, 30, GL2.GL_UNSIGNED_INT, fbi);
gl.glDisable(GL2.GL_TEXTURE_2D);
gl.glDisable(GL2.GL_BLEND);
}
{
gl.glColor4d(1.0, 0.7490196, 0.0, 1.0);
int[] indices = {
5,6,7,6,8,7,9,7,8,15,16,17,17,16,18,19,18,16,26,27,28,27,29,28,29,30,28,31,28,30,32,33,34,33,32,35,33,35,36,33,36,37,};
IntBuffer fbi = GLBuffers.newDirectIntBuffer(indices, 0);
gl.glDrawElements(GL2.GL_TRIANGLES, 42, GL2.GL_UNSIGNED_INT, fbi);
gl.glDisable(GL2.GL_TEXTURE_2D);
gl.glDisable(GL2.GL_BLEND);
}
gl.glDisableClientState(GL2.GL_VERTEX_ARRAY);
gl.glDisableClientState(GL2.GL_NORMAL_ARRAY);
gl.glDisableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
}
private void ID84(GL2 gl){
float[] positionsArray = {
141.7531f,76.35952f,-1.477652f,141.6109f,139.4339f,-1.449842f,141.6109f,76.35952f,-1.449842f,141.7531f,139.4339f,-1.477652f,141.7531f,139.4339f,-1.477652f,140.5417f,140.8149f,-1.449842f,140.5417f,140.9986f,-1.477652f,141.6109f,139.4339f,-1.449842f,141.6109f,139.4339f,-1.449842f,141.7531f,139.4339f,-1.477652f,140.5417f,140.8149f,-1.449842f,140.5417f,140.9986f,-1.477652f,141.4713f,139.4339f,-1.41114f,141.4713f,76.35952f,-1.41114f,141.897f,76.35952f,-1.494405f,141.897f,139.4339f,-1.494405f,141.897f,139.4339f,-1.494405f,140.5417f,140.9986f,-1.477652f,140.5417f,141.1844f,-1.494405f,141.7531f,139.4339f,-1.477652f,141.7531f,139.4339f,-1.477652f,141.897f,139.4339f,-1.494405f,140.5417f,140.9986f,-1.477652f,140.5417f,141.1844f,-1.494405f,141.6109f,139.4339f,-1.449842f,140.5417f,140.6346f,-1.41114f,140.5417f,140.8149f,-1.449842f,141.4713f,139.4339f,-1.41114f,141.4713f,139.4339f,-1.41114f,141.6109f,139.4339f,-1.449842f,140.5417f,140.6346f,-1.41114f,140.5417f,140.8149f,-1.449842f,140.5417f,140.9986f,-1.477652f,139.4725f,139.4339f,-1.449842f,139.3303f,139.4339f,-1.477652f,140.5417f,140.8149f,-1.449842f,140.5417f,140.8149f,-1.449842f,140.5417f,140.9986f,-1.477652f,139.4725f,139.4339f,-1.449842f,139.3303f,139.4339f,-1.477652f,141.3351f,139.4339f,-1.361779f,141.3351f,76.35952f,-1.361779f,142.0417f,76.35952f,-1.5f,142.0417f,139.4339f,-1.5f,142.0417f,139.4339f,-1.5f,140.5417f,141.1844f,-1.494405f,140.5417f,141.3714f,-1.5f,141.897f,139.4339f,-1.494405f,141.897f,139.4339f,-1.494405f,142.0417f,139.4339f,-1.5f,140.5417f,141.1844f,-1.494405f,140.5417f,141.3714f,-1.5f,140.5417f,141.1844f,-1.494405f,139.3303f,139.4339f,-1.477652f,139.1865f,139.4339f,-1.494405f,140.5417f,140.9986f,-1.477652f,140.5417f,140.9986f,-1.477652f,140.5417f,141.1844f,-1.494405f,139.3303f,139.4339f,-1.477652f,139.1865f,139.4339f,-1.494405f,141.4713f,139.4339f,-1.41114f,140.5417f,140.4587f,-1.361779f,140.5417f,140.6346f,-1.41114f,141.3351f,139.4339f,-1.361779f,141.3351f,139.4339f,-1.361779f,141.4713f,139.4339f,-1.41114f,140.5417f,140.4587f,-1.361779f,140.5417f,140.6346f,-1.41114f,139.4725f,76.35952f,-1.449842f,139.3303f,139.4339f,-1.477652f,139.3303f,76.35952f,-1.477652f,139.4725f,139.4339f,-1.449842f,141.2032f,139.4339f,-1.302051f,141.2032f,76.35952f,-1.302051f,142.0417f,139.4339f,-1.5f,141.897f,76.35952f,-1.505595f,141.897f,139.4339f,-1.505595f,142.0417f,76.35952f,-1.5f,141.897f,139.4339f,-1.505595f,140.5417f,141.3714f,-1.5f,140.5417f,141.1844f,-1.505595f,142.0417f,139.4339f,-1.5f,142.0417f,139.4339f,-1.5f,141.897f,139.4339f,-1.505595f,140.5417f,141.3714f,-1.5f,140.5417f,141.1844f,-1.505595f,140.5417f,141.3714f,-1.5f,139.1865f,139.4339f,-1.494405f,139.0417f,139.4339f,-1.5f,140.5417f,141.1844f,-1.494405f,140.5417f,141.1844f,-1.494405f,140.5417f,141.3714f,-1.5f,139.1865f,139.4339f,-1.494405f,139.0417f,139.4339f,-1.5f,139.1865f,139.4339f,-1.494405f,139.1865f,76.35952f,-1.494405f,141.3351f,139.4339f,-1.361779f,140.5417f,140.2883f,-1.302051f,140.5417f,140.4587f,-1.361779f,141.2032f,139.4339f,-1.302051f,141.2032f,139.4339f,-1.302051f,141.3351f,139.4339f,-1.361779f,140.5417f,140.2883f,-1.302051f,140.5417f,140.4587f,-1.361779f,140.5417f,140.6346f,-1.41114f,139.7483f,139.4339f,-1.361779f,139.6121f,139.4339f,-1.41114f,140.5417f,140.4587f,-1.361779f,140.5417f,140.4587f,-1.361779f,140.5417f,140.6346f,-1.41114f,139.7483f,139.4339f,-1.361779f,139.6121f,139.4339f,-1.41114f,139.6121f,76.35952f,-1.41114f,139.6121f,139.4339f,-1.41114f,141.0762f,139.4339f,-1.232314f,141.0762f,76.35952f,-1.232314f,141.7531f,76.35952f,-1.522348f,141.7531f,139.4339f,-1.522348f,141.7531f,139.4339f,-1.522348f,140.5417f,141.1844f,-1.505595f,140.5417f,140.9986f,-1.522348f,141.897f,139.4339f,-1.505595f,141.897f,139.4339f,-1.505595f,141.7531f,139.4339f,-1.522348f,140.5417f,141.1844f,-1.505595f,140.5417f,140.9986f,-1.522348f,139.1865f,139.4339f,-1.505595f,140.5417f,141.3714f,-1.5f,139.0417f,139.4339f,-1.5f,140.5417f,141.1844f,-1.505595f,140.5417f,141.1844f,-1.505595f,139.1865f,139.4339f,-1.505595f,140.5417f,141.3714f,-1.5f,139.0417f,139.4339f,-1.5f,139.0417f,139.4339f,-1.5f,139.0417f,76.35952f,-1.5f,141.2032f,139.4339f,-1.302051f,140.5417f,140.1243f,-1.232314f,140.5417f,140.2883f,-1.302051f,141.0762f,139.4339f,-1.232314f,141.0762f,139.4339f,-1.232314f,141.2032f,139.4339f,-1.302051f,140.5417f,140.1243f,-1.232314f,140.5417f,140.2883f,-1.302051f,140.5417f,140.4587f,-1.361779f,139.8802f,139.4339f,-1.302051f,139.7483f,139.4339f,-1.361779f,140.5417f,140.2883f,-1.302051f,140.5417f,140.2883f,-1.302051f,140.5417f,140.4587f,-1.361779f,139.8802f,139.4339f,-1.302051f,139.7483f,139.4339f,-1.361779f,139.7483f,76.35952f,-1.361779f,139.7483f,139.4339f,-1.361779f,140.955f,139.4339f,-1.152984f,140.955f,76.35952f,-1.152984f,141.6109f,76.35952f,-1.550158f,141.6109f,139.4339f,-1.550158f,141.6109f,139.4339f,-1.550158f,140.5417f,140.9986f,-1.522348f,140.5417f,140.8149f,-1.550158f,141.7531f,139.4339f,-1.522348f,141.7531f,139.4339f,-1.522348f,141.6109f,139.4339f,-1.550158f,140.5417f,140.9986f,-1.522348f,140.5417f,140.8149f,-1.550158f,139.3303f,139.4339f,-1.522348f,140.5417f,141.1844f,-1.505595f,139.1865f,139.4339f,-1.505595f,140.5417f,140.9986f,-1.522348f,140.5417f,140.9986f,-1.522348f,139.3303f,139.4339f,-1.522348f,140.5417f,141.1844f,-1.505595f,139.1865f,139.4339f,-1.505595f,139.1865f,139.4339f,-1.505595f,139.0417f,76.35952f,-1.5f,139.0417f,139.4339f,-1.5f,139.1865f,76.35952f,-1.505595f,141.0762f,139.4339f,-1.232314f,140.5417f,139.9677f,-1.152984f,140.5417f,140.1243f,-1.232314f,140.955f,139.4339f,-1.152984f,140.955f,139.4339f,-1.152984f,141.0762f,139.4339f,-1.232314f,140.5417f,139.9677f,-1.152984f,140.5417f,140.1243f,-1.232314f,139.8802f,76.35952f,-1.302051f,139.8802f,139.4339f,-1.302051f,140.8403f,139.4339f,-1.064534f,140.8403f,76.35952f,-1.064534f,141.4713f,76.35952f,-1.58886f,141.4713f,139.4339f,-1.58886f,141.4713f,139.4339f,-1.58886f,140.5417f,140.8149f,-1.550158f,140.5417f,140.6346f,-1.58886f,141.6109f,139.4339f,-1.550158f,141.6109f,139.4339f,-1.550158f,141.4713f,139.4339f,-1.58886f,140.5417f,140.8149f,-1.550158f,140.5417f,140.6346f,-1.58886f,139.4725f,139.4339f,-1.550158f,140.5417f,140.9986f,-1.522348f,139.3303f,139.4339f,-1.522348f,140.5417f,140.8149f,-1.550158f,140.5417f,140.8149f,-1.550158f,139.4725f,139.4339f,-1.550158f,140.5417f,140.9986f,-1.522348f,139.3303f,139.4339f,-1.522348f,139.3303f,139.4339f,-1.522348f,139.3303f,76.35952f,-1.522348f,140.955f,139.4339f,-1.152984f,140.5417f,139.8196f,-1.064534f,140.5417f,139.9677f,-1.152984f,140.8403f,139.4339f,-1.064534f,140.8403f,139.4339f,-1.064534f,140.955f,139.4339f,-1.152984f,140.5417f,139.8196f,-1.064534f,140.5417f,139.9677f,-1.152984f,140.5417f,140.1243f,-1.232314f,140.1284f,139.4339f,-1.152984f,140.0072f,139.4339f,-1.232314f,140.5417f,139.9677f,-1.152984f,140.5417f,139.9677f,-1.152984f,140.5417f,140.1243f,-1.232314f,140.1284f,139.4339f,-1.152984f,140.0072f,139.4339f,-1.232314f,140.0072f,76.35952f,-1.232314f,140.0072f,139.4339f,-1.232314f,140.7328f,139.4339f,-0.9674932f,140.7328f,76.35952f,-0.9674932f,141.3351f,76.35952f,-1.638221f,141.3351f,139.4339f,-1.638221f,141.3351f,139.4339f,-1.638221f,140.5417f,140.6346f,-1.58886f,140.5417f,140.4587f,-1.638221f,141.4713f,139.4339f,-1.58886f,141.4713f,139.4339f,-1.58886f,141.3351f,139.4339f,-1.638221f,140.5417f,140.6346f,-1.58886f,140.5417f,140.4587f,-1.638221f,139.6121f,139.4339f,-1.58886f,140.5417f,140.8149f,-1.550158f,139.4725f,139.4339f,-1.550158f,140.5417f,140.6346f,-1.58886f,140.5417f,140.6346f,-1.58886f,139.6121f,139.4339f,-1.58886f,140.5417f,140.8149f,-1.550158f,139.4725f,139.4339f,-1.550158f,139.4725f,139.4339f,-1.550158f,139.4725f,76.35952f,-1.550158f,140.8403f,139.4339f,-1.064534f,140.5417f,139.6806f,-0.9674932f,140.5417f,139.8196f,-1.064534f,140.7328f,139.4339f,-0.9674932f,140.7328f,139.4339f,-0.9674932f,140.8403f,139.4339f,-1.064534f,140.5417f,139.6806f,-0.9674932f,140.5417f,139.8196f,-1.064534f,140.5417f,139.9677f,-1.152984f,140.2431f,139.4339f,-1.064534f,140.1284f,139.4339f,-1.152984f,140.5417f,139.8196f,-1.064534f,140.5417f,139.8196f,-1.064534f,140.5417f,139.9677f,-1.152984f,140.2431f,139.4339f,-1.064534f,140.1284f,139.4339f,-1.152984f,140.1284f,76.35952f,-1.152984f,140.1284f,139.4339f,-1.152984f,140.633f,76.35952f,-0.8624394f,140.633f,139.4339f,-0.8624394f,141.2032f,76.35952f,-1.697949f,141.2032f,139.4339f,-1.697949f,141.2032f,139.4339f,-1.697949f,140.5417f,140.4587f,-1.638221f,140.5417f,140.2883f,-1.697949f,141.3351f,139.4339f,-1.638221f,141.3351f,139.4339f,-1.638221f,141.2032f,139.4339f,-1.697949f,140.5417f,140.4587f,-1.638221f,140.5417f,140.2883f,-1.697949f,139.7483f,139.4339f,-1.638221f,140.5417f,140.6346f,-1.58886f,139.6121f,139.4339f,-1.58886f,140.5417f,140.4587f,-1.638221f,140.5417f,140.4587f,-1.638221f,139.7483f,139.4339f,-1.638221f,140.5417f,140.6346f,-1.58886f,139.6121f,139.4339f,-1.58886f,139.6121f,139.4339f,-1.58886f,139.6121f,76.35952f,-1.58886f,140.5417f,139.5518f,-0.8624394f,140.7328f,139.4339f,-0.9674932f,140.633f,139.4339f,-0.8624394f,140.5417f,139.6806f,-0.9674932f,140.5417f,139.6806f,-0.9674932f,140.5417f,139.5518f,-0.8624394f,140.7328f,139.4339f,-0.9674932f,140.633f,139.4339f,-0.8624394f,140.5417f,139.8196f,-1.064534f,140.3507f,139.4339f,-0.9674932f,140.2431f,139.4339f,-1.064534f,140.5417f,139.6806f,-0.9674932f,140.5417f,139.6806f,-0.9674932f,140.5417f,139.8196f,-1.064534f,140.3507f,139.4339f,-0.9674932f,140.2431f,139.4339f,-1.064534f,140.2431f,76.35952f,-1.064534f,140.2431f,139.4339f,-1.064534f,140.5417f,76.35952f,-0.75f,140.5417f,139.4339f,-0.75f,141.0762f,76.35952f,-1.767686f,141.0762f,139.4339f,-1.767686f,141.0762f,139.4339f,-1.767686f,140.5417f,140.2883f,-1.697949f,140.5417f,140.1243f,-1.767686f,141.2032f,139.4339f,-1.697949f,141.2032f,139.4339f,-1.697949f,141.0762f,139.4339f,-1.767686f,140.5417f,140.2883f,-1.697949f,140.5417f,140.1243f,-1.767686f,139.8802f,139.4339f,-1.697949f,140.5417f,140.4587f,-1.638221f,139.7483f,139.4339f,-1.638221f,140.5417f,140.2883f,-1.697949f,140.5417f,140.2883f,-1.697949f,139.8802f,139.4339f,-1.697949f,140.5417f,140.4587f,-1.638221f,139.7483f,139.4339f,-1.638221f,139.7483f,139.4339f,-1.638221f,139.7483f,76.35952f,-1.638221f,140.5417f,139.5518f,-0.8624394f,140.633f,139.4339f,-0.8624394f,140.5417f,139.4339f,-0.75f,140.5417f,139.4339f,-0.75f,140.633f,139.4339f,-0.8624394f,140.5417f,139.5518f,-0.8624394f,140.5417f,139.6806f,-0.9674932f,140.4504f,139.4339f,-0.8624394f,140.3507f,139.4339f,-0.9674932f,140.5417f,139.5518f,-0.8624394f,140.5417f,139.5518f,-0.8624394f,140.5417f,139.6806f,-0.9674932f,140.4504f,139.4339f,-0.8624394f,140.3507f,139.4339f,-0.9674932f,140.3507f,76.35952f,-0.9674932f,140.3507f,139.4339f,-0.9674932f,140.5417f,139.4339f,-0.75f,140.4504f,76.35952f,-0.8624394f,140.5417f,76.35952f,-0.75f,140.4504f,139.4339f,-0.8624394f,140.955f,76.35952f,-1.847016f,140.955f,139.4339f,-1.847016f,140.955f,139.4339f,-1.847016f,140.5417f,140.1243f,-1.767686f,140.5417f,139.9677f,-1.847016f,141.0762f,139.4339f,-1.767686f,141.0762f,139.4339f,-1.767686f,140.955f,139.4339f,-1.847016f,140.5417f,140.1243f,-1.767686f,140.5417f,139.9677f,-1.847016f,140.0072f,139.4339f,-1.767686f,140.5417f,140.2883f,-1.697949f,139.8802f,139.4339f,-1.697949f,140.5417f,140.1243f,-1.767686f,140.5417f,140.1243f,-1.767686f,140.0072f,139.4339f,-1.767686f,140.5417f,140.2883f,-1.697949f,139.8802f,139.4339f,-1.697949f,139.8802f,139.4339f,-1.697949f,139.8802f,76.35952f,-1.697949f,140.5417f,139.5518f,-0.8624394f,140.5417f,139.4339f,-0.75f,140.4504f,139.4339f,-0.8624394f,140.4504f,139.4339f,-0.8624394f,140.5417f,139.4339f,-0.75f,140.5417f,139.5518f,-0.8624394f,140.8403f,76.35952f,-1.935466f,140.8403f,139.4339f,-1.935466f,140.8403f,139.4339f,-1.935466f,140.5417f,139.9677f,-1.847016f,140.5417f,139.8196f,-1.935466f,140.955f,139.4339f,-1.847016f,140.955f,139.4339f,-1.847016f,140.8403f,139.4339f,-1.935466f,140.5417f,139.9677f,-1.847016f,140.5417f,139.8196f,-1.935466f,140.1284f,139.4339f,-1.847016f,140.5417f,140.1243f,-1.767686f,140.0072f,139.4339f,-1.767686f,140.5417f,139.9677f,-1.847016f,140.5417f,139.9677f,-1.847016f,140.1284f,139.4339f,-1.847016f,140.5417f,140.1243f,-1.767686f,140.0072f,139.4339f,-1.767686f,140.0072f,139.4339f,-1.767686f,140.0072f,76.35952f,-1.767686f,140.7328f,76.35952f,-2.032507f,140.7328f,139.4339f,-2.032507f,140.7328f,139.4339f,-2.032507f,140.5417f,139.8196f,-1.935466f,140.5417f,139.6806f,-2.032507f,140.8403f,139.4339f,-1.935466f,140.8403f,139.4339f,-1.935466f,140.7328f,139.4339f,-2.032507f,140.5417f,139.8196f,-1.935466f,140.5417f,139.6806f,-2.032507f,140.2431f,139.4339f,-1.935466f,140.5417f,139.9677f,-1.847016f,140.1284f,139.4339f,-1.847016f,140.5417f,139.8196f,-1.935466f,140.5417f,139.8196f,-1.935466f,140.2431f,139.4339f,-1.935466f,140.5417f,139.9677f,-1.847016f,140.1284f,139.4339f,-1.847016f,140.1284f,139.4339f,-1.847016f,140.1284f,76.35952f,-1.847016f,140.633f,139.4339f,-2.137561f,140.633f,76.35952f,-2.137561f,140.5417f,139.6806f,-2.032507f,140.633f,139.4339f,-2.137561f,140.7328f,139.4339f,-2.032507f,140.5417f,139.5518f,-2.137561f,140.5417f,139.5518f,-2.137561f,140.5417f,139.6806f,-2.032507f,140.633f,139.4339f,-2.137561f,140.7328f,139.4339f,-2.032507f,140.3507f,139.4339f,-2.032507f,140.5417f,139.8196f,-1.935466f,140.2431f,139.4339f,-1.935466f,140.5417f,139.6806f,-2.032507f,140.5417f,139.6806f,-2.032507f,140.3507f,139.4339f,-2.032507f,140.5417f,139.8196f,-1.935466f,140.2431f,139.4339f,-1.935466f,140.2431f,139.4339f,-1.935466f,140.2431f,76.35952f,-1.935466f,140.5417f,139.4339f,-2.25f,140.5417f,76.35952f,-2.25f,140.5417f,139.5518f,-2.137561f,140.5417f,139.4339f,-2.25f,140.633f,139.4339f,-2.137561f,140.633f,139.4339f,-2.137561f,140.5417f,139.4339f,-2.25f,140.5417f,139.5518f,-2.137561f,140.5417f,139.5518f,-2.137561f,140.3507f,139.4339f,-2.032507f,140.4504f,139.4339f,-2.137561f,140.5417f,139.6806f,-2.032507f,140.5417f,139.6806f,-2.032507f,140.5417f,139.5518f,-2.137561f,140.3507f,139.4339f,-2.032507f,140.4504f,139.4339f,-2.137561f,140.3507f,139.4339f,-2.032507f,140.3507f,76.35952f,-2.032507f,140.4504f,139.4339f,-2.137561f,140.5417f,76.35952f,-2.25f,140.4504f,76.35952f,-2.137561f,140.5417f,139.4339f,-2.25f,140.5417f,139.5518f,-2.137561f,140.4504f,139.4339f,-2.137561f,140.5417f,139.4339f,-2.25f,140.5417f,139.4339f,-2.25f,140.4504f,139.4339f,-2.137561f,140.5417f,139.5518f,-2.137561f,};
FloatBuffer fbv = GLBuffers.newDirectFloatBuffer(positionsArray, 0);
gl.glVertexPointer(3, GL2.GL_FLOAT, 0, fbv);
gl.glEnableClientState(GL2.GL_VERTEX_ARRAY);
FloatBuffer fbn = null;
FloatBuffer fbt = null;
float[] texcoordArray = null;
{
gl.glEnable(GL2.GL_TEXTURE_2D);
gl.glEnable(GL2.GL_BLEND);
gl.glBlendFunc(GL2.GL_SRC_ALPHA, GL2.GL_ONE_MINUS_SRC_ALPHA);
ID87.bind(gl);
texcoordArray = new float[] {
19.08988f,-34.84995f,34.85847f,-34.81374f,19.08988f,-34.81374f,34.85847f,-34.84995f,-5.890813f,-47.97642f,-5.869057f,-48.00537f,-6.32746f,-47.97642f,-6.363758f,-48.00537f,19.08988f,-34.2126f,34.85847f,-34.17639f,19.08988f,-34.17639f,34.85847f,-34.2126f,19.08988f,-35.27941f,34.85847f,-35.24319f,19.08988f,-35.24319f,34.85847f,-35.27941f,-5.869057f,-48.88852f,-5.847036f,-48.91727f,-6.363758f,-48.88852f,-6.400497f,-48.91727f,-5.912176f,-46.64503f,-5.890813f,-46.67427f,-6.291817f,-46.64503f,-6.32746f,-46.67427f,49.34539f,5.962204f,49.38169f,5.933255f,48.90875f,5.962204f,48.88699f,5.933255f,19.08988f,-33.37117f,34.85847f,-33.33496f,19.08988f,-33.33496f,34.85847f,-33.37117f,19.08988f,-35.49841f,34.85847f,-35.4622f,19.08988f,-35.4622f,34.85847f,-35.49841f,-5.847036f,-49.34907f,-5.824884f,-49.37772f,-6.400497f,-49.34907f,-6.437456f,-49.37772f,49.38169f,6.083536f,49.41843f,6.054787f,48.88699f,6.083536f,48.86497f,6.054787f,-5.933018f,-44.93832f,-5.912176f,-44.96793f,-6.257045f,-44.93832f,-6.291817f,-44.96793f,-19.08988f,34.1499f,-34.85847f,34.11369f,-19.08988f,34.11369f,-34.85847f,34.1499f,19.08988f,-32.33067f,34.85847f,-32.29446f,19.08988f,-32.29446f,34.85847f,-32.33067f,34.85847f,35.46944f,19.08988f,35.43323f,34.85847f,35.43323f,19.08988f,35.46944f,-5.824884f,49.34109f,-5.847036f,49.31245f,-6.437456f,49.34109f,-6.400497f,49.31245f,49.41843f,6.14948f,49.45539f,6.120832f,48.86497f,6.14948f,48.84282f,6.120832f,-19.08988f,34.55612f,-34.85847f,34.51991f,-19.08988f,34.51991f,-34.85847f,34.55612f,-5.953215f,-42.90737f,-5.933018f,-42.93743f,-6.223348f,-42.90737f,-6.257045f,-42.93743f,49.27498f,5.572517f,49.30975f,5.542902f,48.95095f,5.572517f,48.93011f,5.542902f,-19.08988f,33.53996f,-34.85847f,33.50375f,-19.08988f,33.50375f,-34.85847f,33.53996f,19.08988f,-31.09732f,34.85847f,-31.06111f,19.08988f,-31.06111f,34.85847f,-31.09732f,34.85847f,35.19267f,19.08988f,35.15645f,34.85847f,35.15645f,19.08988f,35.19267f,-5.847036f,48.80801f,-5.869057f,48.77927f,-6.400497f,48.80801f,-6.363758f,48.77927f,49.41843f,-6.186102f,48.86497f,-6.186102f,49.45539f,-6.157454f,48.84282f,-6.157454f,-19.08988f,34.75621f,-34.85847f,34.72f,-19.08988f,34.72f,-34.85847f,34.75621f,-5.972645f,-40.60593f,-5.953215f,-40.63649f,-6.19093f,-40.60593f,-6.223348f,-40.63649f,49.24128f,5.316603f,49.27498f,5.286544f,48.97115f,5.316603f,48.95095f,5.286544f,-19.08988f,32.72996f,-34.85847f,32.69374f,-19.08988f,32.69374f,-34.85847f,32.72996f,19.08988f,-29.67848f,34.85847f,-29.64227f,19.08988f,-29.64227f,34.85847f,-29.67848f,34.85847f,34.70596f,19.08988f,34.66975f,34.85847f,34.66975f,19.08988f,34.70596f,-5.869057f,47.82524f,-5.890813f,47.7963f,-6.363758f,47.82524f,-6.32746f,47.7963f,49.38169f,-6.192795f,48.88699f,-6.192795f,49.41843f,-6.164046f,48.86497f,-6.164046f,-34.85847f,-34.78518f,-19.08988f,-34.74897f,-34.85847f,-34.74897f,-19.08988f,-34.78518f,-5.991194f,-38.08646f,-5.972645f,-38.11757f,-6.159983f,-38.08646f,-6.19093f,-38.11757f,-19.08988f,31.72471f,-34.85847f,31.6885f,-19.08988f,31.6885f,-34.85847f,31.72471f,19.08988f,-28.08261f,34.85847f,-28.0464f,19.08988f,-28.0464f,34.85847f,-28.08261f,34.85847f,34.01222f,19.08988f,33.97601f,34.85847f,33.97601f,19.08988f,34.01222f,-5.890813f,46.42611f,-5.912176f,46.39687f,-6.32746f,46.42611f,-6.291817f,46.39687f,49.34539f,-6.142325f,48.90875f,-6.142325f,49.38169f,-6.113375f,48.88699f,-6.113375f,-34.85847f,-34.64286f,-19.08988f,-34.60665f,-34.85847f,-34.60665f,-19.08988f,-34.64286f,-6.00875f,-35.39732f,-5.991194f,-35.429f,-6.130692f,-35.39732f,-6.159983f,-35.429f,49.17792f,4.716455f,49.20886f,4.685353f,49.00913f,4.716455f,48.99058f,4.685353f,-19.08988f,30.53023f,-34.85847f,30.49401f,-19.08988f,30.49401f,-34.85847f,30.53023f,19.08988f,-26.31924f,34.85847f,-26.28303f,19.08988f,-26.28303f,34.85847f,-26.31924f,34.85847f,33.11559f,19.08988f,33.07938f,34.85847f,33.07938f,19.08988f,33.11559f,-5.912176f,44.6554f,-5.933018f,44.62579f,-6.291817f,44.6554f,-6.257045f,44.62579f,49.30975f,-6.038087f,48.93011f,-6.038087f,49.34539f,-6.008846f,48.90875f,-6.008846f,-34.85847f,-34.29389f,-19.08988f,-34.25768f,-34.85847f,-34.25768f,-19.08988f,-34.29389f,-6.025209f,-32.58094f,-6.00875f,-32.61319f,-6.103233f,-32.58094f,-6.130692f,-32.61319f,49.14863f,4.384867f,49.17792f,4.353194f,49.02668f,4.384867f,49.00913f,4.353194f,-19.08988f,29.15364f,-34.85847f,29.11742f,-19.08988f,29.11742f,-34.85847f,29.15364f,34.85847f,-24.3989f,19.08988f,-24.36268f,19.08988f,-24.3989f,34.85847f,-24.36268f,34.85847f,32.02143f,19.08988f,31.98521f,34.85847f,31.98521f,19.08988f,32.02143f,-5.933018f,42.56486f,-5.953215f,42.5348f,-6.257045f,42.56486f,-6.223348f,42.5348f,49.27498f,-5.885043f,48.95095f,-5.885043f,49.30975f,-5.855428f,48.93011f,-5.855428f,-34.85847f,-33.74035f,-19.08988f,-33.70413f,-34.85847f,-33.70413f,-19.08988f,-33.74035f,-6.103233f,-29.70584f,-6.077767f,-29.673f,-6.025209f,-29.70584f,-6.040472f,-29.673f,49.12117f,4.039506f,49.14863f,4.007249f,49.04314f,4.039506f,49.02668f,4.007249f,-19.08988f,27.60315f,-34.85847f,27.56694f,-19.08988f,27.56694f,-34.85847f,27.60315f,34.85847f,-22.33304f,19.08988f,-22.29683f,19.08988f,-22.33304f,34.85847f,-22.29683f,34.85847f,30.73625f,19.08988f,30.70004f,34.85847f,30.70004f,19.08988f,30.73625f,-5.953215f,40.20861f,-5.972645f,40.17805f,-6.223348f,40.20861f,-6.19093f,40.17805f,49.24128f,-5.689175f,48.97115f,-5.689175f,49.27498f,-5.659116f,48.95095f,-5.659116f,-34.85847f,-32.98553f,-19.08988f,-32.94932f,-34.85847f,-32.94932f,-19.08988f,-32.98553f,-6.054449f,-26.7024f,-6.040472f,-26.73581f,-6.077767f,-26.73581f,49.0957f,3.684708f,49.12117f,3.651869f,49.05841f,3.684708f,49.04314f,3.651869f,-19.08988f,25.88803f,-34.85847f,25.85182f,-19.08988f,25.85182f,-34.85847f,25.88803f,-34.85847f,22.00574f,-19.08988f,21.96953f,-19.08988f,22.00574f,-34.85847f,21.96953f,34.85847f,29.26774f,19.08988f,29.23152f,34.85847f,29.23152f,19.08988f,29.26774f,-5.972645f,37.63933f,-5.991194f,37.60823f,-6.19093f,37.63933f,-6.159983f,37.60823f,49.20886f,-5.456924f,48.99058f,-5.456924f,49.24128f,-5.426364f,48.97115f,-5.426364f,-34.85847f,-32.03396f,-19.08988f,-31.99774f,-34.85847f,-31.99774f,-19.08988f,-32.03396f,49.05841f,3.290516f,49.07238f,3.323924f,49.0957f,3.290516f,-34.85847f,24.01851f,-19.08988f,23.98229f,-19.08988f,24.01851f,-34.85847f,23.98229f,34.85847f,27.62465f,19.08988f,27.58844f,34.85847f,27.58844f,19.08988f,27.62465f,-5.991194f,34.90539f,-6.00875f,34.87372f,-6.159983f,34.90539f,-6.130692f,34.87372f,49.17792f,-5.194695f,49.00913f,-5.194695f,49.20886f,-5.163592f,48.99058f,-5.163592f,-34.85847f,-30.8913f,-19.08988f,-30.85509f,-34.85847f,-30.85509f,-19.08988f,-30.8913f,34.85847f,25.8168f,19.08988f,25.78058f,34.85847f,25.78058f,19.08988f,25.8168f,-6.00875f,32.04913f,-6.025209f,32.01687f,-6.130692f,32.04913f,-6.103233f,32.01687f,49.14863f,-4.908473f,49.02668f,-4.908473f,49.17792f,-4.8768f,49.00913f,-4.8768f,-34.85847f,-29.56438f,-19.08988f,-29.52816f,-34.85847f,-29.52816f,-19.08988f,-29.56438f,34.85847f,23.81875f,19.08988f,23.85497f,19.08988f,23.81875f,34.85847f,23.85497f,-6.077767f,29.07319f,-6.103233f,29.10603f,-6.040472f,29.07319f,-6.025209f,29.10603f,49.12117f,-4.603575f,49.04314f,-4.603575f,49.14863f,-4.571318f,49.02668f,-4.571318f,-34.85847f,-28.06111f,-19.08988f,-28.0249f,-34.85847f,-28.0249f,-19.08988f,-28.06111f,34.85847f,21.71466f,19.08988f,21.75087f,19.08988f,21.71466f,34.85847f,21.75087f,-6.040472f,26.10475f,-6.054449f,26.07134f,-6.077767f,26.10475f,49.12117f,-4.251678f,49.0957f,-4.284518f,49.04314f,-4.251678f,49.05841f,-4.284518f,-34.85847f,-26.39048f,-19.08988f,-26.35426f,-34.85847f,-26.35426f,-19.08988f,-26.39048f,-34.85847f,-22.5517f,-19.08988f,-22.58791f,-19.08988f,-22.5517f,-34.85847f,-22.58791f,49.07238f,-3.954988f,49.05841f,-3.921581f,49.0957f,-3.921581f,-34.85847f,-24.52622f,-19.08988f,-24.56244f,-19.08988f,-24.52622f,-34.85847f,-24.56244f,};
fbt = GLBuffers.newDirectFloatBuffer(texcoordArray);
gl.glTexCoordPointer(2, GL2.GL_FLOAT, 0, fbt);
gl.glEnableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
int[] indices = {
0,0,1,1,2,2,1,1,0,0,3,3,8,4,9,5,10,6,11,7,10,6,9,5,2,8,12,9,13,10,12,9,2,8,1,11,14,12,3,13,0,14,3,13,14,12,15,15,20,16,21,17,22,18,23,19,22,18,21,17,28,20,29,21,30,22,31,23,30,22,29,21,36,24,37,25,38,26,39,27,38,26,37,25,13,28,40,29,41,30,40,29,13,28,12,31,42,32,15,33,14,34,15,33,42,32,43,35,48,36,49,37,50,38,51,39,50,38,49,37,56,40,57,41,58,42,59,43,58,42,57,41,64,44,65,45,66,46,67,47,66,46,65,45,68,48,69,49,70,50,69,49,68,48,71,51,41,52,72,53,73,54,72,53,41,52,40,55,74,56,75,57,76,58,75,57,74,56,77,59,82,60,83,61,84,62,85,63,84,62,83,61,90,64,91,65,92,66,93,67,92,66,91,65,70,68,94,69,95,70,94,69,70,68,69,71,100,72,101,73,102,74,103,75,102,74,101,73,108,76,109,77,110,78,111,79,110,78,109,77,112,80,71,81,68,82,71,81,112,80,113,83,73,84,114,85,115,86,114,85,73,84,72,87,76,88,116,89,117,90,116,89,76,88,75,91,122,92,123,93,124,94,125,95,124,94,123,93,130,96,131,97,132,98,133,99,132,98,131,97,95,100,134,101,135,102,134,101,95,100,94,103,140,104,141,105,142,106,143,107,142,106,141,105,148,108,149,109,150,110,151,111,150,110,149,109,152,112,113,113,112,114,113,113,152,112,153,115,115,116,154,117,155,118,154,117,115,116,114,119,117,120,156,121,157,122,156,121,117,120,116,123,162,124,163,125,164,126,165,127,164,126,163,125,170,128,171,129,172,130,173,131,172,130,171,129,174,132,175,133,176,134,175,133,174,132,177,135,182,136,183,137,184,138,185,139,184,138,183,137,186,140,153,141,152,142,153,141,186,140,187,143,155,144,188,145,189,146,188,145,155,144,154,147,157,148,190,149,191,150,190,149,157,148,156,151,196,152,197,153,198,154,199,155,198,154,197,153,204,156,205,157,206,158,207,159,206,158,205,157,208,160,177,161,174,162,177,161,208,160,209,163,214,164,215,165,216,166,217,167,216,166,215,165,222,168,223,169,224,170,225,171,224,170,223,169,226,172,187,173,186,174,187,173,226,172,227,175,189,176,228,177,229,178,228,177,189,176,188,179,191,180,230,181,231,182,230,181,191,180,190,183,236,184,237,185,238,186,239,187,238,186,237,185,244,188,245,189,246,190,247,191,246,190,245,189,248,192,209,193,208,194,209,193,248,192,249,195,254,196,255,197,256,198,257,199,256,198,255,197,262,200,263,201,264,202,265,203,264,202,263,201,266,204,227,205,226,206,227,205,266,204,267,207,228,208,268,209,229,210,268,209,228,208,269,211,231,212,270,213,271,214,270,213,231,212,230,215,276,216,277,217,278,218,279,219,278,218,277,217,284,220,285,221,286,222,287,223,286,222,285,221,288,224,249,225,248,226,249,225,288,224,289,227,294,228,295,229,296,230,297,231,296,230,295,229,302,232,303,233,304,234,305,235,304,234,303,233,306,236,267,237,266,238,267,237,306,236,307,239,269,240,308,241,268,242,308,241,269,240,309,243,271,244,310,245,311,246,310,245,271,244,270,247,316,248,317,249,318,250,319,251,318,250,317,249,324,252,325,253,326,254,327,255,326,254,325,253,328,256,289,257,288,258,289,257,328,256,329,259,333,260,334,261,335,262,340,263,341,264,342,265,343,266,342,265,341,264,344,267,307,268,306,269,307,268,344,267,345,270,346,271,347,272,348,273,347,272,346,271,349,274,311,275,350,276,351,277,350,276,311,275,310,278,356,279,357,280,358,281,359,282,358,281,357,280,364,283,365,284,366,285,367,286,366,285,365,284,368,287,329,288,328,289,329,288,368,287,369,290,373,291,374,292,375,293,349,294,344,295,347,296,344,295,349,294,345,297,351,298,376,299,377,300,376,299,351,298,350,301,382,302,383,303,384,304,385,305,384,304,383,303,390,306,391,307,392,308,393,309,392,308,391,307,394,310,369,311,368,312,369,311,394,310,395,313,377,314,396,315,397,316,396,315,377,314,376,317,402,318,403,319,404,320,405,321,404,320,403,319,410,322,411,323,412,324,413,325,412,324,411,323,414,326,395,327,394,328,395,327,414,326,415,329,416,330,396,331,417,332,396,331,416,330,397,333,422,334,423,335,424,336,425,337,424,336,423,335,430,338,431,339,432,340,433,341,432,340,431,339,434,342,415,343,414,344,415,343,434,342,435,345,436,346,417,347,437,348,417,347,436,346,416,349,441,350,442,351,443,352,448,353,449,354,450,355,451,356,450,355,449,354,452,357,435,358,434,359,435,358,452,357,453,360,454,361,455,362,456,363,455,362,454,361,457,364,461,365,462,366,463,367,452,368,456,369,453,370,456,369,452,368,454,371,};
IntBuffer fbi = GLBuffers.newDirectIntBuffer(indices, 0);
gl.glDisableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
gl.glBegin(GL2.GL_TRIANGLES);
	for (int i=0; i<indices.length-1; i+=2) {
		int vertexIndex = indices[i];
		int textureIndex = indices[i+1];
		try {
		gl.glTexCoord2f(texcoordArray[textureIndex*2], -(texcoordArray[textureIndex*2+1]));
		} catch (ArrayIndexOutOfBoundsException e) {
			System.out.println(e);
		}
		gl.glArrayElement(vertexIndex);
	}
gl.glEnd();
gl.glDisable(GL2.GL_TEXTURE_2D);
gl.glDisable(GL2.GL_BLEND);
}
{
gl.glColor4d(1.0, 1.0, 1.0, 1.0);
int[] indices = {
4,5,6,5,4,7,16,17,18,17,16,19,24,25,26,25,24,27,32,33,34,33,32,35,44,45,46,45,44,47,52,53,54,53,52,55,60,61,62,61,60,63,78,79,80,79,78,81,86,87,88,87,86,89,96,97,98,97,96,99,104,105,106,105,104,107,118,119,120,119,118,121,126,127,128,127,126,129,136,137,138,137,136,139,144,145,146,145,144,147,158,159,160,159,158,161,166,167,168,167,166,169,178,179,180,179,178,181,192,193,194,193,192,195,200,201,202,201,200,203,210,211,212,211,210,213,218,219,220,219,218,221,232,233,234,233,232,235,240,241,242,241,240,243,250,251,252,251,250,253,258,259,260,259,258,261,272,273,274,273,272,275,280,281,282,281,280,283,290,291,292,291,290,293,298,299,300,299,298,301,312,313,314,313,312,315,320,321,322,321,320,323,330,331,332,336,337,338,337,336,339,352,353,354,353,352,355,360,361,362,361,360,363,370,371,372,378,379,380,379,378,381,386,387,388,387,386,389,398,399,400,399,398,401,406,407,408,407,406,409,418,419,420,419,418,421,426,427,428,427,426,429,438,439,440,444,445,446,445,444,447,458,459,460,};
IntBuffer fbi = GLBuffers.newDirectIntBuffer(indices, 0);
gl.glDrawElements(GL2.GL_TRIANGLES, 264, GL2.GL_UNSIGNED_INT, fbi);
gl.glDisable(GL2.GL_TEXTURE_2D);
gl.glDisable(GL2.GL_BLEND);
}
gl.glDisableClientState(GL2.GL_VERTEX_ARRAY);
gl.glDisableClientState(GL2.GL_NORMAL_ARRAY);
gl.glDisableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
}
private void ID97(GL2 gl){
float[] positionsArray = {
139.1809f,76.35952f,-1.472893f,139.1865f,76.35952f,-1.494405f,139.0417f,76.35952f,-1.5f,139.3303f,76.35952f,-1.477652f,139.4725f,76.35952f,-1.449842f,139.3186f,76.35952f,-1.438955f,139.6121f,76.35952f,-1.41114f,139.4544f,76.35952f,-1.398271f,139.7483f,76.35952f,-1.361779f,139.5881f,76.35952f,-1.350938f,139.8802f,76.35952f,-1.302051f,139.7193f,76.35952f,-1.297072f,140.0072f,76.35952f,-1.232314f,139.8476f,76.35952f,-1.236803f,139.9728f,76.35952f,-1.170279f,140.1284f,76.35952f,-1.152984f,140.0946f,76.35952f,-1.097662f,140.2431f,76.35952f,-1.064534f,140.2127f,76.35952f,-1.019127f,140.3507f,76.35952f,-0.9674932f,140.3268f,76.35952f,-0.9348663f,140.4504f,76.35952f,-0.8624394f,140.4365f,76.35952f,-0.8450845f,140.5417f,76.35952f,-0.75f,};
FloatBuffer fbv = GLBuffers.newDirectFloatBuffer(positionsArray, 0);
gl.glVertexPointer(3, GL2.GL_FLOAT, 0, fbv);
gl.glEnableClientState(GL2.GL_VERTEX_ARRAY);
FloatBuffer fbn = null;
FloatBuffer fbt = null;
float[] texcoordArray = null;
{
gl.glColor4d(1.0, 1.0, 1.0, 1.0);
int[] indices = {
0,1,2,1,0,3,3,0,4,4,0,5,4,5,6,6,5,7,6,7,8,8,7,9,8,9,10,10,9,11,10,11,12,12,11,13,12,13,14,12,14,15,15,14,16,15,16,17,17,16,18,17,18,19,19,18,20,19,20,21,21,20,22,21,22,23,};
IntBuffer fbi = GLBuffers.newDirectIntBuffer(indices, 0);
gl.glDrawElements(GL2.GL_TRIANGLES, 66, GL2.GL_UNSIGNED_INT, fbi);
gl.glDisable(GL2.GL_TEXTURE_2D);
gl.glDisable(GL2.GL_BLEND);
}
gl.glDisableClientState(GL2.GL_VERTEX_ARRAY);
gl.glDisableClientState(GL2.GL_NORMAL_ARRAY);
gl.glDisableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
}
private void ID103(GL2 gl){
float[] positionsArray = {
145.6216f,69.58867f,0.0f,146.4339f,69.20757f,-3.0f,145.6216f,69.58867f,-3.0f,146.4339f,69.20757f,0.0f,144.0706f,70.4899f,0.0f,140.6678f,62.16262f,0.0f,140.5417f,62.00852f,0.0f,144.8329f,70.0166f,0.0f,145.6216f,69.58867f,0.0f,146.4339f,69.20757f,0.0f,146.4339f,69.20757f,0.0f,145.6216f,69.58867f,0.0f,140.6678f,62.16262f,0.0f,144.8329f,70.0166f,0.0f,144.0706f,70.4899f,0.0f,140.5417f,62.00852f,0.0f,140.5417f,62.00852f,-3.0f,145.6216f,69.58867f,-3.0f,146.4339f,69.20757f,-3.0f,144.8329f,70.0166f,-3.0f,144.0706f,70.4899f,-3.0f,144.8329f,70.0166f,0.0f,144.8329f,70.0166f,-3.0f,144.0706f,70.4899f,0.0f,144.0706f,70.4899f,-3.0f,};
FloatBuffer fbv = GLBuffers.newDirectFloatBuffer(positionsArray, 0);
gl.glVertexPointer(3, GL2.GL_FLOAT, 0, fbv);
gl.glEnableClientState(GL2.GL_VERTEX_ARRAY);
FloatBuffer fbn = null;
FloatBuffer fbt = null;
float[] texcoordArray = null;
{
gl.glColor4d(0.0, 0.0, 1.0, 1.0);
int[] indices = {
0,1,2,1,0,3,10,11,12,11,13,12,13,14,12,15,12,14,16,17,18,17,16,19,19,16,20,21,2,22,2,21,0,23,22,24,22,23,21,};
IntBuffer fbi = GLBuffers.newDirectIntBuffer(indices, 0);
gl.glDrawElements(GL2.GL_TRIANGLES, 39, GL2.GL_UNSIGNED_INT, fbi);
gl.glDisable(GL2.GL_TEXTURE_2D);
gl.glDisable(GL2.GL_BLEND);
}
{
gl.glColor4d(1.0, 1.0, 1.0, 1.0);
int[] indices = {
4,5,6,5,4,7,5,7,8,5,8,9,};
IntBuffer fbi = GLBuffers.newDirectIntBuffer(indices, 0);
gl.glDrawElements(GL2.GL_TRIANGLES, 12, GL2.GL_UNSIGNED_INT, fbi);
gl.glDisable(GL2.GL_TEXTURE_2D);
gl.glDisable(GL2.GL_BLEND);
}
gl.glDisableClientState(GL2.GL_VERTEX_ARRAY);
gl.glDisableClientState(GL2.GL_NORMAL_ARRAY);
gl.glDisableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
}
private void ID109(GL2 gl){
float[] positionsArray = {
143.3373f,71.00694f,0.0f,144.0706f,70.4899f,-3.0f,143.3373f,71.00694f,-3.0f,144.0706f,70.4899f,0.0f,140.5417f,62.00852f,0.0f,143.3373f,71.00694f,0.0f,144.0706f,70.4899f,0.0f,142.6355f,71.56598f,0.0f,142.6355f,71.56598f,0.0f,140.5417f,62.00852f,0.0f,143.3373f,71.00694f,0.0f,144.0706f,70.4899f,0.0f,140.5417f,62.00852f,-3.0f,143.3373f,71.00694f,-3.0f,144.0706f,70.4899f,-3.0f,142.6355f,71.56598f,-3.0f,142.6355f,71.56598f,-1.5f,142.6355f,71.56598f,-3.0f,142.6355f,71.56598f,0.0f,};
FloatBuffer fbv = GLBuffers.newDirectFloatBuffer(positionsArray, 0);
gl.glVertexPointer(3, GL2.GL_FLOAT, 0, fbv);
gl.glEnableClientState(GL2.GL_VERTEX_ARRAY);
FloatBuffer fbn = null;
FloatBuffer fbt = null;
float[] texcoordArray = null;
{
gl.glColor4d(1.0, 0.0, 0.0, 1.0);
int[] indices = {
0,1,2,1,0,3,8,9,10,11,10,9,12,13,14,13,12,15,16,2,17,2,16,0,0,16,18,};
IntBuffer fbi = GLBuffers.newDirectIntBuffer(indices, 0);
gl.glDrawElements(GL2.GL_TRIANGLES, 27, GL2.GL_UNSIGNED_INT, fbi);
gl.glDisable(GL2.GL_TEXTURE_2D);
gl.glDisable(GL2.GL_BLEND);
}
{
gl.glColor4d(1.0, 1.0, 1.0, 1.0);
int[] indices = {
4,5,6,5,4,7,};
IntBuffer fbi = GLBuffers.newDirectIntBuffer(indices, 0);
gl.glDrawElements(GL2.GL_TRIANGLES, 6, GL2.GL_UNSIGNED_INT, fbi);
gl.glDisable(GL2.GL_TEXTURE_2D);
gl.glDisable(GL2.GL_BLEND);
}
gl.glDisableClientState(GL2.GL_VERTEX_ARRAY);
gl.glDisableClientState(GL2.GL_NORMAL_ARRAY);
gl.glDisableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
}
private void ID115(GL2 gl){
float[] positionsArray = {
140.4365f,76.35952f,-2.154916f,140.4504f,76.35952f,-2.137561f,140.5417f,76.35952f,-2.25f,140.3268f,76.35952f,-2.065134f,140.3507f,76.35952f,-2.032507f,140.2127f,76.35952f,-1.980873f,140.2431f,76.35952f,-1.935466f,140.0946f,76.35952f,-1.902338f,140.1284f,76.35952f,-1.847016f,139.9728f,76.35952f,-1.829721f,140.0072f,76.35952f,-1.767686f,139.8476f,76.35952f,-1.763197f,139.8802f,76.35952f,-1.697949f,139.7193f,76.35952f,-1.702928f,139.5881f,76.35952f,-1.649062f,139.7483f,76.35952f,-1.638221f,139.4544f,76.35952f,-1.601729f,139.6121f,76.35952f,-1.58886f,139.3186f,76.35952f,-1.561045f,139.4725f,76.35952f,-1.550158f,139.1809f,76.35952f,-1.527107f,139.3303f,76.35952f,-1.522348f,139.0417f,76.35952f,-1.5f,139.1865f,76.35952f,-1.505595f,};
FloatBuffer fbv = GLBuffers.newDirectFloatBuffer(positionsArray, 0);
gl.glVertexPointer(3, GL2.GL_FLOAT, 0, fbv);
gl.glEnableClientState(GL2.GL_VERTEX_ARRAY);
FloatBuffer fbn = null;
FloatBuffer fbt = null;
float[] texcoordArray = null;
{
gl.glColor4d(1.0, 1.0, 1.0, 1.0);
int[] indices = {
0,1,2,1,0,3,1,3,4,4,3,5,4,5,6,6,5,7,6,7,8,8,7,9,8,9,10,10,9,11,10,11,12,12,11,13,12,13,14,12,14,15,15,14,16,15,16,17,17,16,18,17,18,19,19,18,20,19,20,21,21,20,22,21,22,23,};
IntBuffer fbi = GLBuffers.newDirectIntBuffer(indices, 0);
gl.glDrawElements(GL2.GL_TRIANGLES, 66, GL2.GL_UNSIGNED_INT, fbi);
gl.glDisable(GL2.GL_TEXTURE_2D);
gl.glDisable(GL2.GL_BLEND);
}
gl.glDisableClientState(GL2.GL_VERTEX_ARRAY);
gl.glDisableClientState(GL2.GL_NORMAL_ARRAY);
gl.glDisableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
}
private void ID121(GL2 gl){
float[] positionsArray = {
141.897f,76.35952f,-1.494405f,141.9025f,76.35952f,-1.472893f,142.0417f,76.35952f,-1.5f,141.7531f,76.35952f,-1.477652f,141.6109f,76.35952f,-1.449842f,141.7648f,76.35952f,-1.438955f,141.4713f,76.35952f,-1.41114f,141.629f,76.35952f,-1.398271f,141.3351f,76.35952f,-1.361779f,141.4953f,76.35952f,-1.350938f,141.2032f,76.35952f,-1.302051f,141.3642f,76.35952f,-1.297072f,141.0762f,76.35952f,-1.232314f,141.2358f,76.35952f,-1.236803f,141.1106f,76.35952f,-1.170279f,140.955f,76.35952f,-1.152984f,140.9888f,76.35952f,-1.097662f,140.8403f,76.35952f,-1.064534f,140.8707f,76.35952f,-1.019127f,140.7328f,76.35952f,-0.9674932f,140.7567f,76.35952f,-0.9348663f,140.633f,76.35952f,-0.8624394f,140.6469f,76.35952f,-0.8450845f,140.5417f,76.35952f,-0.75f,};
FloatBuffer fbv = GLBuffers.newDirectFloatBuffer(positionsArray, 0);
gl.glVertexPointer(3, GL2.GL_FLOAT, 0, fbv);
gl.glEnableClientState(GL2.GL_VERTEX_ARRAY);
FloatBuffer fbn = null;
FloatBuffer fbt = null;
float[] texcoordArray = null;
{
gl.glColor4d(1.0, 1.0, 1.0, 1.0);
int[] indices = {
0,1,2,1,0,3,1,3,4,1,4,5,5,4,6,5,6,7,7,6,8,7,8,9,9,8,10,9,10,11,11,10,12,11,12,13,13,12,14,14,12,15,14,15,16,16,15,17,16,17,18,18,17,19,18,19,20,20,19,21,20,21,22,22,21,23,};
IntBuffer fbi = GLBuffers.newDirectIntBuffer(indices, 0);
gl.glDrawElements(GL2.GL_TRIANGLES, 66, GL2.GL_UNSIGNED_INT, fbi);
gl.glDisable(GL2.GL_TEXTURE_2D);
gl.glDisable(GL2.GL_BLEND);
}
gl.glDisableClientState(GL2.GL_VERTEX_ARRAY);
gl.glDisableClientState(GL2.GL_NORMAL_ARRAY);
gl.glDisableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
}
private void ID127(GL2 gl){
float[] positionsArray = {
140.5417f,139.4339f,-1.5f,141.897f,139.4339f,-1.494405f,142.0417f,139.4339f,-1.5f,141.7531f,139.4339f,-1.477652f,141.6109f,139.4339f,-1.449842f,141.4713f,139.4339f,-1.41114f,141.3351f,139.4339f,-1.361779f,141.2032f,139.4339f,-1.302051f,141.0762f,139.4339f,-1.232314f,140.955f,139.4339f,-1.152984f,140.8403f,139.4339f,-1.064534f,140.7328f,139.4339f,-0.9674932f,140.633f,139.4339f,-0.8624394f,140.5417f,139.4339f,-0.75f,140.5417f,141.3714f,-1.5f,140.5417f,139.4339f,-1.5f,139.0417f,139.4339f,-1.5f,142.0417f,139.4339f,-1.5f,140.5417f,139.4339f,-0.75f,140.5417f,76.35952f,-1.5f,140.5417f,76.35952f,-0.75f,140.5417f,139.4339f,-1.5f,140.4504f,139.4339f,-2.137561f,140.5417f,139.4339f,-1.5f,140.5417f,139.4339f,-2.25f,140.3507f,139.4339f,-2.032507f,140.2431f,139.4339f,-1.935466f,140.1284f,139.4339f,-1.847016f,140.0072f,139.4339f,-1.767686f,139.8802f,139.4339f,-1.697949f,139.7483f,139.4339f,-1.638221f,139.6121f,139.4339f,-1.58886f,139.4725f,139.4339f,-1.550158f,139.3303f,139.4339f,-1.522348f,139.1865f,139.4339f,-1.505595f,139.0417f,139.4339f,-1.5f,140.5417f,139.4339f,-2.25f,140.5417f,76.35952f,-1.5f,140.5417f,76.35952f,-2.25f,140.5417f,139.4339f,-1.5f,};
FloatBuffer fbv = GLBuffers.newDirectFloatBuffer(positionsArray, 0);
gl.glVertexPointer(3, GL2.GL_FLOAT, 0, fbv);
gl.glEnableClientState(GL2.GL_VERTEX_ARRAY);
FloatBuffer fbn = null;
FloatBuffer fbt = null;
float[] texcoordArray = null;
{
gl.glColor4d(1.0, 1.0, 1.0, 1.0);
int[] indices = {
0,1,2,1,0,3,3,0,4,4,0,5,5,0,6,6,0,7,7,0,8,8,0,9,9,0,10,10,0,11,11,0,12,12,0,13,14,15,16,15,14,17,18,19,20,19,18,21,22,23,24,23,22,25,23,25,26,23,26,27,23,27,28,23,28,29,23,29,30,23,30,31,23,31,32,23,32,33,23,33,34,23,34,35,36,37,38,37,36,39,};
IntBuffer fbi = GLBuffers.newDirectIntBuffer(indices, 0);
gl.glDrawElements(GL2.GL_TRIANGLES, 90, GL2.GL_UNSIGNED_INT, fbi);
gl.glDisable(GL2.GL_TEXTURE_2D);
gl.glDisable(GL2.GL_BLEND);
}
gl.glDisableClientState(GL2.GL_VERTEX_ARRAY);
gl.glDisableClientState(GL2.GL_NORMAL_ARRAY);
gl.glDisableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
}
private void ID133(GL2 gl){
float[] positionsArray = {
140.633f,76.35952f,-2.137561f,140.6469f,76.35952f,-2.154916f,140.5417f,76.35952f,-2.25f,140.7567f,76.35952f,-2.065134f,140.7328f,76.35952f,-2.032507f,140.8707f,76.35952f,-1.980873f,140.8403f,76.35952f,-1.935466f,140.9888f,76.35952f,-1.902338f,140.955f,76.35952f,-1.847016f,141.1106f,76.35952f,-1.829721f,141.0762f,76.35952f,-1.767686f,141.2358f,76.35952f,-1.763197f,141.2032f,76.35952f,-1.697949f,141.3642f,76.35952f,-1.702928f,141.4953f,76.35952f,-1.649062f,141.3351f,76.35952f,-1.638221f,141.629f,76.35952f,-1.601729f,141.4713f,76.35952f,-1.58886f,141.7648f,76.35952f,-1.561045f,141.6109f,76.35952f,-1.550158f,141.9025f,76.35952f,-1.527107f,141.7531f,76.35952f,-1.522348f,142.0417f,76.35952f,-1.5f,141.897f,76.35952f,-1.505595f,};
FloatBuffer fbv = GLBuffers.newDirectFloatBuffer(positionsArray, 0);
gl.glVertexPointer(3, GL2.GL_FLOAT, 0, fbv);
gl.glEnableClientState(GL2.GL_VERTEX_ARRAY);
FloatBuffer fbn = null;
FloatBuffer fbt = null;
float[] texcoordArray = null;
{
gl.glColor4d(1.0, 1.0, 1.0, 1.0);
int[] indices = {
0,1,2,1,0,3,3,0,4,3,4,5,5,4,6,5,6,7,7,6,8,7,8,9,9,8,10,9,10,11,11,10,12,11,12,13,13,12,14,14,12,15,14,15,16,16,15,17,16,17,18,18,17,19,18,19,20,20,19,21,20,21,22,22,21,23,};
IntBuffer fbi = GLBuffers.newDirectIntBuffer(indices, 0);
gl.glDrawElements(GL2.GL_TRIANGLES, 66, GL2.GL_UNSIGNED_INT, fbi);
gl.glDisable(GL2.GL_TEXTURE_2D);
gl.glDisable(GL2.GL_BLEND);
}
gl.glDisableClientState(GL2.GL_VERTEX_ARRAY);
gl.glDisableClientState(GL2.GL_NORMAL_ARRAY);
gl.glDisableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
}
private void ID139(GL2 gl){
float[] positionsArray = {
140.5417f,140.8149f,-1.449842f,139.6121f,139.4339f,-1.41114f,139.4725f,139.4339f,-1.449842f,140.5417f,140.6346f,-1.41114f,140.5417f,140.6346f,-1.41114f,140.5417f,140.8149f,-1.449842f,139.6121f,139.4339f,-1.41114f,139.4725f,139.4339f,-1.449842f,};
FloatBuffer fbv = GLBuffers.newDirectFloatBuffer(positionsArray, 0);
gl.glVertexPointer(3, GL2.GL_FLOAT, 0, fbv);
gl.glEnableClientState(GL2.GL_VERTEX_ARRAY);
FloatBuffer fbn = null;
FloatBuffer fbt = null;
float[] texcoordArray = null;
{
gl.glColor4d(1.0, 1.0, 1.0, 1.0);
int[] indices = {
0,1,2,1,0,3,};
IntBuffer fbi = GLBuffers.newDirectIntBuffer(indices, 0);
gl.glDrawElements(GL2.GL_TRIANGLES, 6, GL2.GL_UNSIGNED_INT, fbi);
gl.glDisable(GL2.GL_TEXTURE_2D);
gl.glDisable(GL2.GL_BLEND);
}
{
gl.glColor4d(0.6666667, 0.6666667, 0.6666667, 1.0);
int[] indices = {
4,5,6,7,6,5,};
IntBuffer fbi = GLBuffers.newDirectIntBuffer(indices, 0);
gl.glDrawElements(GL2.GL_TRIANGLES, 6, GL2.GL_UNSIGNED_INT, fbi);
gl.glDisable(GL2.GL_TEXTURE_2D);
gl.glDisable(GL2.GL_BLEND);
}
gl.glDisableClientState(GL2.GL_VERTEX_ARRAY);
gl.glDisableClientState(GL2.GL_NORMAL_ARRAY);
gl.glDisableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
}
private void ID147(GL2 gl){
float[] positionsArray = {
140.5417f,140.2883f,-1.302051f,140.0072f,139.4339f,-1.232314f,139.8802f,139.4339f,-1.302051f,140.5417f,140.1243f,-1.232314f,140.5417f,140.1243f,-1.232314f,140.5417f,140.2883f,-1.302051f,140.0072f,139.4339f,-1.232314f,139.8802f,139.4339f,-1.302051f,};
FloatBuffer fbv = GLBuffers.newDirectFloatBuffer(positionsArray, 0);
gl.glVertexPointer(3, GL2.GL_FLOAT, 0, fbv);
gl.glEnableClientState(GL2.GL_VERTEX_ARRAY);
FloatBuffer fbn = null;
FloatBuffer fbt = null;
float[] texcoordArray = null;
{
gl.glColor4d(1.0, 1.0, 1.0, 1.0);
int[] indices = {
0,1,2,1,0,3,};
IntBuffer fbi = GLBuffers.newDirectIntBuffer(indices, 0);
gl.glDrawElements(GL2.GL_TRIANGLES, 6, GL2.GL_UNSIGNED_INT, fbi);
gl.glDisable(GL2.GL_TEXTURE_2D);
gl.glDisable(GL2.GL_BLEND);
}
{
gl.glColor4d(0.6666667, 0.6666667, 0.6666667, 1.0);
int[] indices = {
4,5,6,7,6,5,};
IntBuffer fbi = GLBuffers.newDirectIntBuffer(indices, 0);
gl.glDrawElements(GL2.GL_TRIANGLES, 6, GL2.GL_UNSIGNED_INT, fbi);
gl.glDisable(GL2.GL_TEXTURE_2D);
gl.glDisable(GL2.GL_BLEND);
}
gl.glDisableClientState(GL2.GL_VERTEX_ARRAY);
gl.glDisableClientState(GL2.GL_NORMAL_ARRAY);
gl.glDisableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
}
private void ID153(GL2 gl){
float[] positionsArray = {
142.0417f,43.01504f,0.0f,140.5417f,43.01504f,0.0f,139.0417f,43.01504f,0.0f,};
FloatBuffer fbv = GLBuffers.newDirectFloatBuffer(positionsArray, 0);
gl.glVertexPointer(3, GL2.GL_FLOAT, 0, fbv);
gl.glEnableClientState(GL2.GL_VERTEX_ARRAY);
FloatBuffer fbn = null;
FloatBuffer fbt = null;
float[] texcoordArray = null;
{
gl.glBlendFunc(GL2.GL_SRC_ALPHA, GL2.GL_ONE_MINUS_SRC_ALPHA);
gl.glEnable(GL2.GL_BLEND);
gl.glColor4d(0.0, 0.0, 0.0, 1.0);
int[] indices = {
1,
0,
2,
1,
};
IntBuffer fbi = GLBuffers.newDirectIntBuffer(indices);
gl.glDrawElements(GL2.GL_LINES, indices.length, GL2.GL_UNSIGNED_INT, fbi);
gl.glDisable(GL2.GL_BLEND);
}
gl.glDisableClientState(GL2.GL_VERTEX_ARRAY);
gl.glDisableClientState(GL2.GL_NORMAL_ARRAY);
gl.glDisableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
}
private void ID159(GL2 gl){
float[] positionsArray = {
140.5417f,76.35952f,-1.5f,139.0417f,76.35952f,-1.5f,};
FloatBuffer fbv = GLBuffers.newDirectFloatBuffer(positionsArray, 0);
gl.glVertexPointer(3, GL2.GL_FLOAT, 0, fbv);
gl.glEnableClientState(GL2.GL_VERTEX_ARRAY);
FloatBuffer fbn = null;
FloatBuffer fbt = null;
float[] texcoordArray = null;
{
gl.glBlendFunc(GL2.GL_SRC_ALPHA, GL2.GL_ONE_MINUS_SRC_ALPHA);
gl.glEnable(GL2.GL_BLEND);
gl.glColor4d(0.0, 0.0, 0.0, 1.0);
int[] indices = {
1,
0,
};
IntBuffer fbi = GLBuffers.newDirectIntBuffer(indices);
gl.glDrawElements(GL2.GL_LINES, indices.length, GL2.GL_UNSIGNED_INT, fbi);
gl.glDisable(GL2.GL_BLEND);
}
gl.glDisableClientState(GL2.GL_VERTEX_ARRAY);
gl.glDisableClientState(GL2.GL_NORMAL_ARRAY);
gl.glDisableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
}
private void ID163(GL2 gl){
float[] positionsArray = {
139.9796f,138.7078f,-1.5f,140.5417f,139.4339f,-1.5f,141.1038f,138.7078f,-1.5f,};
FloatBuffer fbv = GLBuffers.newDirectFloatBuffer(positionsArray, 0);
gl.glVertexPointer(3, GL2.GL_FLOAT, 0, fbv);
gl.glEnableClientState(GL2.GL_VERTEX_ARRAY);
FloatBuffer fbn = null;
FloatBuffer fbt = null;
float[] texcoordArray = null;
{
gl.glBlendFunc(GL2.GL_SRC_ALPHA, GL2.GL_ONE_MINUS_SRC_ALPHA);
gl.glEnable(GL2.GL_BLEND);
gl.glColor4d(0.0, 0.0, 0.0, 1.0);
int[] indices = {
1,
0,
2,
1,
};
IntBuffer fbi = GLBuffers.newDirectIntBuffer(indices);
gl.glDrawElements(GL2.GL_LINES, indices.length, GL2.GL_UNSIGNED_INT, fbi);
gl.glDisable(GL2.GL_BLEND);
}
gl.glDisableClientState(GL2.GL_VERTEX_ARRAY);
gl.glDisableClientState(GL2.GL_NORMAL_ARRAY);
gl.glDisableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
}
}
